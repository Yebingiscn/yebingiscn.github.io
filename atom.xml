<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>叶绿素b的博客</title>
  
  
  <link href="https://yebingiscn.github.io/atom.xml" rel="self"/>
  
  <link href="https://yebingiscn.github.io/"/>
  <updated>2025-05-31T11:40:58.000Z</updated>
  <id>https://yebingiscn.github.io/</id>
  
  <author>
    <name>叶绿素b</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yebingiscn.github.io/2025/08/21/hello-world/"/>
    <id>https://yebingiscn.github.io/2025/08/21/hello-world/</id>
    <published>2025-08-21T14:12:17.670Z</published>
    <updated>2025-05-31T11:40:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>OHOS 编译三方库（Rust）</title>
    <link href="https://yebingiscn.github.io/2025/07/14/OHOS%20%E7%BC%96%E8%AF%91%E4%B8%89%E6%96%B9%E5%BA%93%EF%BC%88Rust%EF%BC%89/"/>
    <id>https://yebingiscn.github.io/2025/07/14/OHOS%20%E7%BC%96%E8%AF%91%E4%B8%89%E6%96%B9%E5%BA%93%EF%BC%88Rust%EF%BC%89/</id>
    <published>2025-07-14T09:18:53.000Z</published>
    <updated>2025-07-14T09:49:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>最近业余时间都在做一个鸿蒙 NEXT 的视频项目（流心视频），大家都知道鸿蒙 NEXT 是一个基于 arkts 的全新系统。Arkts 生态还是比较原始，特别是音视频开发领域，如果只是依赖系统提供组件开发很容易出现这也不支持、那也不支持的情况。比如系统播放器不支持杜比、DTS 音轨输出，这就需要我们引入三方库中的第三方播放器，比如 ijkplayer，但是他们也都有各种各样的问题，在开发中就不可能只局限于 arkts 表层必须深入底层，自己造轮子。（其实是把别人造的轮子搬过来）<br>播放器难度还是很大的，涉及到方方面面，搬轮子不是件很容易的事情，这次就从一个简单的字幕库出发，学习分享下如何把别人的轮子搬到 arkts 上。</p><h2 id="项目概述"><a href="#项目概述" class="headerlink" title="项目概述"></a>项目概述</h2><p>这是一个字幕库，是基于 rsubs-lib 开发，已经是上架 ohos 中心仓的（<a href="https://ohpm.openharmony.cn/#/cn/home">OpenHarmony三方库中心仓</a>），但是拿下来发现解析的都是 <code>[]</code>，好在原作者开源了源码（<a href="https://atomgit.com/wysp2012/ohos_napi/">ohos_napi · AtomGit_开放原子开源基金会代码托管平台</a>）, 找 AI 修改了下可能有问题的地方，把 rsubs-lib 版本从 0.32 升级 0.33。接下来只要把这个编译成 so 库就好了（其他的原作者都写好了，直接 CV 就完事）。</p><p>下面我们开始编译流程。</p><h2 id="安装编译环境"><a href="#安装编译环境" class="headerlink" title="安装编译环境"></a>安装编译环境</h2><p>编译必须在 Linux 环境下，一般是 WSL 或者 Docker，这里我们方便点就选择 WSL。</p><p>以<strong>管理员模式</strong>打开 powershell，输入之后等待安装重启就可以。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install</span><br></pre></td></tr></table></figure><p>接下来可以阅读下这个文档 <a href="https://doc.rust-lang.org/rustc/platform-support/openharmony.html">*-linux-ohos - rustc 书</a> </p><p>这是 rust 官方的交叉编译文档，可以照着来，也可以喂给 AI 让 AI 生成步骤。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;最近业余时间都在做一个鸿蒙 NEXT 的视频项目（流心视频），大家都知道鸿蒙 NEXT 是一个基于 arkts 的全新系统。Arkts 生态</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>记一次有意思的拜山插曲</title>
    <link href="https://yebingiscn.github.io/2025/03/17/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E6%8B%9C%E5%B1%B1%E6%8F%92%E6%9B%B2/"/>
    <id>https://yebingiscn.github.io/2025/03/17/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E6%8B%9C%E5%B1%B1%E6%8F%92%E6%9B%B2/</id>
    <published>2025-03-17T03:05:00.000Z</published>
    <updated>2025-09-15T15:35:06.185Z</updated>
    
    <content type="html"><![CDATA[<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>昨天回乡拜山，在大概第二座山的时候，山坡下正在清理墓地，我在山坡上小路旁边看着，二婶从小路走过后，跟了个女生引起了我的注意，原因是她好像是我们拜山队伍里的，但是我对她没有印象，这个女生小小个梳个刘海马尾，穿着白色鞋子。</p><p>当时我想“也许这是哪个亲戚吧。刚好这次有远房亲戚来扫墓”后面也没留意这个人，直到兜兜转转几个墓地下山的时候，我的鞋带掉了，我被迫停在路边绑鞋带。绑好之后刚好我二婶刚好走过，这个女生跟在我二婶后。我便在我二婶后面跟下山。</p><p>下山下到一半，这个女生突然走到我旁边还走得比较快（是要超过我），我有点疑惑，不想一个年纪比较大得女生用吐槽的语气对她用普通话说“找了你好久，叫你没反应跟着别人走了（大意）”，她窜进去了一群准备对着一个墓地扫墓的人，从后面钻到了年纪比较大女性旁边，另一个年轻的高高的男生看到她到旁边了拍了拍她说“你怎么这么优秀啊”。然而她什么也没说，只是一脸尴尬（大概是吧），当时我也只是想：哦居然是其他队伍里混到我们队里来的。</p><h2 id="细思"><a href="#细思" class="headerlink" title="细思"></a>细思</h2><blockquote><p>也许是我们太无聊了</p></blockquote><p>后面想想感觉不对啊，说普通话那肯定人生地不熟肯定跟着熟悉的人走啊，无论是她那边男生还是女生都不用干什么的，很难想象会跟错。再有发现不对那肯定原路返回，怎么会到最后才跟着一起下山呢？最后哪怕没有手机也不至于跟错吧。</p><p>不过也许就是起床太早了人傻了，也许上来发现不对到处去找最后才找到。</p><p>虽然我有些细节也记不太清了，但总的来说还是很有意思的一件事情。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h2&gt;&lt;p&gt;昨天回乡拜山，在大概第二座山的时候，山坡下正在清理墓地，我在山坡上小路旁边看着，二婶从小路走过后，跟了个女生引起了我的注意，原因是她好像是我</summary>
      
    
    
    
    
    <category term="生活" scheme="https://yebingiscn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>记一次典型的高并发问题处理</title>
    <link href="https://yebingiscn.github.io/2025/01/17/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%85%B8%E5%9E%8B%E7%9A%84%E9%AB%98%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/"/>
    <id>https://yebingiscn.github.io/2025/01/17/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%85%B8%E5%9E%8B%E7%9A%84%E9%AB%98%E5%B9%B6%E5%8F%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</id>
    <published>2025-01-17T13:38:07.000Z</published>
    <updated>2025-07-14T09:21:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近接手了一个鸿蒙 NEXT 的本地视频播放器项目，出现了一次非常典型的高并发问题，值得记录下。</p></blockquote><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>一个用户连续几个版本在群里说视频导入失败，最开始我没有复现所以没有意识到问题严重性，并且简单归于系统的 API 拉跨，一直没有修想着到时候再处理。后面做新版本的时候想到联系用户让帮忙定位下问题，直到用户发来视频我才意识到情况不妙。</p><h2 id="问题表现"><a href="#问题表现" class="headerlink" title="问题表现"></a>问题表现</h2><p>导入 10 个以上 10 GB 视频时出现如下情况:</p><ol><li>部分视频无法获取时长和分辨率，导致播放失败</li><li>超大视频需要多次重复导入，甚至需要杀掉 APP</li><li>导入后数个视频后有部分视频不显示</li><li>偶现封面乱窜</li></ol><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>最开始我没加上的时候想着也许是导入某个视频失败了，该对象复用导致连续失败。结果问题更严重，封面乱窜的问题让我一下意识到是高并发导致的异常。但究竟是哪里出了高并发问题呢？我用自己的相册视频做了复现，果然有几个异常，然后我查看了数据库，发现数据库里字段已经是获取不到分辨率和时长，那明显是调用的系统 API 问题。再打 log 看系统 API 返回，发现返回确实有问题，而单独导入正常。</p><p>问题找到了：调用方法时没有做线程安全，多个资源争抢系统 API 导致特定视频的返回值异常。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>解决办法也很简单，限制并发数即减少同一时间的视频处理数，降低系统 API 压力。</p><p>于是求助伟大的 GPT 老师。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 持久化视频存储</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">toMetaData</span>(<span class="params"><span class="attr">list</span>: <span class="built_in">string</span>[]</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="variable constant_">CONCURRENT_LIMIT</span> = <span class="number">2</span>; <span class="comment">// 设置较低的最大并发数</span></span><br><span class="line">  <span class="keyword">let</span> index = <span class="number">0</span>; <span class="comment">// 当前处理的文件索引</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">processFile</span> = <span class="keyword">async</span> (<span class="params"><span class="attr">uri</span>: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">    <span class="title class_">ReqPermission</span>.<span class="title function_">persistPermission</span>(uri);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="attr">avMetadataExtractor</span>: media.<span class="property">AVMetadataExtractor</span> = <span class="keyword">await</span> media.<span class="title function_">createAVMetadataExtractor</span>();</span><br><span class="line">    <span class="keyword">const</span> file = fs.<span class="title function_">openSync</span>(uri);</span><br><span class="line">    avMetadataExtractor.<span class="property">fdSrc</span> = file;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> metadata = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>&lt;media.<span class="property">AVMetadata</span>&gt;(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      avMetadataExtractor.<span class="title function_">fetchMetadata</span>(<span class="function">(<span class="params"><span class="attr">error</span>: <span class="title class_">BusinessError</span>, <span class="attr">metadata</span>: media.<span class="title class_">AVMetadata</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">          <span class="title function_">reject</span>(error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(metadata);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>().<span class="title function_">toString</span>();</span><br><span class="line">    <span class="keyword">if</span> ((!<span class="variable language_">this</span>.<span class="property">encryption</span> &amp;&amp; !<span class="variable language_">this</span>.<span class="property">video_meta_data</span>.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">title</span> === file.<span class="property">name</span>)) ||</span><br><span class="line">        (<span class="variable language_">this</span>.<span class="property">encryption</span> &amp;&amp; !<span class="variable language_">this</span>.<span class="property">video_meta_data_encryption</span>.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">title</span> === file.<span class="property">name</span>))) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">encryption</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> file1 = fs.<span class="title function_">openSync</span>(uri, fs.<span class="property">OpenMode</span>.<span class="property">READ_ONLY</span>);</span><br><span class="line">        <span class="keyword">const</span> file2 = fs.<span class="title function_">openSync</span>(sandbox_video + date, fs.<span class="property">OpenMode</span>.<span class="property">READ_WRITE</span> | fs.<span class="property">OpenMode</span>.<span class="property">CREATE</span>);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        fs.<span class="title function_">copyFile</span>(file1.<span class="property">fd</span>, file2.<span class="property">fd</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">video_meta_data_encryption</span>.<span class="title function_">push</span>(<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">setVideoInfo</span>(date, uri, file.<span class="property">name</span>, metadata)); <span class="comment">// Ensure this is awaited</span></span><br><span class="line">          <span class="title class_">PreferencesUtil</span>.<span class="title function_">putPreferencesValue</span>(<span class="string">&#x27;sweet_video&#x27;</span>, <span class="string">&#x27;video_meta_data_encryption&#x27;</span>, <span class="variable language_">this</span>.<span class="property">video_meta_data_encryption</span>);</span><br><span class="line">          fs.<span class="title function_">closeSync</span>(file1);</span><br><span class="line">          fs.<span class="title function_">closeSync</span>(file2);</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">show_list</span> = <span class="variable language_">this</span>.<span class="property">video_meta_data_encryption</span>.<span class="title function_">map</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">date</span>);</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">video_meta_data</span>.<span class="title function_">push</span>(<span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">setVideoInfo</span>(date, uri, file.<span class="property">name</span>, metadata)); <span class="comment">// Ensure this is awaited</span></span><br><span class="line">        <span class="title class_">PreferencesUtil</span>.<span class="title function_">putPreferencesValue</span>(<span class="string">&#x27;sweet_video&#x27;</span>, <span class="string">&#x27;video_meta_data&#x27;</span>, <span class="variable language_">this</span>.<span class="property">video_meta_data</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">processNext</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">while</span> (index &lt; list.<span class="property">length</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> uri = list[index++];</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">processFile</span>(uri);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 明确声明 promises 的类型</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">promises</span>: <span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt;[] = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">CONCURRENT_LIMIT</span>; i++) &#123;</span><br><span class="line">    promises.<span class="title function_">push</span>(<span class="title function_">processNext</span>());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(promises);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 最终更新显示列表</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">show_list</span> = <span class="variable language_">this</span>.<span class="property">encryption</span> ? <span class="variable language_">this</span>.<span class="property">video_meta_data_encryption</span>.<span class="title function_">map</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">date</span>) : <span class="variable language_">this</span>.<span class="property">video_meta_data</span>.<span class="title function_">map</span>(<span class="function"><span class="params">i</span> =&gt;</span> i.<span class="property">date</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用队列限制了处理数量，并用 <code>Promise</code> 来追踪处理进度，保证视频能全部完成导入，解决了显示不全的问题。</p><p>测试相册视频，没问题了。还加上了导入动画和提示，避免了之前的假死问题。</p><p>理论上导入速度可能会有所降低（不过原来也就是 <code>for</code> 循环调用异步返回的系统接口，可能也会变快），不过能正确显示是第一位的，不知道是不是心理作用，加了导入动画我总觉得导入一个视频都变慢了。</p><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>过审后当晚，用户反馈“没问题了，速度变化不大。”之前用户用其他播放器添加较少的视频数没遇到类似问题，看起来那位开发者也处理了类似的高并发问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近接手了一个鸿蒙 NEXT 的本地视频播放器项目，出现了一次非常典型的高并发问题，值得记录下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Matebook黑屏排故</title>
    <link href="https://yebingiscn.github.io/2024/07/18/Matebook%E9%BB%91%E5%B1%8F%E6%8E%92%E6%95%85/"/>
    <id>https://yebingiscn.github.io/2024/07/18/Matebook%E9%BB%91%E5%B1%8F%E6%8E%92%E6%95%85/</id>
    <published>2024-07-18T05:34:05.000Z</published>
    <updated>2025-01-10T15:48:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近一段时间笔记本总是出现间歇性黑屏，看起来像是某种程序卡住重启导致的</p></blockquote><ul><li><p>最开始总以为是驱动问题，但是驱动没有更新的了</p></li><li><p>接着怀疑是 mem reduct 的问题，认为是清理内存的时候导致驱动异常，但是后面发现即便内存使用率不高也会出现这个问题</p></li><li><p>顺着这个思路继续往下走，使用了 360 加速球时常观察、清理内存，发现 dwm.exe（Desktop Windows Mannage）偶现占用内存超过 500M 乃至达到 2G 的情况。重启 dwm.exe 后内存占用恢复 100M 水平，那么很明显 dwm.exe 出现了内存泄漏。</p></li><li><p>在一两天的观察后，发现黑屏再也没有出现了，这么看就是 dwm.exe 长时间高内存占用出现的故障</p></li><li><p><strong>总结</strong>：dwm.exe 内存泄漏导致故障，只要留个心监控内存，在出现高占用(总占用超过 70%)时即使重启，黑屏就不会出现。</p></li><li><p><strong>未来</strong>：可以考虑写个脚本实时监控，如果超过 150Mb 占用即刻重启。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;最近一段时间笔记本总是出现间歇性黑屏，看起来像是某种程序卡住重启导致的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最开始总以为是驱动问题，但是驱动没有更新的了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;接着怀疑是 mem reduct 的</summary>
      
    
    
    
    
    <category term="生活" scheme="https://yebingiscn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>APP测试相关</title>
    <link href="https://yebingiscn.github.io/2024/03/04/%E4%BD%BF%E7%94%A8Windows%E6%93%8D%E4%BD%9CiPhone/"/>
    <id>https://yebingiscn.github.io/2024/03/04/%E4%BD%BF%E7%94%A8Windows%E6%93%8D%E4%BD%9CiPhone/</id>
    <published>2024-03-04T03:33:15.000Z</published>
    <updated>2025-01-10T15:47:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iOS-测试"><a href="#iOS-测试" class="headerlink" title="iOS 测试"></a>iOS 测试</h1><blockquote><p>怎么在 Windows 下操作 iPhone？比如给 iPhone 装测试包？</p></blockquote><h2 id="工具：tidevice"><a href="#工具：tidevice" class="headerlink" title="工具：tidevice"></a>工具：tidevice</h2><blockquote><p>该工具能够用于与 iOS 设备进行通信<br>GitHub - alibaba&#x2F;tidevice: tidevice can be used to communicate with iPhone device<br>GitHub - codeskyblue&#x2F;tidevice3: wrapper for pymobiledevice3 to make it more easy to use.<br><code>pip install tideve</code></p></blockquote><h3 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h3><ol><li>由于目标计算机积极拒绝，无法连接:没有安装（打开）iTunes</li><li>tidevice: socket timeout: iPhone 没有连接上计算机，开 iTunes</li></ol><h2 id="怎么把文件从-mac-移到-Windows"><a href="#怎么把文件从-mac-移到-Windows" class="headerlink" title="怎么把文件从 mac 移到 Windows"></a>怎么把文件从 mac 移到 Windows</h2><p>使用向日葵传输文件功能<br>PS：把 mac 上的文件拖进控制台就能看到文件路径了</p><h1 id="Android-测试"><a href="#Android-测试" class="headerlink" title="Android 测试"></a>Android 测试</h1><h2 id="Monkey"><a href="#Monkey" class="headerlink" title="Monkey"></a>Monkey</h2><p><code>adb shell monkey -p com.standby.idream -s 500 --pct-touch 70 --pct-motion 30 --ignore-crashes --ignore-timeouts --monitor-native-crashes --throttle 200 -v -v 800</code><br><code>monkey monkey -p com.standby.idream --ignore-crashes --ignore-timeouts --kill-process-after-error --ignore-security-exceptions --throttle 200 -v -v -v -s 5 10000000 1</code></p><h3 id="关闭-Monkey"><a href="#关闭-Monkey" class="headerlink" title="关闭 Monkey"></a>关闭 Monkey</h3><p><code>adb shell ps |findstr monkey</code><br><code>adb shell kill pid</code><br>或者<br><code>adb reboot</code></p><h2 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h2><p>遇到<code>more than one device/emulator</code>解决方法<br><code>adb kill-server</code>:这条命令是杀掉 ADB 服务</p><h3 id="覆盖安装"><a href="#覆盖安装" class="headerlink" title="覆盖安装"></a>覆盖安装</h3><p><code>adb install -r &lt;path_to_apk_file&gt;</code><br>-r 和-g 都是用来进行覆盖安装的，但是它们的行为略有不同。<br>-r 选项表示重新安装应用程序，并保留应用程序的数据和缓存。这意味着安装的新版本将替换旧版本，但是旧版本的数据和缓存将被保留。<br>-g 选项表示进行覆盖安装，但不保留应用程序的数据或缓存。这意味着安装的新版本将完全取代旧版本，而不会保留任何旧版本的数据。<br>因此，区别在于-r 会保留应用程序的数据和缓存，而-g 则不会。</p><h1 id="自动化测试"><a href="#自动化测试" class="headerlink" title="自动化测试"></a>自动化测试</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> appium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> appium.options.common <span class="keyword">import</span> AppiumOptions</span><br><span class="line"><span class="keyword">from</span> appium.webdriver.appium_service <span class="keyword">import</span> AppiumService</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"></span><br><span class="line">appium_server = <span class="string">&#x27;http://127.0.0.1:4723&#x27;</span></span><br><span class="line">STANDBY_US = <span class="string">&quot;standby_us&quot;</span></span><br><span class="line">FANCY_CAM = <span class="string">&quot;fancy_cam&quot;</span></span><br><span class="line">STANDBY_US_APP_NAME = <span class="string">&quot;com.standby.idream&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置app的各种连接信息</span></span><br><span class="line"><span class="comment"># @pytest.fixture(scope=&#x27;session&#x27;)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">android_setting</span>(<span class="params">app_name</span>):</span><br><span class="line">    <span class="keyword">if</span> app_name == STANDBY_US:</span><br><span class="line">        option = AppiumOptions()</span><br><span class="line">        option.set_capability(<span class="string">&#x27;automationName&#x27;</span>, <span class="string">&#x27;UiAutomator2&#x27;</span>)</span><br><span class="line">        option.set_capability(<span class="string">&#x27;platformName&#x27;</span>, <span class="string">&#x27;Android&#x27;</span>)</span><br><span class="line">        option.set_capability(<span class="string">&#x27;platformVersion&#x27;</span>, get_device_version())</span><br><span class="line">        option.set_capability(<span class="string">&#x27;deviceName&#x27;</span>, get_devices())</span><br><span class="line">        option.set_capability(<span class="string">&#x27;appPackage&#x27;</span>, STANDBY_US_APP_NAME)</span><br><span class="line">        option.set_capability(<span class="string">&#x27;appActivity&#x27;</span>, <span class="string">&#x27;com.standby.idream.MainActivity&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> option</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_app</span>():</span><br><span class="line">    appium = AppiumService()</span><br><span class="line">    <span class="comment"># 启动 Appium 服务</span></span><br><span class="line">    appium.start()</span><br><span class="line">    <span class="comment"># 应用程序启动后的其他操作</span></span><br><span class="line">    <span class="comment"># 这里可以编写测试代码来操作应用程序</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver = webdriver.Remote(appium_server, options=android_setting(STANDBY_US))</span><br><span class="line">        app_operate_welcome_page(driver)</span><br><span class="line">        <span class="comment"># 关闭应用程序</span></span><br><span class="line">        driver.quit()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="comment"># 停止 Appium 服务</span></span><br><span class="line">        appium.stop()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">app_operate_welcome_page</span>(<span class="params">driver</span>):</span><br><span class="line">    wait = WebDriverWait(driver, <span class="number">10</span>)</span><br><span class="line">    btn = wait.until(</span><br><span class="line">        expected_conditions.visibility_of_element_located((By.XPATH, <span class="string">&quot;//android.widget.Button[@text=&#x27;同意&#x27;]&quot;</span>)))</span><br><span class="line">    btn.click()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_devices</span>():</span><br><span class="line">    adb_command = <span class="string">&quot;adb devices&quot;</span></span><br><span class="line">    result = os.popen(adb_command).read()</span><br><span class="line">    logging.log(logging.DEBUG, result)</span><br><span class="line">    <span class="comment"># 默认会选择第一个设备</span></span><br><span class="line">    devices = [line.split(<span class="string">&#x27;\t&#x27;</span>)[<span class="number">0</span>] <span class="keyword">for</span> line <span class="keyword">in</span> result.splitlines()[<span class="number">1</span>:] <span class="keyword">if</span> line.endswith(<span class="string">&#x27;\tdevice&#x27;</span>)]</span><br><span class="line">    logging.log(logging.DEBUG, devices)</span><br><span class="line">    <span class="keyword">return</span> devices.pop(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># adb shell getprop ro.build.version.release</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_device_version</span>():</span><br><span class="line">    adb_command = <span class="string">&quot;adb -s &quot;</span> + get_devices() + <span class="string">&quot; shell getprop ro.build.version.release&quot;</span></span><br><span class="line">    logging.log(logging.DEBUG, os.popen(adb_command).read())</span><br><span class="line">    <span class="keyword">return</span> os.popen(adb_command).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    logging.basicConfig(level=logging.DEBUG)</span><br><span class="line">    <span class="comment"># connect_app()</span></span><br><span class="line">    get_device_version()</span><br><span class="line">    <span class="comment"># get_devices()</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;iOS-测试&quot;&gt;&lt;a href=&quot;#iOS-测试&quot; class=&quot;headerlink&quot; title=&quot;iOS 测试&quot;&gt;&lt;/a&gt;iOS 测试&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;怎么在 Windows 下操作 iPhone？比如给 iPhone 装测试包？&lt;/</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Windows下使用VM虚拟机安装Mac</title>
    <link href="https://yebingiscn.github.io/2024/03/04/Windows%E4%B8%8B%E4%BD%BF%E7%94%A8VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Mac/"/>
    <id>https://yebingiscn.github.io/2024/03/04/Windows%E4%B8%8B%E4%BD%BF%E7%94%A8VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85Mac/</id>
    <published>2024-03-04T03:21:17.000Z</published>
    <updated>2025-01-10T15:47:30.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>教程<br><a href="https://blog.csdn.net/2301_78077767/article/details/131496025">https://blog.csdn.net/2301_78077767/article/details/131496025</a></p></blockquote><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol><li>VM Ware 虚拟机（用免费的 Workstation 就可以了）</li><li>Mac OS 镜像（需要使用 ISO 格式的，版本低点没关系，可以装了之后升级上来）</li><li>Unlocker 解锁工具，使得 VM Ware 虚拟机支持安装 Mac<blockquote><p>工具地址：<a href="https://github.com/DrDonk/unlocker">https://github.com/DrDonk/unlocker</a></p></blockquote></li></ol><p>根据教程配置好后直接启动就可以了</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>安装后可以 OTA 更新</li><li>虚拟机用不了隔空投送</li><li>内存需要给大些，不然很卡</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;教程&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/2301_78077767/article/details/131496025&quot;&gt;https://blog.csdn.net/2301_78077767/article/de</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>标签生产回归自动化脚本</title>
    <link href="https://yebingiscn.github.io/2024/01/28/%E6%A0%87%E7%AD%BE%E7%94%9F%E4%BA%A7%E5%9B%9E%E5%BD%92%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/"/>
    <id>https://yebingiscn.github.io/2024/01/28/%E6%A0%87%E7%AD%BE%E7%94%9F%E4%BA%A7%E5%9B%9E%E5%BD%92%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/</id>
    <published>2024-01-27T16:28:59.000Z</published>
    <updated>2025-03-31T01:47:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标签生产回归自动化脚本"><a href="#标签生产回归自动化脚本" class="headerlink" title="标签生产回归自动化脚本"></a>标签生产回归自动化脚本</h1><blockquote><p>诞生原因：</p><ol><li>标签特别是离线标签上线往往是扎堆上线，回归测试以往都是手工。时间较长，也比较耗费测试人员精力</li><li>Doris 迁移需要迁移后的数据和已上线的数据进行对比</li><li>之前的实时标签新策略，开发希望测试环境和生产环境的比较有多少差异</li></ol></blockquote><h2 id="以往生产回归流程"><a href="#以往生产回归流程" class="headerlink" title="以往生产回归流程"></a>以往生产回归流程</h2><ol><li>运行源表 SQL，获取 ID 和标签值</li><li>将 ID 和标签值复制到请求体中</li><li>登录跳板机，将请求体粘贴到跳板机，查看并对比返回值<blockquote><p>总结：可以看到大部分都是固定的，只有一小部分需要手工操作。这种是使用自动化的完美范例</p></blockquote></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求参数</span></span><br><span class="line">curl --location --request POST &#x27;http<span class="punctuation">:</span><span class="comment">//xxx:8082/lpm-api/portrait/v1/singleQuery&#x27; --header &#x27;Content-Type: application/json&#x27; --data &#x27;&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1459928190774</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sign&quot;</span><span class="punctuation">:</span><span class="string">&quot;1afa2ff8c41cc0bccfcc1f2e4ba194e2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;appId&quot;</span><span class="punctuation">:</span><span class="string">&quot;ttvoice&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;entityDomain&quot;</span><span class="punctuation">:</span><span class="string">&quot;user&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;entityId&quot;</span><span class="punctuation">:</span> <span class="number">271607410</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labelNames&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;tt_scl_user_extend_slip_read_dcnt_1d&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;client&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;caller&quot;</span><span class="punctuation">:</span><span class="string">&quot;tt-aq&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;ex&quot;</span><span class="punctuation">:</span><span class="string">&quot;tt&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span>&#x27;</span><br></pre></td></tr></table></figure><h2 id="脚本对生产环境影响的思考"><a href="#脚本对生产环境影响的思考" class="headerlink" title="脚本对生产环境影响的思考"></a>脚本对生产环境影响的思考</h2><p>之前对数脚本都是循环点查接口获取标签值，但是在生产环境就不太现实，容易对接口造成一定的压力，这里使用了标签画像平台开放接口提供的多实体多标签查询接口，只需要点查一次接口就可以返回全部数据。另外脚本在实际使用中，一般用于生产回归，只查询 5 个 UID，预计影响不大。</p><h2 id="脚本用到的-Python-包："><a href="#脚本用到的-Python-包：" class="headerlink" title="脚本用到的 Python 包："></a>脚本用到的 Python 包：</h2><h3 id="Paramiko"><a href="#Paramiko" class="headerlink" title="Paramiko"></a>Paramiko</h3><p>Paramiko 是一个用于 SSH 和 SFTP 的 Python 编写的模块。使用 Paramiko 模块能够轻松地编写 Python 脚本来控制 SSH 会话并执行命令或传输文件等操作。</p><blockquote><p>在脚本编写中用于连接跳板机。</p></blockquote><h3 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h3><p>Pandas（Python Data Analysis Library）是一个开源数据分析和处理工具，它提供了一种高效地处理各种格式数据的方式，包括数据读写、数据清洗、数据整合与分析等，在数据分析、科学计算、商业处理等方面得到了广泛的应用。</p><blockquote><p>在脚本编写中用于读写文件，保存结果。</p></blockquote><h2 id="整合现有框架"><a href="#整合现有框架" class="headerlink" title="整合现有框架"></a>整合现有框架</h2><p>对数脚本已经实现了连接 BQ 并运行 SQL 获取结果的能力，怎么将其和对数脚本结合起来避免重复造轮子呢？（因为前文提到生产回归得从 BQ 获取数据再去跳板机查询）</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><ol><li>生产回归自动化脚本作为对数脚本的一个新功能</li><li>在对数脚本中新增了 template_sql.py 作为连接生产自动化脚本和对数脚本的中间件，作为查询 SQL 和组装返回值的模板<ol><li>原有对数脚本引擎部分进行解耦，使 bq_get_datas.get_datas_to_csv 能使用所有的引擎（原来是只支持 Hive，Presto），详细可看对数脚本升级计划（施工中）<br>使用方便：每次只需要将标签名和源表的 SQL 贴过来就可以了（还有选择下引擎）</li></ol></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> com.enum.engine_enum <span class="keyword">import</span> Engine</span><br><span class="line"><span class="keyword">from</span> com.label <span class="keyword">import</span> bq_get_datas</span><br><span class="line"><span class="keyword">from</span> com.label.production_environment_automatic <span class="keyword">import</span> connect_production_environment</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    file_name = <span class="string">&quot;tt_scl_user_extend_slip_read_dcnt_1d&quot;</span> <span class="comment"># 标签名</span></span><br><span class="line">    source_file = <span class="string">&quot;../file/source_&quot;</span> + <span class="built_in">str</span>(file_name) + <span class="string">&quot;.csv&quot;</span> <span class="comment"># 获取源表的文件名</span></span><br><span class="line">    hql = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        SELECT user_id,</span></span><br><span class="line"><span class="string">               COUNT(DISTINCT dt)</span></span><br><span class="line"><span class="string">        FROM ttdw.dwd_tt_log_extend_di</span></span><br><span class="line"><span class="string">        WHERE 1 = 1</span></span><br><span class="line"><span class="string">          AND dt &gt;= &#x27;$&#123;_day&#125;&#x27;</span></span><br><span class="line"><span class="string">          AND dt &lt;= &#x27;$&#123;_day&#125;&#x27;</span></span><br><span class="line"><span class="string">          AND event = &#x27;exposure&#x27;</span></span><br><span class="line"><span class="string">          AND page_id = &#x27;little_note_edit_comment_page&#x27;</span></span><br><span class="line"><span class="string">        GROUP BY user_id</span></span><br><span class="line"><span class="string">    LIMIT 5&quot;&quot;&quot;</span></span><br><span class="line">    str_uid = bq_get_datas.get_datas_to_csv(hql, Engine.PRESTO.value, source_file) <span class="comment"># 获取uid列表</span></span><br><span class="line">    str_uid = <span class="string">&quot;[&quot;</span> + str_uid + <span class="string">&quot;]&quot;</span> <span class="comment"># 进行拼装</span></span><br><span class="line">    connect_production_environment.connect_server(str_uid, file_name, source_file) <span class="comment"># 查跳板机方法</span></span><br></pre></td></tr></table></figure><h2 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_data</span>(<span class="params">out, match_data</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;获取数据&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">match</span> = re.<span class="built_in">compile</span>(</span><br><span class="line">        <span class="string">&#x27;&quot;(\d+)&quot;:\&#123;&quot;[\w\d_-]+&quot;:&quot;(-?\d+|[\w\d\s_.,?-]+|[\u4e00-\u9fa5]+|\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;(?:\s\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;)?)\&quot;\&#125;&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> re.findall(<span class="keyword">match</span>, out.decode(<span class="string">&quot;utf-8&quot;</span>)):</span><br><span class="line">        match_data.append(re.findall(<span class="keyword">match</span>, out.decode(<span class="string">&quot;utf-8&quot;</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">execute_command</span>(<span class="params">ssh, command, uid_list, label_name, source_file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;跳板机主流程&quot;&quot;&quot;</span></span><br><span class="line">    stdin, stdout, stderr = ssh.exec_command(command, get_pty=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接服务器成功！&quot;</span>)</span><br><span class="line">    match_data = []  <span class="comment"># 获取返回值</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> stdout.channel.recv_ready():</span><br><span class="line">            out = stdout.channel.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="built_in">print</span>(out.decode(<span class="string">&quot;utf-8&quot;</span>), end=<span class="string">&quot;&quot;</span>)  <span class="comment"># 确保输出不会与输入冲突</span></span><br><span class="line">            <span class="comment"># 数据处理匹配</span></span><br><span class="line">            get_data(out, match_data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;星卫-堡垒机&quot;</span> <span class="keyword">in</span> out.decode(<span class="string">&quot;utf-8&quot;</span>):  <span class="comment"># 刚进入跳板机界面</span></span><br><span class="line">                stdin.write(<span class="string">&quot;p&quot;</span> + <span class="string">&#x27;\r\n&#x27;</span>)</span><br><span class="line">                stdin.flush()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;hw-bj-dc-job-0001&quot;</span> <span class="keyword">in</span> out.decode(<span class="string">&quot;utf-8&quot;</span>):  <span class="comment"># 选择资产界面</span></span><br><span class="line">                stdin.write(<span class="string">&quot;5&quot;</span> + <span class="string">&#x27;\r\n&#x27;</span>)  <span class="comment"># 选择主机</span></span><br><span class="line">                stdin.flush()</span><br><span class="line">                time.sleep(<span class="number">1</span>)</span><br><span class="line">                stdin.write(<span class="string">&quot;clear&quot;</span> + <span class="string">&#x27;\r\n&#x27;</span>)  <span class="comment"># 因为使用if判断，因此首先进行清屏，避免判断错误</span></span><br><span class="line">                stdin.flush()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Welcome&quot;</span> <span class="keyword">in</span> out.decode(<span class="string">&quot;utf-8&quot;</span>):  <span class="comment"># 进入主机</span></span><br><span class="line">                send_data(stdin, uid_list, label_name)</span><br><span class="line">                time.sleep(<span class="number">1</span>)</span><br><span class="line">                stdin.write(<span class="string">&quot;exit&quot;</span> + <span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">                stdin.flush()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;Host&quot;</span> <span class="keyword">and</span> <span class="string">&quot;exit&quot;</span> <span class="keyword">in</span> out.decode(<span class="string">&quot;utf-8&quot;</span>):  <span class="comment"># 退出主机后需要再退出一次</span></span><br><span class="line">                time.sleep(<span class="number">1</span>)</span><br><span class="line">                stdin.write(<span class="string">&quot;q&quot;</span> + <span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">                stdin.flush()</span><br><span class="line">                show_data(match_data, source_file)</span><br><span class="line">                time.sleep(<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">elif</span> stdout.channel.exit_status_ready():  <span class="comment"># 所有输出已经读取完毕</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> stdin.channel.exit_status_ready():  <span class="comment"># 所有输出已经读取完毕后，需要检测输入是否执行完成</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> stdout, stderr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show_data</span>(<span class="params">match_test, source_file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;展示数据&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n源表值：&quot;</span> + <span class="built_in">str</span>(pd.read_csv(source_file, header=<span class="literal">None</span>).values.tolist()))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;接口值：&quot;</span> + <span class="built_in">str</span>(match_test))</span><br><span class="line">    original_data = pd.read_csv(source_file, header=<span class="literal">None</span>).values.tolist()</span><br><span class="line">    <span class="keyword">for</span> key, point <span class="keyword">in</span> <span class="built_in">enumerate</span>(original_data):</span><br><span class="line">        x = point[<span class="number">0</span>]</span><br><span class="line">        y = point[<span class="number">1</span>]</span><br><span class="line">        found_match = <span class="literal">False</span>  <span class="comment"># 初始化为未找到匹配</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(match_test)):</span><br><span class="line">            <span class="keyword">for</span> tup <span class="keyword">in</span> match_test[i]:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">str</span>(<span class="built_in">int</span>(x)) <span class="keyword">in</span> tup:</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">str</span>(y) != tup[<span class="number">1</span>]:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;\033[1;31m&#x27;</span> + <span class="string">&quot;UID值不匹配请注意！&quot;</span> + <span class="string">&quot;\033[0m&quot;</span></span><br><span class="line">                              + <span class="built_in">str</span>(<span class="built_in">int</span>(x)) + <span class="string">&quot;: &quot;</span> + <span class="built_in">str</span>(y) + <span class="string">&quot; &quot;</span> + tup[<span class="number">1</span>] + <span class="string">&quot;: &quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(x)))</span><br><span class="line">                    found_match = <span class="literal">True</span>  <span class="comment"># 找到匹配</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> found_match:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;\033[1;33m&quot;</span> + <span class="string">&quot;未找到该ID，可能是没匹配上，请手动查找：&quot;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(x)) + <span class="string">&quot;: &quot;</span> + <span class="built_in">str</span>(y) + <span class="string">&quot;\033[0m&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_data</span>(<span class="params">stdin, uid_list, label_name</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;发送数据&quot;&quot;&quot;</span></span><br><span class="line">    label_name = <span class="string">&#x27;&quot;&#x27;</span> + label_name + <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">    stdin.write(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">curl --location --request POST &#x27;http://xxx.com.cn:8082/lpm-api/portrait/v1/multipleQuery&#x27; --header &#x27;Content-Type: application/json&#x27; --data &#x27;&#123;</span></span><br><span class="line"><span class="string">    &quot;id&quot;:1459928190774,</span></span><br><span class="line"><span class="string">    &quot;sign&quot;:&quot;1afa2ff8c41cc0bccfcc1f2e4ba194e2&quot;,</span></span><br><span class="line"><span class="string">    &quot;data&quot;:&#123;</span></span><br><span class="line"><span class="string">        &quot;appId&quot;:&quot;ttvoice&quot;,</span></span><br><span class="line"><span class="string">        &quot;entityDomain&quot;:&quot;user&quot;,</span></span><br><span class="line"><span class="string">        &quot;entityIds&quot;:&quot;&quot;&quot;</span> + uid_list + <span class="string">&quot;&quot;&quot;,</span></span><br><span class="line"><span class="string">        &quot;labelNames&quot;:[&quot;&quot;&quot;</span> + label_name + <span class="string">&quot;&quot;&quot;]</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    &quot;client&quot;:&#123;</span></span><br><span class="line"><span class="string">        &quot;caller&quot;:&quot;tt-aq&quot;,</span></span><br><span class="line"><span class="string">        &quot;ex&quot;:&quot;tt&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;&quot;&quot;&quot;</span> + <span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">    stdin.flush()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_server</span>(<span class="params">uid_list, label_name, source_file</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;uid_list: 获取的uid列表 \n</span></span><br><span class="line"><span class="string">    label_name: 标签名&quot;&quot;&quot;</span></span><br><span class="line">    client = paramiko.SSHClient()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        logging.basicConfig(level=logging.ERROR)</span><br><span class="line">        key = paramiko.RSAKey.from_private_key_file(<span class="string">&#x27;C:\\Users\\TT\\Downloads\\id_rsa_2048.pem&#x27;</span>, password=<span class="literal">None</span>)</span><br><span class="line">        <span class="comment"># 创建 SSHClient 对象</span></span><br><span class="line">        <span class="comment"># client = paramiko.SSHClient()</span></span><br><span class="line">        <span class="comment"># 加载本地 SSH 公钥</span></span><br><span class="line">        client.load_host_keys(<span class="string">&#x27;C:\\Users\\TT\\.ssh\\known_hosts&#x27;</span>)</span><br><span class="line">        <span class="comment"># 连接远程服务器，服务器只支持 rsa-sha 加密，排除其他的，不然会默认选 rsa-sha2-512</span></span><br><span class="line">        client.connect(<span class="string">&#x27;yw-jump.ttyuyin.com&#x27;</span>, port=<span class="number">2222</span>, username=<span class="string">&#x27;yebin&#x27;</span>,</span><br><span class="line">                       timeout=<span class="number">2000</span>, look_for_keys=<span class="literal">True</span>, allow_agent=<span class="literal">False</span>, pkey=key,</span><br><span class="line">                       disabled_algorithms=<span class="built_in">dict</span>(pubkeys=[<span class="string">&quot;rsa-sha2-512&quot;</span>, <span class="string">&quot;rsa-sha2-256&quot;</span>]))</span><br><span class="line">        transport = client.get_transport()</span><br><span class="line">        transport.set_keepalive(<span class="number">30</span>)</span><br><span class="line">        <span class="comment"># 在服务器上执行命令</span></span><br><span class="line">        execute_command(client, <span class="string">&quot;&quot;</span>, uid_list, label_name, source_file)</span><br><span class="line">    <span class="keyword">except</span> paramiko.AuthenticationException <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;认证失败:&#x27;</span>, <span class="built_in">str</span>(e))</span><br><span class="line">    <span class="keyword">except</span> OSError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;远程服务器已断开&quot;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        client.close()</span><br></pre></td></tr></table></figure><h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><p>图略</p><h2 id="提升效率计算"><a href="#提升效率计算" class="headerlink" title="提升效率计算"></a>提升效率计算</h2><p>以 过去 20 天高峰时段密集发送 im 的天数 tt_user_scl_peak_intensive_im_dcnt_20d（Presto 查询，离线标签） 这一个标签为例。使用相同 SQL 如下：<br>使用脚本时间： 用时 52 秒（BQ 显示 SQL 运行时间 24 秒）<br>手工用时：用时 1 分 28 秒（BQ 显示 SQL 运行 18 秒）<br>时间同比减少：（88 - 52）&#x2F; 88 x 100% &#x3D; 40.09%</p><h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><h3 id="SSH-验证"><a href="#SSH-验证" class="headerlink" title="SSH 验证"></a>SSH 验证</h3><p>现在登录跳板机都需要进行 SSH 验证，但是脚本连接的时候总是提示 SSH 验证失败，但是不知道具体是什么原因，查了很久，一开始觉得是秘钥的问题，觉得是没有拿到正确的秘钥，但是 debug 很久也没有结果。后来借助 GPT 询问是否有打印详细日志的办法，得到了这行代码 <code>logging.basicConfig(level=logging.DEBUG)</code><br>经过日志检查发现，原来是 Paramiko 提供了好几种 SSH 解密方法 包括 rsa-sha2-512， rsa-sha2-256 等，然后默认选择了 rsa-sha2-512 导致解密失败（之前代码未指定解密方式）。但是服务器只支持 rsa-sha 加密，所以需要其他的。于是加上了这行代码 <code>disabled_algorithms=dict(pubkeys=[&quot;rsa-sha2-512&quot;, &quot;rsa-sha2-256&quot;])</code> ，就通过了验证。这行代码作用是设定排除列表。</p><h3 id="看不到返回结果"><a href="#看不到返回结果" class="headerlink" title="看不到返回结果"></a>看不到返回结果</h3><p>过了验证这一关，发现服务器一直在等待中，DEBUG 也只有看到心跳信息在返回，其他的什么都没有。<br><code>stdin, stdout, stderr = ssh.exec_command(command, get_pty=True)</code> 直接打印返回的 stdout 什么都没有。<br>于是重新询问 GPT 寻找思路，原来是没有解码，下面是最后实现的代码样式。成功打印出了我们在跳板机看到的东西。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> stdout.channel.recv_ready():</span><br><span class="line">    out = stdout.channel.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="built_in">print</span>(out.decode(<span class="string">&quot;utf-8&quot;</span>), end=<span class="string">&quot;&quot;</span>)  <span class="comment"># 确保输出不会与输入冲突</span></span><br></pre></td></tr></table></figure><h3 id="无法输入数据"><a href="#无法输入数据" class="headerlink" title="无法输入数据"></a>无法输入数据</h3><p>返回结果看到了，现在可以给跳板机输入数据了，但是没法输入数据，<code>execute_command(client, &quot;p&quot;)</code> 和 <code>stdin.write(&quot;p&quot;)</code> 都没反应，继续问 GPT 和查百度，发现得加个<code>/n</code>，但是加了以后也是没有效果，直到 GPT 偶然蹦了一句“部分服务器需要<code>/r/n</code>才可以”，于是尝试了下，还真的是。于是输入问题顺利解决。</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><p>跳板机返回的数据都是以流的形式传回来的，都是一堆数据，怎么找到自己想要的数据呢？我们需要下面的数据特别是 UID 和标签值，</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1459928190774</span><span class="punctuation">,</span><span class="attr">&quot;status&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;error&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;329263525&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_scl_user_extend_slip_read_dcnt_1d&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;327885076&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_scl_user_extend_slip_read_dcnt_1d&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;195828381&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_scl_user_extend_slip_read_dcnt_1d&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;202254368&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_scl_user_extend_slip_read_dcnt_1d&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;197216523&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_scl_user_extend_slip_read_dcnt_1d&quot;</span><span class="punctuation">:</span><span class="string">&quot;0&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>于是问了下大佬，大佬说用正则就可以，并给出了正则表达式，稍微修改了下大佬的表达式<br><code>&quot;(\d+)&quot;:\&#123;&quot;[\w\d_-]+&quot;:&quot;(\d+)&quot;\&#125;</code>即可实现获取 UID 和 Lable 值。<br>不过这种不支持获取中文、英文以及负数，后面修改了下变成了这样。<br><code>&quot;(\d+)&quot;:\&#123;&quot;[\w\d_-]+&quot;:&quot;(-?\d+|[\w\d\s_.,?-]+|[\u4e00-\u9fa5]+)&quot;\&#125;</code><br>但是这种不支持 date 以及 datetime，后来又改了一次。<br><code>&quot;(\d+)&quot;:\&#123;&quot;[\w\d_-]+&quot;:&quot;(-?\d+|[\w\d\s_.,?-]+|[\u4e00-\u9fa5]+|\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;(?:\s\d&#123;2&#125;:\d&#123;2&#125;:\d&#123;2&#125;)?)\&quot;\&#125;</code></p><h4 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h4><p>非贪婪模式：非贪婪模式（也称非贪心模式）是指在匹配字符串时，优先使用非贪婪匹配，即以最小长度匹配模式。<br>捕获组：在正则表达式中，捕获组是指正则表达式中用括号包围的部分，用于匹配和处理一个或多个子字符串，也称为子组。捕获组可以通过 () 或 (?:) 进行定义，其中 () 表示捕获组，而 (?:) 表示非捕获组。</p><h1 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h1><ol><li><p>正则表达式解析出 UID 会少一个<br>（不是必然事件，有部分可以正确识别 5 个 UID）<br>下面是输出示例</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1459928190774</span><span class="punctuation">,</span><span class="attr">&quot;status&quot;</span><span class="punctuation">:</span><span class="number">200</span><span class="punctuation">,</span><span class="attr">&quot;message&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span><span class="attr">&quot;error&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;305899035&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_risk_user_abnormal_pro_gift_amt_3d&quot;</span><span class="punctuation">:</span><span class="string">&quot;5000&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;134543&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_risk_user_abnormal_pro_gift_amt_3d&quot;</span><span class="punctuation">:</span><span class="string">&quot;100&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;288022588&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_risk_user_abnormal_pro_gift_amt_3d&quot;</span><span class="punctuation">:</span><span class="string">&quot;100&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;218752910&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_risk_user_abnormal_pro_gift_amt_3d&quot;</span><span class="punctuation">:</span><span class="string">&quot;200&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;174465858&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;tt_risk_user_abnormal_pro_gift_amt_3d&quot;</span><span class="punctuation">:</span><span class="string">&quot;100&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这是匹配后输出的结果（可以看到第四个被吞了）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="punctuation">[</span>(&#x27;<span class="number">305899035</span>&#x27;<span class="punctuation">,</span> &#x27;<span class="number">5000</span>&#x27;)<span class="punctuation">,</span> (&#x27;<span class="number">134543</span>&#x27;<span class="punctuation">,</span> &#x27;<span class="number">100</span>&#x27;)<span class="punctuation">,</span> (&#x27;<span class="number">288022588</span>&#x27;<span class="punctuation">,</span> &#x27;<span class="number">100</span>&#x27;)<span class="punctuation">]</span><span class="punctuation">,</span> <span class="punctuation">[</span>(&#x27;<span class="number">174465858</span>&#x27;<span class="punctuation">,</span> &#x27;<span class="number">100</span>&#x27;)<span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><strong>猜测</strong></p><ol><li>可能是这种被截断的没有识别到，但是木有证据</li><li>可能是输出的时候没有及时识别到，使用了 time.sleep()，但是没有效果</li></ol></li><li><p>暂时不支持关系型标签、设备，手机号类型标签<br>这两种标签请求体与普通标签的略有区别，特别是设备标签这种中英文混合的 entity_id 需要使用双引号括起来，使用单引号会报错，代码更改起来较为麻烦。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;标签生产回归自动化脚本&quot;&gt;&lt;a href=&quot;#标签生产回归自动化脚本&quot; class=&quot;headerlink&quot; title=&quot;标签生产回归自动化脚本&quot;&gt;&lt;/a&gt;标签生产回归自动化脚本&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;诞生原因：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;标签</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>疲惫与迷茫</title>
    <link href="https://yebingiscn.github.io/2024/01/27/%E7%96%B2%E6%83%AB%E4%B8%8E%E8%BF%B7%E8%8C%AB/"/>
    <id>https://yebingiscn.github.io/2024/01/27/%E7%96%B2%E6%83%AB%E4%B8%8E%E8%BF%B7%E8%8C%AB/</id>
    <published>2024-01-27T15:53:40.000Z</published>
    <updated>2024-12-30T17:29:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="疲惫"><a href="#疲惫" class="headerlink" title="疲惫"></a>疲惫</h2><p>今天是周六，这是进来第二周加班周六，也是第一周加周六日<br>很辛苦，这周只有一次 6：30 回家；今天导师很想留我下来，但是亲戚来了不少，还是说有事走了；9 点的时候瞄了眼手机，导师还在线。唉，这个月加了 10 次到 10 点以后或者准确说 11 点以后。<br>最累的是回到家发现家人都睡了，或者是今天进到餐馆发现一桌人都吃完饭了。在江边写字楼看着是很高大上，只是从早到晚很苦逼。</p><h2 id="迷茫"><a href="#迷茫" class="headerlink" title="迷茫"></a>迷茫</h2><p>点点点有什么意义吗，感觉点一年什么都忘记了，听到他们说标签觉得恍如隔世，偶尔用一次 SQL 查次埋点感觉不得了，偶然间听到导师只会用最基础 <code>select *</code> ，不过导师确实卷业务能力也确实强。还是有很多要学的。<br>希望在职期间能把测试用例写好，然后能在技术上出现一些小贡献。</p><blockquote><p>后记：周六的时候难得回去了老房子，在中心广场看到一个人看着我，可惜戴着帽子。<br>我没认出来是谁，我感觉她也没认出来。变故打断了太多。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;疲惫&quot;&gt;&lt;a href=&quot;#疲惫&quot; class=&quot;headerlink&quot; title=&quot;疲惫&quot;&gt;&lt;/a&gt;疲惫&lt;/h2&gt;&lt;p&gt;今天是周六，这是进来第二周加班周六，也是第一周加周六日&lt;br&gt;很辛苦，这周只有一次 6：30 回家；今天导师很想留我下来，但是亲戚来了不少，</summary>
      
    
    
    
    
    <category term="生活" scheme="https://yebingiscn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>如何升级butterfly主题</title>
    <link href="https://yebingiscn.github.io/2023/12/07/%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7butterfly%E4%B8%BB%E9%A2%98/"/>
    <id>https://yebingiscn.github.io/2023/12/07/%E5%A6%82%E4%BD%95%E5%8D%87%E7%BA%A7butterfly%E4%B8%BB%E9%A2%98/</id>
    <published>2023-12-07T06:28:11.000Z</published>
    <updated>2025-05-16T10:20:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="提前备份主题的-config-yaml"><a href="#提前备份主题的-config-yaml" class="headerlink" title="提前备份主题的 _config.yaml"></a>提前备份主题的 _config.yaml</h1><blockquote><p>为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做）。<br>在 hexo 的根目录创建一个文件 _config.butterfly.yml，并把主题目录的 _config.yml 内容复制到 _config.butterfly.yml 去。( 注意: 复制的是主题的 _config.yml ，而不是 hexo 的 _config.yml)</p><mark class="hl-label orange">注意：不要把主题目录的\_config.yml刪掉</mark><p>注意： 以后只需要在 _config.butterfly.yml 进行配置就行。<br>如果使用了 _config.butterfly.yml， 配置主题的 _config.yml 将不会有效果。</p></blockquote><p>引用自 Butterfly 官方 <a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><h1 id="升级-Hexo"><a href="#升级-Hexo" class="headerlink" title="升级 Hexo"></a>升级 Hexo</h1><blockquote><p>参考链接：<a href="https://blog.csdn.net/qq_33154343/article/details/108301374?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170192443016800222891371%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170192443016800222891371&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-108301374-null-null.142%5Ev96%5Econtrol&amp;utm_term=%E5%8D%87%E7%BA%A7hexo&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/qq_33154343/article/details/108301374?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170192443016800222891371%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170192443016800222891371&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-108301374-null-null.142^v96^control&amp;utm_term=%E5%8D%87%E7%BA%A7hexo&amp;spm=1018.2226.3001.4187</a></p></blockquote><mark class="hl-label green">更新hexo:进入blog目录，执行如下命令</mark><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pnpm install -g pnpm-check           # 检查之前安装的插件，都有哪些是可以升级的</span><br><span class="line">pnpm install -g pnpm-upgrade         # 升级系统中的插件</span><br></pre></td></tr></table></figure><h2 id="更新-hexo-及所有插件"><a href="#更新-hexo-及所有插件" class="headerlink" title="更新 hexo 及所有插件"></a>更新 hexo 及所有插件</h2><p><code>pnpm update</code></p><h2 id="确认-hexo-已经更新"><a href="#确认-hexo-已经更新" class="headerlink" title="确认 hexo 已经更新"></a>确认 hexo 已经更新</h2><p><code>hexo -v</code></p><h1 id="升级-butterfly"><a href="#升级-butterfly" class="headerlink" title="升级 butterfly"></a>升级 butterfly</h1><h2 id="进入-butterfly-目录"><a href="#进入-butterfly-目录" class="headerlink" title="进入 butterfly 目录"></a>进入 butterfly 目录</h2><ol><li>首先，更新工作的状态树：<br><code>git add .</code></li><li>输入如下命令，将文件放在堆栈中，获取更新后，再弹栈：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash pop</span><br></pre></td></tr></table></figure><h1 id="可能会出现的问题"><a href="#可能会出现的问题" class="headerlink" title="可能会出现的问题"></a>可能会出现的问题</h1><ol><li><div class="note danger disabled"><p>Git 部署时报错</p></div><mark class="hl-label default">原因</mark>config.yaml 需要合并以前的内容和新的内容<br><mark class="hl-label green">解决</mark>打开 vs code 合并相关内容 <mark class="hl-label orange">注意不能有重复的</mark></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;提前备份主题的-config-yaml&quot;&gt;&lt;a href=&quot;#提前备份主题的-config-yaml&quot; class=&quot;headerlink&quot; title=&quot;提前备份主题的 _config.yaml&quot;&gt;&lt;/a&gt;提前备份主题的 _config.yaml&lt;/h1&gt;&lt;bl</summary>
      
    
    
    
    
    <category term="butterfly主题" scheme="https://yebingiscn.github.io/tags/butterfly%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>浮云之外的往事</title>
    <link href="https://yebingiscn.github.io/2023/09/12/%E6%B5%AE%E4%BA%91%E4%B9%8B%E5%A4%96%E7%9A%84%E5%BE%80%E4%BA%8B/"/>
    <id>https://yebingiscn.github.io/2023/09/12/%E6%B5%AE%E4%BA%91%E4%B9%8B%E5%A4%96%E7%9A%84%E5%BE%80%E4%BA%8B/</id>
    <published>2023-09-12T15:12:17.000Z</published>
    <updated>2025-10-10T02:07:29.146Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>从没说出口的秘密</strong></p><blockquote><p>这些故事从来没和任何人说过，其实事情也不算稀奇，只是着落在自己身上的时候有种不真实感，所以一直没有开口。</p><blockquote><p>发情期的人类青少年是这样的，荷尔蒙会让他们在随机时间喜欢上随机的人。 —— NGA</p></blockquote></blockquote></blockquote><p><strong>注</strong>：本文所说的经常之类的词语都是夸张手法，实际上可能间隔几个星期、一两个月甚至半年。</p><h2 id="序章"><a href="#序章" class="headerlink" title="序章"></a>序章</h2><p>这些写在本篇的内容，本应该叫历史的。可作者的经历叫历史太过浮夸，作者能写下的也早已失去了历史的严谨和真实，这篇的内容，也只能叫做往事了。</p><p>作者对于曾经的往事，几乎已经淡忘了。像被打碎的玻璃，也只有那么几块，可以映射出原本玻璃的美丽和精致。</p><p>所以浮云之外的往事，确实是浮云之外的往事。因为这些往事如浮云，随风而逝，琢磨不透，只剩下零零碎碎的往事，可以用来回味。</p><p>其实叫往事也不准确，因为那一切有的发生在过去，有的发生在作者脑海，有的压根没发生。</p><p>从作者身边的人来看，过去二十五年的作者也和一面湖水一样没有什么不同。</p><p>但当我告别每天自然醒看着阴暗的天花板，回到闹钟响起必须睡眼朦胧起床的日子，初升的太阳照耀在床上，隔着被子，我感觉自己还是充满阳光的。</p><p>这是个好时光，很适合回忆。</p><h2 id="真正的巧合"><a href="#真正的巧合" class="headerlink" title="真正的巧合"></a>真正的巧合</h2><blockquote><p>这世上真正的巧合是很少的，所有我们认为看似的巧合必有其内在关联。——《神探狄仁杰》</p><blockquote><p>这个女生给我感觉是很奇怪，假如下面大部分都是真的话，应该是最巧合的陌生人也是见过最多次最频繁的陌生人了，陌生人能有这种巧合应该是十分罕见了。只是很抱歉，至今我连她名字都不知道，除此以外她身上也有许多谜团。虽然很多已经是过去时了，但我至今也还在云雾之中看山不是山。<br>这个女生还有点值得说，不知道是不是因为相遇都是片刻，然后就隔很久才有下一次了，还是说我脸盲，我对她只有一个很模糊的印象。</p><pre><code>其实我最想知道的是：**她知道我叫什么吗？**</code></pre></blockquote></blockquote><h3 id="初中篇"><a href="#初中篇" class="headerlink" title="初中篇"></a>初中篇</h3><blockquote><p>初中的事情我已经很难回想起来了，也有些不想回想，但是一切还得从初中说起，就叫她 Y 吧。</p></blockquote><h3 id="番外：家乡和好又多"><a href="#番外：家乡和好又多" class="headerlink" title="番外：家乡和好又多"></a>番外：家乡和好又多</h3><blockquote><p>根据我们的感觉和分析，这和高中之后是一个人，但是初中这位 Y 以后的经历似乎和我们见到的不太符合。直到最近我们才发现这个问题。这个发现让我非常意外，没想到居然能认错一个人接近十年，当然很大一部分原因是之前我们并没有很多的去想这件事。我没办法确认这个人究竟是谁，所以我们这里也还是以 Y 作为主角来阐述。</p><p>在遇到 Y 之前，我对家乡没啥感觉，甚至很不喜欢待在家乡；我跟好又多也没啥关系，这只是我家常去的一个超市罢了。但我没想到，这两个会让我与 Y 产生更深的联系，也许换个角度说，本身的联系就很浓厚，这两个地方只是提供一个契机罢了。</p></blockquote><p>初一的暑假家人和往常一样去到好又多购物，正在商场走着的我目光被从我们的身旁走过了三个女生吸引了过去，她们走到了我们前面，在侧着头交流着什么，年纪和我差不多，都是短袖短裤运动鞋的打扮。这其实也很正常，但我总觉得其中一个人很眼熟……</p><p>初二暑假我和家人在家乡的湖边散步，准备结束时走着走着我注意旁边石凳上坐着的一群人中有个女生在回头看其他地方。我感觉这身影似乎有些眼熟，结束我准备上车的时候我看到了那个女生也跟着家人离开，茫茫夜色下我看着她的侧脸，除了眼熟我没有其他感觉……</p><p>初二的寒假，由于前两个月送巧克力的事情，我有点不敢去好又多了，怕再碰到，但是家里都去你敢不去？也只能去了，在里面却总是有一种不自在的感觉，结果还真的碰到了。我家推着车开始往出口处走，我走着走着回头，我的目光落在对面刚刚走过的一堆人中的一个侧着头看着我的身影，是 Y……</p><p>然而事情并没有到此结束，第二天我就回老家了，当天是情人节，父母开着车在老家县城道路上行驶，我无聊看着窗外。结果我看到了 Y 和她的妈妈奶奶正在过马路，我差点没从椅子上跳起来，直到车从她身边驶过，我的嘴都没有闭上。</p><p>然而事情还是没有结束，当天也是我爸的生日。下午，我和家人去买蛋糕，结果在一条小路上再次相遇了，“woc”，我简直不敢相信自己的眼睛，她拿着一袋排骨，由于小路实在太窄，我们只能等她们先过去之后再过，她一开始并没有看到我，直到她走上台阶抬了头才看到了我，我可以看到她脸上同样出现了惊讶表情，不过好像没有我惊讶，随着她慢慢走过台阶，相遇到此就结束了。</p><p>当天晚上回想起这件事，我还是不太敢相信，我的脑子里不由得浮现了一个念头：她不会也是一个乡下的吧。但这个念头很快就打消了，县城很大，也有很多村子，这怎么可能呢？</p><h3 id="高中篇"><a href="#高中篇" class="headerlink" title="高中篇"></a>高中篇</h3><blockquote><p>初中篇以后的经历根据我们手头掌握的资料来看，似乎许多都是牵强附会，甚至是出了偏差。在此只讲述我们的记忆，不代表事实。如果这个人真实存在的话那她不可能是 Y 必须是另一个人，甚至是一个我们从来都不认识的人，这无疑带来了很多问题？但在下文中我们同样以 Y 作为“主角”来阐述吧。</p></blockquote><p>我的中考考得很差，当然我的水平也就那样，运气也不太好：分高被刷、同分被刷、分低也被刷，志愿全部退档，一个都没有。还好我妈去中考学校展会上拿了几本宣传册，还好我家还有点小钱，隔壁市的一个高中收留了我，不然我可能已经去读中专了（走正规渠道正常录取的，成绩直接和学费挂钩），我爸说因为我小时候在那个城市一个地方生活过一段时间所以得回去“偿还”，我也只能无奈的笑笑。</p><p>整个暑假到刚上高中那段时间，我就再也没见到 Y 了。偶尔我也会幻想下 Y 的去哪了，甚至当初中朋友群在发分班表的时候我也会留意一下。不过想想自己将要横跨整个市去其他城市上学，也没有脸面去思考，只能是种高不可攀的存在吧。我对自己说：“一切都结束了。”可事实却大大出乎了我们的预料。</p><p>我进入了新学校，认识了一个新朋友，他的弟弟在跟我们同一年级的省实最好的班，他经常吹嘘省实有多么多么好，美女如云还能带手机，我心里默默的佩服他有这种弟弟一起长大心态还这么好。那个学校就在我上校车的地方，周日回校经常能看到那些穿着绿色校服返校的学生。</p><h4 id="出现"><a href="#出现" class="headerlink" title="出现"></a>出现</h4><p>为了赶上城市另一边等待的校车，我需要下午 3 点钟开始洗澡吃饭，然后 3 点半准时出发。一个普通的周日，我照常洗完澡，走出阳台，我居然发现了 Y！她还是那副打扮，穿着绿色的校服背着书包。我目送着她消失在我的视野中，只留下了我一脸的震惊。不对啊，Y 怎么会住我这个小区呢？</p><p>突然我想起了两段往事：</p><h4 id="往事一"><a href="#往事一" class="headerlink" title="往事一"></a>往事一</h4><p>初二的暑假，学校为了中考体育达标，暑假要进行打卡，而我喜欢夜跑于是我都是晚上 9 点以后去跑。一天晚上，我跑到中央小广场停了下来，结果我发现了 Y，她背着书包似乎正在回家，我有些吃惊，Y 并不住这个小区，为什么会出现在这里呢？Y 这时候头也转了过来然后又转了回去，我走过广场（Y 其实按原来速度应该是要走在前面的），她才超过了我然后一路走在前面最终进入了尽头的一栋楼。这个暑假的小插曲虽然很奇怪但只发生了一次，我也就没有在意这件事。</p><h4 id="往事二"><a href="#往事二" class="headerlink" title="往事二"></a>往事二</h4><p>我们省的秋天偶尔会有台风，有台风就会停课。这是高中的第一个台风，周五上午我从地铁站出来等公交车，当我抬头看着公交信息牌想看看车还有几站到时，一个身影以很快的速度从我身旁走过吸引了我的注意力，停在了离我不远的左前方，她穿着一身绿色校服，正在把耳机摘下塞进口袋，她一直看着前面，我没有认出来是谁，只是觉得奇怪。车来了，我准备上车，却发现她没有上车而是转身离开。我很疑惑，我甚至觉得自己认错人了，我也就没有过多的去想这件事。</p><p>这两件往事一联系起来我当时就非常吃惊，但由于只是片刻，我也就没怎么放心上。</p><h4 id="绿色身影"><a href="#绿色身影" class="headerlink" title="绿色身影"></a>绿色身影</h4><p>又过了一段时间，已是深秋的一个星期天。</p><p>我和往常一样搭上扶梯准备换乘，就在我从扶梯出来的时候，我头不由自主的转了过去，目光停留在一个正在把头偏向我这边的女生，看不清表情她似乎是在辨认什么。但我马上反应过来了是 Y ，“woc，省实”，她穿着我们这最好高中之一的校服，这个学校刚好也在我校车接送点附近。这超越了我的想象，因为那所高中我了解到我初中进去的人都是全校前 10。</p><p>她发现我在看她之后一会才转过头去，于是我也转回了头但还是感到震惊，突然我的头又自动转过去了， Y 怎么在打电话？只见她把手机放在耳边还尽可能的大范围的扭了下头。直觉告诉我，她并没有在打电话。果然她一会便收回了手机，还滑动了下屏幕，随后便收起了手机，我看不清她的表情，但似乎震惊中带着一些叹息？她再也没回头，直到走下了楼梯。我没有跟着她，而是选择了我常去的地铁尾上车。当然到站出列车的那一刻我还是发现了她，她走的很快，消失在人群中。</p><h4 id="最亲近的陌生人？"><a href="#最亲近的陌生人？" class="headerlink" title="最亲近的陌生人？"></a>最亲近的陌生人？</h4><p>高一上学期很快过去，时间又来到了春节。家里又要去好又多了，我也有点担心会不会碰到，不过我告诉自己“概率很小的”，事实好像确实也没有碰到。不过有件小事：</p><p>我和我爸在等我妈我姐时，旁边传来了声响，我顺着瞥了一眼，一个女生推着车，其他小朋友在旁边附和着玩闹从我们旁边冲过，我爸听到他们在讲家乡话，问我“你信不信他们是（家乡名）的”，随后看了看我又补了句“你信不信”，我想起了 Y，耸了耸肩说了句“有什么信不信的。”</p><p>回去之后偶遇了很多次（这里的‘很多’是相对这么多年春节来说的），有一晚去超市，爸妈拿了拖鞋又不满意又回去换一个，我就在货架旁边玩手机边等他们，不知为何，之前好又多那种感觉又浮现了，我不由自主往右边看，右边走了一群又一群人。似乎确实会出现什么，片刻，又有一群人走过，我继续看着，Y 突然出现，她似乎早知道我在这，她出现的时候就是侧着身子往左看马上对视上了，对视了之后她马上回头了，我呆了一会，大吃一惊然后赶紧走了出去，她跟着一堆人拉了个小推车，我深吸了口气回去接着看手机（其实我也没有完全认出来），接着父母回来了，直到我们离开她再也没往我这边看过一眼。</p><p>当然和下面的相比其他的也就小巫见大巫了。</p><p>大年三十，整个家族都在乡下，我和我姐以及堂弟堂妹爬到了小乡村的山上，俯瞰这个山村。回去的时候，就在转角，我远远看到了 Y 从一个房子走出来，两手搭在她妈妈的肩膀上说什么，我当时完全懵了也有点没认出来。吃完年夜饭，我在房子外面的空地上晃，突然我看到 Y 和一个小胖墩从旁边小路经过，此时我还是不相信自己的眼睛。天色又变暗了一些，准备回县城的家了，我坐上了汽车后排。结果汽车行驶没一会就停下来，我想看看是什么情况，怎么是 Y？Y 和小胖墩搀扶着一个老婆婆，Y 还对婆婆说着什么，我感受到了无比震撼，尤其是我当时耳机里还放着《从你的全世界路过》，我看着 Y 从车旁边走过，感觉 Y 和周围的场景十分的违和。再一转头，汽车已经行驶在了广袤的大地上，我看着天边发红的晚霞和愈来愈暗的天空，我的世界观崩塌了……</p><p>虽然我的世界观崩塌了，但我并没有马上接受这个事实。</p><p>话说这个村是同姓村，虽然离祖屋有点距离但是离我叔修的房子非常近，后面细想觉得这人说不定是啥远远的亲戚，而且这么近感觉也怪怪的。但是后面几年观察了下，也问了下这个村一些情况，结论貌似是纯纯的陌生人，当然这是后话了。</p><p>大年初三我爸开车送完人驶出小路上，我看到了 Y 家开的车准备进入小路，她坐在后排短暂停留了下对视认出我了瞬间从跟旁人聊天的开心变成一脸震惊，回过神来似乎我爸也有些疑惑。对面前排的两个男性似乎也有些疑惑。</p><h4 id="间奏期"><a href="#间奏期" class="headerlink" title="间奏期"></a>间奏期</h4><p>时间来到了高二上学期的十一，我回了老家，我坐在车上一瞥，看到了一堆人，我扫过人群，突然发现了 Y 和走在她旁边的她妈，省实绿色的校服清晰可见，我回过头看着车里感觉有点沉寂，我停了一会说“我刚才居然看到有人穿省实的校服。”我妈说放下了她的手机说“不奇怪啊，这里也有很多人在大城市读书的。”这是我唯一一次看到在家乡且穿着省实绿色校服的 Y。</p><p>我和家人是说家乡话的，在小区的门口，我妈问我共享单车的开通使用，我一一解答后便和我妈走了进小区。刚刚旁边好像路过了三个人，但是我没留意，走着走着我觉得她有点眼熟但是又不像，她提着一袋东西，边走着边低头独自发笑。“不是不是，哪里像了，是 Y 的话我吃屎”我对自己暗暗说到，不过现在回头来看，好像还真的是。</p><p>那时候在小区偶尔也能见到 Y 下午背着书包出去，晚上背着书包回来。可能是去上补习班吧。</p><h4 id="出人意料的反应"><a href="#出人意料的反应" class="headerlink" title="出人意料的反应"></a>出人意料的反应</h4><p>时间来到了高二的寒假，前一晚刚泡完温泉，后一天就直奔好又多去买年货了，不知为何我心里又有一种会碰到的预感。中午去吃了过桥米线，吃完后就进去了商场，这种感觉一直萦绕着我让我都迈不开步子，于是我就跟着我妈去衣服区。</p><p>就在过了转角，突然 Y 就出现了。Y 走在前面，后面跟着的感觉是外公外婆（Y 看着还没外公外婆高，外婆的表情现在回想起来有点担忧）。</p><p>看 Y 的表情好像是在期待什么，Y 穿着粉色羽绒服黑色裤子粉色运动鞋，刚好我们穿着蓝色羽绒服（这下红蓝……）。Y 看着我们往前走了几步，突然 Y 变得很兴奋，转回去对着她外公外婆笑然后又转回来。我大吃一惊，原来以为只是普通的偶遇，Y 的反应还是大大出乎了我们意料。我看着 Y，她的瞳孔变得非常大、双颊似乎还带点红晕，嘴上挂着笑容；她外公外婆反应也挺有意思，看到 Y 的反应两位似乎有点呆滞不自觉的越走越近，外婆的手似乎还想去握外公的手。</p><p>不过当时其实我在想“噢，是个单眼皮。”然后 Y 就和我们擦肩而过了，我妈进了旁边的一家衣服店，我去镜子前照了下镜子。结果一回头，她外公外婆就在店最外的衣服展示柜旁边选衣服（她们是走过了这家店的），Y 在旁边低着头脸有点阴沉有些惊讶，也许她被自己的反应震惊到了？Y 外公外婆选了一会衣服就离开了，Y 也跟着离开了。</p><p>回家的车上我看着窗外的风景回忆起这件事，突然很想知道 Y 的外公外婆和爸爸妈妈会怎么看这件事呢？我妈倒是看起来没有任何反应。</p><p>回去家乡以后一次都没见过了，只有离开家乡的时候在拥堵的车流中我看到了她家的小面包车，然后看到了她的身影，她静静看着窗外一动不动，我瞄了下车里，应该是一家三口。</p><h4 id="校门口奇遇记"><a href="#校门口奇遇记" class="headerlink" title="校门口奇遇记"></a>校门口奇遇记</h4><p>高二那年的寒冬还有一件事，也许跟 Y 无关，也许跟 Y 有关。那是一个周六，我的高中高一高二只放一天半，早上 10 点才放学，于是当我便搭乘校车回到了她学校的附近（校车唯一下车点）。</p><p>下车后，我看着同学们继续向前走，我想了想，独自提前先到马路对面，过了红绿灯的那条路向右走向深处即是省实，向左走即是地铁站。</p><p>我走过了斑马线，准备向左转时一回头看到了一个小小的女生，穿着省实绿色校服，脚上穿着白色运动鞋，头上梳着刘海，笑眯眯的看着我。我转过身有一种被人注视着的感觉。因为被看得多了我很不喜欢这种感觉，所以我直接摘下了耳机，快步离开。这其实也没什么，只是没想到我后面的人也加快了脚步，我甚至能清晰的听到她的脚步，这让我非常的疑惑，我余光似乎也能看到她非常困惑，这让我更加疑惑，一路快走到地铁站，没选择上扶梯，感觉终于消失了，一回头确实也不见了……</p><h4 id="端午节"><a href="#端午节" class="headerlink" title="端午节"></a>端午节</h4><p>很快就临近高三了，这是端午节最后一天，应该是高三前最后一个假期了。我登上了校车准备返回学校，我往进 Y 学校那段路看，我有一种直觉，我会看到 Y。</p><p>果不其然，Y 拖着个大行李箱走过，但是她的眼光却望向我这边似乎在寻找着什么，她仔细地扫过后面那一部车，然后扫过了我这台的车，Y 有点失望的回头了，继续向前。</p><p>我没有在正对着窗的座位，Y 不可能看到我，但我看着这一幕幕真心觉得自己不争气，跑到这么远的地方读书，而她却在全省最好的高中，这是多么大的鸿沟，我的眼眶湿润了，拿手抹了抹，直到她消失在路的尽头，我回头向前，不多时，车子发动了。</p><h4 id="乡下的小路"><a href="#乡下的小路" class="headerlink" title="乡下的小路"></a>乡下的小路</h4><p>高三基本碰不到了，我也很少回家。</p><p>高三临近期末因为得了过敏性紫癜导致腿部伤口严重感染，一直住院到大年二十九才包着纱布出院，我爸妈在讨论要不要回老家了，我说：“还是回去吧。”</p><p>大年初一晚上我在乡下，某种感觉驱使，我站在了门口，我妈在旁边跟一帮亲戚聊天，所以我站的也不算突兀。突然房子边的小路上走过来两个人，我一看这有点像 Y，旁边的男生感觉年龄跟她差不多，比她高一些。Y 披着黑色头发、穿着黑色外套、黑色裙子、黑色裤袜，黑色靴子，在黑夜里有很好的隐身效果。我看了一会，把头转了回来。片刻我的头自动转了回去，我看到 Y 的头从我这边转回去，脸上出现了震惊的表情，Y 边走边低头，嘴一直没合上，一直是一脸震惊的表情，但很快，Y 就从震惊变成了暗暗发笑，笑着笑着，Y 突然兴奋的往前跨了几步，停了下来转过身子对我微笑，仿佛希望我过去。</p><p>我大吃一惊，转过身子时不由自主的对她轻轻摇了摇头；她身旁的男生也大吃一惊，就这样震惊了一会，她身边的男生从震惊回过头，拍了拍她的肩膀走了过去，Y 也就收回表情低着头跟着他离开了。</p><p>现在回过头来想，我觉得我还是不会过去，不仅仅是因为当时我的脚上还包着纱布。</p><h4 id="高中余音"><a href="#高中余音" class="headerlink" title="高中余音"></a>高中余音</h4><p>直到高考我再也没见过 Y 了，当然在高中特别是高三我遇到了很多人很多事，直到今天，我还是很难相信这都是真的。说句实话，虽然这样心里有种虚荣感，但我宁愿要一个平静的高三。</p><p>高考完的那天晚上，父母接我回来，在一家餐馆的饭桌上，我妈问我“有没有哪里想去的？”想了想，我说想去深圳看看。</p><p>第二天全家就去了深圳，上午去了哈工大深圳校区，也是一个很小的学校，但是成绩比我考过的成绩高太多了，我知道自己一辈子都考不上这种学校。下午去了深圳的梧桐山，那天阳光明媚，非常的晒，走着走着，前面插进来了 3 个人。那天我穿的裤子是双层的，还没伞，人都热傻了。我就和父母说了几句，前面有个扛着黑色雨伞的女生听到我们说话，侧了下身子看了看，直接转回了身子倒着走。这让我心里一惊，不仅因为这行为还因为我感觉这似乎是 Y，但不太确定，因为黑色的雨伞我看不太清楚，女生的打扮也和之前我们看到的 Y 不太一样，对面好像也没认出我来，女生倒着走了一会就转回去了。接着我们看到了一条小路，我们就从小路走了，我最后看了一眼这三个人，他们还在朝着前方走去。</p><p>直觉告诉我这故事并没有结束。</p><h3 id="最长的暑假"><a href="#最长的暑假" class="headerlink" title="最长的暑假"></a>最长的暑假</h3><blockquote><p>我的很多同学虽然都住一个小区，但不是同学后我几乎再也没见过他们。</p></blockquote><p>大学前的暑假不时能碰到，规律我大概都知道了，Y 早上来下午回去，虽然大多数都是两人单独碰面的这种偶遇，她也表现出兴奋开心的样子，但始终缄口不言。</p><p>距离上次深圳的偶遇已经过去十几天了，初中朋友发来信息说一起聚聚，家住的远的我赶紧出发。当我到达公交车站时已经是 3 点多，车还没来，我就在站台旁边一边玩手机，好像长椅上有个人偶尔看看我，不过我没在意，车来了。长椅上那个人站起来向我走来（bushi，其实是走向车的后门上车，好吧其实她有对着我看我），我看清了这个人，Y？脚上的白色运动鞋黑色长袜让我感觉 Y 很时髦，Y 上车时候在前面坐下了，我上车时候没有位置了，只能站着。Y 一直在玩手机，车行驶了一段时间，Y 突然扭头回来看我，回看了几次，脸上慢慢带上了欣喜。车上的人渐渐下车了，我坐上了旁边的一个空位，我看到 Y 低着头玩手机，粉红色的界面似乎是 QQ。到站了，我准备下车，没想到 Y 先从座位上站起来向后面走来看着坐在后面的我，原来她也准备在这站下车，Y 笑盈盈的看着我。我只是感觉有点惶恐，仓皇逃离下了车，等我上到天桥回看时，已经没有 Y 的踪迹了。</p><p>有一次我从外面回来，三点多在天桥上看到了了 Y 正在走上天桥。Y 的后面跟着个小男孩，可能也就 3，4 岁？Y 在前面走，小朋友就在后面追，试问有多少人带这么小的小朋友能做到这样的？不得不说句确实厉害。当时我甚至忽视了 Y 的表情，注意力都集中到了小朋友身上，我真的很想揶揄她“你儿子这么大了”，“怎么你带小孩让小孩跑后面，这么心大吗”，但我最终没有说出口，可能我确实不是上条当麻。</p><p>成绩出了，偏低但也在预料之中，无非是戳破了幻想而已。今天是回校开会填志愿的日子，预计错时间出发晚了，不过我也不着急。等我换乘地铁的时候我注意到一个穿着省实绿色校服的女生，她正在盯着手机表情有点呆滞（虽然很不礼貌，但她在看 QQ 群消息），我没有在她旁边等地铁。回到学校之后，聊天谈起朋友他弟，朋友告诉我，省实今年考砸了，他弟只能上个中大。说起这话的时候想到两人的成绩，都有点苦笑，别人考得再砸也不是我们这群学渣能赶上的。</p><p>我爸常年在外地工作，于是我也跟着母亲去玩了一段时间，一天接到电话，我们便飞回了家。</p><p>到家的时候吃完饭走在回家的路上的时候已经 6 点多了，我在路上走着，前面是一个环岛，我没和家人走左边而是拉着行李走了右边，突然猛地一抬头，“woc”，我暗暗惊呼，Y 在另一条路向这边走来，看到我抬起了头她愣了片刻便掉了个头，我仔细看了下，Y 似乎手上拿着薯片，身上穿着短袖裙子运动鞋。身上的裙子吸引了我，是一条黑色的裙子上面印了好几只狗，这让我想起了刻板印象中的抖音土味裙。Y 慢慢地下了台阶，似乎在向我靠近，但似乎又在想着什么，最终她又上了台阶，走在了一条和我平行的道路，随着我妈的催促，我加快了脚步，进入了我家楼下，我在余光中看到，Y 慢慢的走着，偶尔吃一片手里的薯片，好像还在思考着什么。</p><p>我有斜视，像 Y 还有我高中的一些（会写进这种故事里的）女生相遇的时候会扭头过去看，然后又扭头回来，看看我们然后又扭头过去。起初我并没有看懂这些女生在干什么，后来想想也许是以为我们在看别的地方（扭的方向就是斜视的方向）。虽然斜视除了外观和队列时站不齐对我也没啥太大的副作用，但我还是决定把它解决了，这次我接到电话也是为了这个。</p><p>明天就要做手术了，我决定买个拐杖，但是又没有拐杖，所以决定吃完饭后去对面的超市买个长柄雨伞做拐杖。买完回来在天桥上，我慢慢的走着，突然对面一群人中窜出了一个女生，还有点很开心的样子，她走到和我相对的位置放慢了脚步看着我，对面的人群中一个男生用本地话对她喊道“小妹，返去路上小心滴。”她扭头挥了挥手“得啦，拜拜。”口音非常的标准。她回头又看了看我（原因可能是她还没有走到天桥出口），然后便下了天桥走向了公交车站。</p><p>闲暇间曾经想过要不要试一试？不过我觉得她高中这么好了，大学肯定也不一般。而我即将去一个遥远的海港城市上大学，那里最好的也就是一个一本大学，这不妥妥异地？那还是算了，然而未来几年的事情会完全出乎我们的意料。</p><p>已经是 9 月了，朋友陆续开学了，一天早上我和我妈去打乒乓球，走到一半，我远远的看到有个年龄比较大的带着墨镜的女生手上拿着袋子，里面装着菜；这没什么奇怪的，只是虽然她带着墨镜我却感觉她似乎在看我，她脸上的表情似乎有点意味深长，我只是感觉有点奇怪但没当回事，这一天也过得很平静。</p><h3 id="大学篇"><a href="#大学篇" class="headerlink" title="大学篇"></a>大学篇</h3><h4 id="国庆节车站"><a href="#国庆节车站" class="headerlink" title="国庆节车站"></a>国庆节车站</h4><blockquote><p>当时其实没觉得有什么，后面想想感觉还是不对，还是写上来吧</p></blockquote><p>大学第一个国庆节很快就结束了，我在高铁站准备回学校了，没有坐黑车，没有等排长队的滴滴，而是选择了坐一个小时公交车回学校，毕竟大学生最不缺的就是时间。</p><p>坐不到学校，只能坐到车站再换一辆车。</p><p>就在我在车站等车时，猛地一回头看到一个女生面朝我走来（戴着白色帽子？我记不清了），看到我回头，她猛地停住（她的表情我不好形容，反正我觉得不是路人），我还以为是我们班的，之后她一直停在面向我的位置刷着手机。车来了，我上车，她还在继续刷着手机，只留下我的一脸疑惑，也许真的是路人吧。</p><h4 id="深秋的午饭时间"><a href="#深秋的午饭时间" class="headerlink" title="深秋的午饭时间"></a>深秋的午饭时间</h4><p>转眼已经是深秋了，一节烧脑的 C++课刚刚结束，又到了午饭时间，我和两位舍友照例去隔壁饭堂吃午饭。我们跟随人群像往常一样走上食堂 2 楼，穿过排队的人流，突然我的头转了过去，我的视线停留在一个女生上，她赶紧低下了她的头，这人好像有些熟悉，我远远的看到她的盘子里已经吃了一大半了，只留下了些青菜。</p><p>很快我们便找到位置坐下了，偶尔我还会瞄到那位女生，她坐在偏僻的角落里，呆呆着望着前方，似乎在思考着什么东西。时间一分一秒的过去，我们的饭也吃完了，舍友们开始讨论起另一位舍友。这时我看到那位女生拿起盘子离开了座位准备离开了，与此同时舍友讨论完了也准备离开了。起身的那一刻不知为何，我看着她愣住了。</p><p>女生放好碗筷准备走的时候可能是感受到了目光往我这边看了一眼，随后很开心的往前跨了几步，和年初的大年初一那晚一模一样，是 Y？我大吃一惊，我赶紧过去放碗，走过去的时候她虽然在走但也没走几步，好像有意等我似的。走近了我才知道为何没有认出来了，她原来是将前面的刘海往后扎起来了后面梳一个马尾，而今天她的刘海放下去了，后面则绑起了两个丸子头。虽然她还是慢慢走在我们前面，但我也还是在震惊之余照常跟室友转向了回宿舍的道路。</p><h4 id="没有下次的下次"><a href="#没有下次的下次" class="headerlink" title="没有下次的下次"></a>没有下次的下次</h4><p>大一很快就结束了，时间来到了大一的寒假。</p><p>一天下午我从外面玩完回来，时间已经是 3 点多，刚下公交车没几步，就抬头看见了还在天桥上看着我的 Y，Y 看着我似乎表情有点凝重，我慢慢走向天桥，Y 也准备下天桥了。</p><p>看来一场相遇在所难免了，我的脑中瞬间浮现了《你的名字》里的场景，这不得让我有种电影般的虚幻感，也想起了去年大学饭堂的那一次相遇。我陷入了思考，究竟要不要打声招呼呢或者是要个微信呢？我抬头看了看 Y，但 Y 表情我不知道怎么形容，但感觉好像就是从没见过的陌生人或者是跟我们不想有任何关系的路人，我继续走着，心里出现了念头“下次吧”。</p><p>Y 嘴巴嘟着，眼睛看着脚下的台阶，Y 越来越近，这种念头也原来越重，随后我下了决心，“下次再说吧”。就这样我和 Y 擦肩而过，上了天桥我回头望去，Y 还在下天桥，Y 用手臂盖住眼，就这么走了几步，Y 放下了手快速走下了天桥进入公交车站，看得我差点想倒回去，但我重新迈开了脚步走向了回家的道路……</p><p>我觉得已经结束了。</p><p>过年前的几天，我家要回乡下帮忙，我无聊拿着杯茶靠在门口看着小路，就在我喝茶的时候，小路里跳出了一个开心的 Y 看着我，嘴里的茶差点没喷出来，我赶紧进屋缓一下，等我回过头，那条小路就如往日一般平静。</p><h4 id="疫情余波"><a href="#疫情余波" class="headerlink" title="疫情余波"></a>疫情余波</h4><p>疫情已经很严重了，只能窝在家乡的房子里，我觉得太无聊了就跟父母说回城市去，于是我们就回去了城市，但是在城市的家中也是呆在家里。</p><p>过了一两天我突然收到了一个消息：</p><p>“你在家么”</p><p>发信息给我的是一个平时没怎么联系但是关系比较近的小学和初中同学。</p><p>“在啊，有事么”<br>“没事了”</p><p>这回答让我一头雾水，这位同学朋友圈还在外省，怎么突然问我在不在家呢？</p><p>过了一两天，傍晚我走出阳台，无意中看到了 Y 和她的家人拖着行李回来。</p><p>很快在家便开始了上网课，偶尔也能遇到，比如打个球回来看到 Y 穿着粉色睡衣和拖鞋路过我家楼下，然后向里面张望；比如我和我妈打球出来碰到 Y 和另外两人走向离开小区的方向，我一开始还没有留意，Y 的家乡话才吸引了我的注意力，那是我唯一一次听到 Y 说家乡话；比如一天下午我走出阳台，然后就看到了背着书包正在走路的 Y，她似乎感受到了目光居然也扭过头看我这个方向还带点震惊，我不知道她有没有看到我，目送着她进了她家楼下……</p><p>期末考试很快就到了，下午就是英语线上考试，中午就不准备在家煮饭了，去沙县大酒店解决一餐。去到沙县里面只有一个女生在吃，我走到她旁边的桌上点了份拌面然后打开微信看考试内容和通知，过了不知道多久，旁边的女生吃完了，她看到我似乎有些惊讶，但很快就付款结账离开了。我继续吃，等吃完了回家转角处又碰到了那个女生看着手机往这边走，奇怪的是，那个女生看到我就转身然后就远远跟着直到我进了楼。</p><h4 id="火车站奇遇记"><a href="#火车站奇遇记" class="headerlink" title="火车站奇遇记"></a>火车站奇遇记</h4><p>10 月 1 日，海港城市的高铁站。我定了下午两点的高铁票，走进高铁站，里面很多人，前面走过了一个女生，她突然回头脸上一脸的震惊，我找了个空的座位坐下抬头看到她走向了远处在检票口排队的一群女生，一个个子很高的女生把行李箱给她。过了一会，我看了下手机，发现我的检票口应该在一楼，所以我就离开了。</p><p>是不是一个国庆已经记不清了。</p><p>10 月 7 日我和同学约好了一起回去。高铁站人很多滴滴压根打不到车，同学就带着我去排出租车的队伍。排着排着我后面来了两个女生，一个矮的一个高的，似乎她们之前还在聊什么，结果矮的女生莫名其妙的很靠近我，她的头向前伸着低着头刷着手机，我的右手似乎只要轻轻一抬就能打落她的手机然后打中她的头，一低头就能瞄到她在慢慢的刷着朋友圈。她后面那个高高的女生在后面自顾自的刷着手机。过了一会我的朋友告诉我滴滴有人接单了，我赶紧扭一下出去免得撞到她，我走出去回头，那个女生刷着手机往前走填补了我们的空位（背了个书包，有没有刘海戴没戴眼镜我不记得了），她和前面和后面都保持着跟别人一样的距离，似乎什么也没发生过。</p><p>我没有认出来是谁。</p><h4 id="国庆那些事"><a href="#国庆那些事" class="headerlink" title="国庆那些事"></a>国庆那些事</h4><p>国庆节我姐请我去看电影《哪吒》，这片子只能说差强人意吧，播完电影我不由得说了句“就这？”右前方的一个女生看了看我，回头戴上了白色的帽子，回家路上，我又碰到了那个白色帽子的女生，她独自一人边走边刷着手机。</p><p>隔了几天的傍晚，我和我姐走向家楼下，准备从楼下进入地下停车场。就在我走向楼下时，左边路上一个女生看到我露出了笑容然后慢慢地走来，我有点奇怪，但也没啥就这样照常走进了楼下。</p><h4 id="大学未解之谜（其一）"><a href="#大学未解之谜（其一）" class="headerlink" title="大学未解之谜（其一）"></a>大学未解之谜（其一）</h4><blockquote><p>未解之谜第一怪在时间，这时间似乎只能住我们学校了；第二怪在次数，就这么几次，后面没了；第三怪在行为和表情，这个不多说；第四怪在装扮，我们只见过很少几次放下刘海的 Y，而这里我们看到的大都放下来的；最后我们看到所有似乎都是单独一人。</p><p>我也没听说过外校有谁来，而且也不可能住我们学校的宿舍。</p></blockquote><p>大二上学期因为要体测，不得不每天晚上去跑步。</p><p>一天周日的晚上我去跑步，出宿舍已经是 9 点多了。就在走向台阶准备下台阶去操场时，突然远处有个有刘海的女生非常惊讶的看着我，我很奇怪，都学期过去一半了怎么还有人有这个表情。她非常惊讶地走向我，我赶紧小调了下方向让大家不要撞车，调了几次，最后大家擦肩而过，她的表情非常震惊一直看着我，而我却非常疑惑一方面我认不出来是谁，另一方面我觉得如果是 Y 的话这么会这么晚在这呢？就算是 Y 去年不也来过么，为什么这么惊讶？</p><p>我回看了一眼，她似乎正在朝着女生宿舍走去，那时只有我们学院的女生才住那栋宿舍。</p><p>周四的计算机网络需要连上四节，两节理论两节实验，上完理论课就去实验楼上实验课。我由于关灯晚了点过去，就在准备从小路上过去的时候，前面突然窜出了一个戴着白色的帽子、穿着白色运动鞋，背着书包的女生笑眯眯看着我，而且还走上了我准备走的路，透过白色帽子，我看到了眼镜以及她开心的表情。我改了方向，没想到她也改了方向，于是我就没有走上小路，她看着我一脸开心擦肩而过。</p><p>直到今天，我也没搞明白这是谁？这好像是 Y，但这是住我们学校了吗？在我们学校上课？</p><h4 id="魔幻一刻"><a href="#魔幻一刻" class="headerlink" title="魔幻一刻"></a>魔幻一刻</h4><p>大二的寒假没啥特别的。</p><p>我和父母在楼下打羽毛球，打着打着走过来一对男女，女生走在前头看到我看她似乎有点得意（我感觉眼熟便多看了一会……）。男生比女生高一些，然后她们就在我们旁边开始打羽毛球了，女生边打边说“就这？”“就这？”我听了都感觉刺耳，对面的男生却一言不发默默打球。很快我们打完就走了，她们还在打。我没有认出来是谁。</p><p>大年三十，按照乡下的习俗是要去拜族祠（一个村也就一个）。从祠堂出来无所事事的我在旁边等亲戚们搞定，我右边的房子就是我在乡下第一次看见 Y 的地方，那里现在都是人，我对面越过池塘就是我叔的房子（祖屋还在更远的位置）。过了一会我似乎感受到了什么，我往右边看去，Y 不知道什么时候坐在小板凳上面向我这个方向低头玩着手机（她旁边一个人都没有），她的头低到我几乎看不到她的脸。我妈他们也出来了，只等收尾工作结束，此时一股魔幻的感觉涌上我心头：</p><p>就在这咫尺之隔居然坐着一个在数十公里外的县城住在隔壁小区、在远隔数百公里外的一线大城市里住在一个小区、高中大学都上跟我很近学校的同龄人！还是个女生！而且大家都是渐渐的才知道这重身份！等到这时事实指向其实已经比较明显了：完完全全的陌生人，可能只有姓是相同的。这事放到知乎都过分了，如果不是多年多次亲眼所见，我个人绝不可能相信这事情。</p><p>直到这时，我才勉强能接受这个事实：仅限于 Y 跟我一个村这件事。</p><p>随着收尾工作结束，我们一行人转身像背着 Y 的方向离开。</p><p>回到城市之后一天下午我走出阳台，我一低头惊讶的发现 Y 正在抬着头看着我这个方向，往我家楼下方向走来，我赶紧靠在栏杆上想看得更清楚，Y 似乎看到了我然后赶紧低下了她的头，然后走了一圈离开我的视线……</p><h4 id="漫长的电梯"><a href="#漫长的电梯" class="headerlink" title="漫长的电梯"></a>漫长的电梯</h4><p>寒假已经进入尾声了，一天下午我正准备和我妈去打乒乓球。因为某些事耽搁了下走出去按了电梯，此时电梯刚刚从一个高我们几楼的方向下来，电梯开门了，里面有个去其他楼层的老爷爷，还有一个女生，侧着身望着知乎“理财”广告在想着什么。刚进去的时候我还以为她是带着婴儿车的少妇。</p><p>过了一会儿我的目光却不由自主的被她小腿上的 ❀ 吸引了过去，一种莫名的好奇驱使我辨认出这究竟是纹身还是丝袜上的花纹，我反复的告诉自己这有什么关系，这样不礼貌才扳回了眼睛，此时她还在侧着身呆呆望着望着知乎“怎么理财”的广告，过了很多楼老爷爷都走了，她才从沉思中回来然后才发现，虽然我没有看她但是余光里她的第一反应是惊讶然后是开心，电梯还在往下，我觉得无聊拿出手机来刷了下才发现她怎么整个人侧过身子来伸长脖子看我的手机，脸上还带点疑惑。我这才发现不对…… 我收回手机后她一直涨红了脸盯着我，后面我妈也发现了。</p><p>终于等到 1 楼电梯门开的时候我却感受到了周围散发的一种怅然若失。我第一个出去，走出去的时候她就在我后面跟着我，我妈越过我快速走了出去。也许是我理解不了这种情感我满脑子的疑惑，过大门的时候我甚至很想给她留门…大门之后就是分岔路她蹦蹦跳跳的走向另一个方向了，我妈边走还回头看了几眼。</p><p>这个女生也只能是 Y 了，但这个过程如果配合上脚上的纹身，特别反差，特别匪夷所思。</p><p>我一直很好奇为啥她会来我这栋，在家的最后一天傍晚我买了巨量的汉堡王，下去打印永远都有问题的回校申请表。回来的路上，我看到了 Y 和她妈在散步，两个人都是一样的装扮，裙子光腿神器靴子，Y 路过我那栋的时候扭头往里面张望，不知道她知道我在她们后面么……当晚我妈告诉我为什么不去楼上打印店，我才恍然大悟，原来是去拍照的。</p><h4 id="图书馆奇遇记"><a href="#图书馆奇遇记" class="headerlink" title="图书馆奇遇记"></a>图书馆奇遇记</h4><blockquote><p>我不是那种受欢迎的人，比如图书馆一见钟情，比如被人送上情书要微信。</p><p>而且我们学校的图书馆因为是在旧校区，只有一个学院的人还没有网也不方便充电，所以平时很少有人去图书馆。</p></blockquote><p>3 月 4 日，我唯一记录了的时间。</p><p>一天晚上朋友叫我去图书馆，我们去了二楼坐下，斜对面有个女生在写英语，小小个刘海戴个眼镜脚上穿着白色的鞋子以及黑色的袜子，当时认为那个女生是隔壁专业的，但后来再也没见过那个系着青蛙的黑色书包了。</p><p>其实也没什么就是不断去看那个女生，那个女生也注意到了（具体谁先开始这个不清楚了），像我上个厕所回来或者打个哈欠她就会抬下头。朋友提醒我走了，我走的时候没忍住看了一眼结果她马上收书包，这不是最让我意外的，更离谱的是走的时候我绑个鞋带她就在那里站着看着我，边绑鞋带边感受着穿过空无一人的桌椅注视的目光…… 绑完才走，（她那里更靠近楼梯），她走的时候边看手机并且似乎是有意放慢步伐让我能赶上她，我慢慢跟几步随后摇了摇头让自己不要上头了，赶紧跟上已经在一楼还书的朋友，我最后看到她正在往校门外走去。</p><p>我没有对朋友说这次奇遇，他全程背着，没有看到这一切。</p><h4 id="大学未解之谜（其二）"><a href="#大学未解之谜（其二）" class="headerlink" title="大学未解之谜（其二）"></a>大学未解之谜（其二）</h4><blockquote><p>我曾经想过其他的可能性，但是几年都没有见过的见到估计都认不出了。</p></blockquote><p>大二下学期，3 月的一个下午，上完了第一节课程没课了走回去宿舍，下课和上课的人交织在一起。走到一半，突然我看到远处来人吃了一惊，马路对面好像是 Y，只有她一个人还背着书包…… 当时我满脑子都是疑惑，来人也很震惊，Y 走了几步便走过马路开始往我这边走过来，走到我旁边的时候她侧头看我（似乎她也很惊讶）……</p><p>当时我满脑子都是疑惑：她是谁？她从哪里来？她为什么在这里？她要到哪里去？</p><p>现在回看我写的总结好像还有其他的未解之谜，但是我已经记不清了。</p><h4 id="520-和其他"><a href="#520-和其他" class="headerlink" title="520 和其他"></a>520 和其他</h4><p>大二下学期，大学的插曲也出现了，一切都让我太熟悉了。转眼就到了 520，那天我上午 3，4 节没有课，我照常在宿舍楼下饭堂吃了顿鱿鱼饭，准备走的时候一种感觉驱使我走一走，于是我便走一走，走出去的时候已经 12 点多了，走到教学楼这边饭堂的时候我好像看到了 Y，Y 还背着书包从校门那边走来，看到我很开心冲上了饭堂二楼……我没有进饭堂。</p><p>那时候我们吃饭流行打包，基本我们宿舍都是全员打包。临近期末上完实训课，我和舍友去了宿舍楼下的饭堂准备打包回宿舍吃，去排队路过正在吃饭的人群，似乎旁边桌上坐着的是 Y（有刘海），她正期待着什么，我不时的回过头去，我不太确定。轮到我了，问我打不打包的时候我犹豫了下，“打”，我拿上打包盒，跟上舍友走回了宿舍，临走时我还看了一眼 Y，她似乎还在期待着什么……</p><h4 id="大二暑假那些事"><a href="#大二暑假那些事" class="headerlink" title="大二暑假那些事"></a>大二暑假那些事</h4><p>我正在坐在副驾驶上，我们从外公家回来县城正停在路边，小姨和我妈在后备箱拿东西，我的目光突然转移到了旁边公交车站的一个女生身上，她的模样我已经记不太清了，只是让我想起了未解之谜的那个女生，一样的白鞋白色的帽子，她正和她妈站在公交站旁似乎在等公交车。我看她，她似乎也在看着我。</p><p>回来的晚上我到处发实习简历，可惜并没有回音，我觉得这个暑假就这样了。接着一个平静的晚上，一个电话响起，是来自一个繁华的市中心街道，于是手机里就收到了实习 offer。实习第一天我被居委会的人带着从街道办到居委会，穿来穿去我都不知道去到哪里了，只知道交通挺便利能很快坐上回家的公交车。没想到晚上回去和父母一说，父母马上反应过来我被派到了我高三住院那个地方的居委会，那时他们开车天天给我送饭都停在这居委会的几个小区或者对面商场，我爸迷信地说是种轮回，我从来不信这些的。</p><p>一天下班坐公交车，车上人很多但也没特别拥挤，我和往常一样戴着耳机刷着手机站在车门旁的立柱，我的旁边是一堆女生，眼角边似乎有个女生一直看着我，我没有回头，“去要微信啊。”女生闺蜜推了推她说着，“戴着耳机呢”那个女生转头推辞着然后又把目光投向我。听着我差点想把耳机扯下来，但是这太刻意了。女生闺蜜开始刷起了手机，但是女生一直看着我，女生最开始似乎有些脸红，但是后面表情逐渐变得平静，到站了门一打开她便转身下了车，我在车上看着背影才注意到女生闺蜜正在侧着头问着刚刚看着我的女生，女生低着头走着，背影看着有点瘦小。</p><p>暑假最后一天我拖着行李离开小区，小区门口我看到一辆车，似乎有点眼熟。我往车上看去，看到 Y 坐在后座，她的脸靠着手，手架在车门上看着窗外似乎在烦恼着什么。</p><h4 id="最后一节课"><a href="#最后一节课" class="headerlink" title="最后一节课"></a>最后一节课</h4><p>大三上着上着不知怎么总有一种感觉就是她会来，特别是周五的管理信息系统课上来。虽然那时候封校但是后面又解开了，管理信息系统是周五上的，那天我坐在第二排，上着上着我的视线不知怎么的被窗外吸引了，准确来说是门外，似乎早知道有人要来似的。结果真的来了，从我被门外吸引到她真的出现真就一刹那。她的眼神马上和我对上了，她边走边看，我也顺着看，此时我已经极度震惊，特别是我真的想了很多次她周五管理信息系统课上来（都是心里想的）……</p><p>她认出我来之后很开心，就走了。我回过头，讲台上的班主任似乎也注意到了她，表情有些疑惑。</p><p>上完课已经是吃饭时间了，我有些怀疑她会在饭堂出现，可是当我进入饭堂的时候却没有看见预想之中的身影。</p><p>我现在已经不知道她究竟是最后一节课还是倒数第几节课来的了，这个日期似乎已经成了罗生门。有时候真的怀疑这个人是自己精神分裂症幻想出来的，可那为什么她不是每次都出现，而是只出现了那一次呢？</p><h4 id="以车会面"><a href="#以车会面" class="headerlink" title="以车会面"></a>以车会面</h4><p>转眼又到了寒假，春节没有以前那种经常能碰到了，一次都碰不到也是正常的。</p><p>（不记得哪一年寒假了，放这吧）回到家乡，还有几天就要过年了一天晚上我开车载着我妈我姐回家，快到家里路过 Y 小区门口的时候，我看到了 Y 家的车，他们似乎是正要出去，我朝里面瞄去，后排的 Y 正在盯着手机，手机界面似乎是 QQ。正开着到了一个红绿灯，Y 家的车就在我不远的地方，我可以清晰的看到 Y，Y 看着 QQ 的聊天页面收到的信息，用手摸了下下巴然后才输入回复内容，手机的亮光照着她的脸，Y 似乎有些凝重？绿灯到了车开了，我最后看了眼 Y，Y 还在继续盯着聊天页面。</p><p>大年三十晚上我们在县城放烟花，那是一个集中燃放点，有很多人都在那里。</p><p>放完了我们就上车走了，我开车，左转过红绿灯后我以 50 km&#x2F;h 速度行驶。后面那辆车变道了跟上来一辆黑色小轿车，然后小轿车就用远光灯闪了闪我，我很奇怪，我开的并不慢旁边的道路也很宽敞便留意了下，小轿车上三个人，女生正在开车，还有个爸爸坐副驾，背靠在椅子上双臂交叉，妈妈的坐后排中间，身体前倾。看来很可能是女生第一次开车，女生跟了我一会就从左边超车了，然后并到了我前面。</p><p>我看到车牌才猛然想起这不是我大二暑假最后一天看到的车么。没过多久，前面那辆车准备直行通过路口时，突然刹车打灯右转，我继续直行。</p><p>过了一会坐在副驾的我爸说：“走错了，刚刚应该右转的，不过这样走也行吧。”</p><h4 id="最后一个暑假"><a href="#最后一个暑假" class="headerlink" title="最后一个暑假"></a>最后一个暑假</h4><p>疫情变得更加凶猛了，新冠时常突破了防线，大三下学期基本都在封校，自然 Y 也是不可能出现的。</p><p>转眼就到了最后一个暑假，我家已经买了个新房子，离现在的家不远。我本来打算暑假去实习，可是学习进度非常的不顺利。我没有选择考研而是准备抓住秋招的机会看看能不能进一家不错的公司，只能这个暑假努努力了。似乎一切即将改变，我想终有一天我会告别 Y 搬家去新房子住，也许那时候她便会慢慢从我们生活中消失。</p><p>7 月刚过，我从新房子回来碰到 Y 跟着一个年龄稍大的女生推着婴儿车，Y 穿着白色上衣白色短裙，腿很瘦，脚上是很大的拖鞋，整体给我感觉就是家里穿的那套，除了头发扎了下，我注意到腿上没有之前那朵 ❀。我从 Y 的身边经过听到那个推婴儿车的女生对 Y 用普通话说了什么。我准备进楼前回头看了一眼，Y 低着头离开了。</p><p>后面很经常能见到 Y，有时晚上能见到她在小饭馆（比如沙县）吃饭。说‘很经常’肯定不是指天天见面那种程度，我也不是天天出门，一两个星期有几次吧，对于陌生人来说很高了。</p><p>有一晚我和我妈去步道散步，过天桥的时候她总在回望，我有点奇怪。走到终点了我妈跑起来了，我便转去旁边小路逛一逛，过了一会我见到 Y 和他妈（？）以很快的步伐也往这边走来，Y 戴上了眼镜明显是第一次来或者来的很少。我很惊讶不过因为我在暗处她没有发现我。我去步道只见过一次 Y。</p><p>过了几周我和我妈照常去步道，准备上天桥时候看到了 Y 正在下天桥，Y 依偎在她爸上说些什么，他妈跟在后面，她是里面最矮的。Y 走了另一边所以没有看到我，我上了天桥，我看着远去的 Y 犹豫下便打开手机拍下了第一张有 Y 的照片。在我还没准备拍之前，Y 似乎感受到了什么，跟她爸拉开了点距离然后回头（当然不可能看到天桥上的我），然后就再没靠在一起。散步完了，我先回家，迎面走过来两个高高的女生，一个用手机接了个电话用家乡话说着“你们做完核酸了，好的。”直觉告诉我，她们和 Y 有些联系。</p><p>我不太确定是不是她爸妈，我感觉好年轻，特别相比我爸妈来说。</p><h4 id="不是最后一次的最后一次"><a href="#不是最后一次的最后一次" class="headerlink" title="不是最后一次的最后一次"></a>不是最后一次的最后一次</h4><p>寒假快结束了，一天下午我做完核酸走回家。</p><p>转上主路的时候，远处的一个女生突然扯掉了她的口罩跳到我面前，她好矮，她仰望着我，满脸的兴奋和大大的黑色瞳孔。我却没有认出来是谁，用疑惑的眼神看着她。她还在继续往前走。差不多到了，我转回了回家的小路，直到进楼我才后知后觉；我回过头，Y 低着头似乎有些难过，迈着大步。‘这是最后一次了吧。’我叹息着回头按下了回家的电梯。</p><p>后面随着我六级没过，秋招情况很不妙的消息传来。我的心情跌落到低点。在难过中，我预定了回学校的高铁票。这是最后几张，再晚只能起大早了去赶早班车了。</p><p>寒假最后一天，早上 7 点我就已经睡不着了，走出阳台。我看到 Y 正拖着行李离开小区，很明显不可能是最后一次。</p><h4 id="凛冽寒冬"><a href="#凛冽寒冬" class="headerlink" title="凛冽寒冬"></a>凛冽寒冬</h4><p>大四基本都在封校，唯一一次我觉得眼熟的是中秋节出去，我坐在舍友的电动车上，转过一个小路就到了大路，有好多电动车一起行驶。我看着前面一辆电动车上的人感觉有些眼熟，她的后座带着一个很矮小的女生。她们的电动车停下来了，跟对面的电动车上的女生在讨论着什么。我们在她们停下来之前便到了马路的另一端。</p><p>秋招一无所获，唯一残存的念想就是最想去的公司走完了全部流程一直在“评估中”，但我告诉自己不可能的了。疫情也放开了，新冠四处开花，我妈也中招了，晚上我睡觉想的就是自己会不会明天醒来发现自己发起了高烧？也许是我装模做样的防疫起了作用，一直没有中招。</p><p>回来聚会听说我去参加秋招，许久未见的初中同学们第一反应居然和我大学部门同僚一样：“你居然没去考研？”也许他们还没认清我学渣的本质。</p><p>秋招没希望了，我只能去投实习岗位，看起来简历写的还可以，回音很多，很快就有一家公司说我通过面试。我去打印入职资料，路上行人稀少，唯一能听到的只有咳嗽声。</p><p>打印回来的路上，在我家楼下，我看到了 Y，她戴着 N95 口罩，身旁是他爸（？），他爸推着个婴儿车。路过我家楼下她向里面张望，此情此景让我想起了大二寒假最后一晚上的所见所闻。“咳，咳咳”，一阵咳嗽声打断了我的回忆，是她们发出的。想起这几个月来看到的种种我的心里五味杂陈，我转回了进家的小路，和当年一样，她没有发现我。</p><p>五味杂陈之后是惊讶，还有几天就是研究生考试了，她居然没去考研。</p><h4 id="第一份工作"><a href="#第一份工作" class="headerlink" title="第一份工作"></a>第一份工作</h4><p>后面我去上班后在小区还碰过她几次，和往常一样。</p><p>可能是运气使然，最想去的公司居然在我入职实习公司后不久补录我，还是很好的岗位以及很好的薪资，给我签了三方发了 offer。于是我就有了确定的工作、确定的去向。现在实习的公司很好，新公司也很好。</p><p>春节没有碰到她？好像我在乡下门口坐着嗑瓜子的时候瞄到远处的小路出现了一个熟悉的身影，熟悉的笑容，不过等我再回头的时候，那里已经空无一人了，似乎什么也没发生过。</p><p>回来碰到她很多次，和以前也没什么不同。</p><p>印象最深的是四五月的一个星期五，我刚下班回来，已经是九点了。我准备走到家楼下看到远处走过一群人，我感觉有个女生似乎有点熟悉就多看了几眼，结果女生脱离了人群朝着我的方向冲着我笑。出乎意料的行为让我的大脑直接宕机，完全没反应。昏暗的灯光下我也不太看得清样貌（因为这个才多看的几眼），女生笑着笑着收回了笑容，转身跟上了人群。不知道为什么，我总觉得这一幕似乎另有深意。</p><p>已经慢慢开始往新家搬了，新家除了气味浓以外都挺好，不过为了通勤，还是住在原来的小区。</p><p>形势慢慢紧张了起来，工作休息之余刷了下微博才发现实习公司老板被抓了全员解散，与此同时同一赛道的新公司一直在裁人，虽然一直没有裁到我们部门，但是寒气逼人。招我们进来的 HR 没一会就变成了“已离职”、一起做项目的一位同期校招生实习完没有选择转正而是悄悄地离开去深圳寻找更好的机会，原来项目组的开发大哥也准备离职回长沙发展了。</p><p>工作后，没有什么是永恒不变的，寒气四散，或许这一切都在预示着一段漫长的艰难时光即将来临。</p><h3 id="之后的故事"><a href="#之后的故事" class="headerlink" title="之后的故事"></a>之后的故事</h3><h4 id="漫长的季节（其一）"><a href="#漫长的季节（其一）" class="headerlink" title="漫长的季节（其一）"></a>漫长的季节（其一）</h4><blockquote><p>常伟思：“汪教授,问你一个私人问题啊。你的人生中发生过重大变故吗？我说的这种变故，就是突然间改变了生活，比方说你睡了一觉，当你醒来之后突然发现这个世界完全不同。”</p><p>汪淼：“没有。”</p><p>常伟思：“那你的人生属于一种偶然。世界很大，变幻莫测的因素也很多，但你的生活居然没有变故。”</p><p>汪淼：“可是大部分的人不都是这样吗？”</p><p>常伟思：“那么大多数人的人生都是偶然。”</p><p>汪淼：“那之前多少代人也都是这样平淡地过下来的……”</p><p>常伟思：“都是偶然~”</p><p>汪淼：“不是，常将军，请原谅我今天理解能力确实太差了。您要是这么说，那岂不是……”</p><p>常伟思：“是的，整个人类世界都是偶然，从新石器时代走到了今天，居然没有发生重大的变故，这不是一种幸运吗？”</p><p>常伟思：“既然是幸运，那早晚有一天会结束的，现在我就告诉你，结束了，做好思想准备吧。”<br>—— 《三体：地球往事》</p></blockquote><p>既然是运气总有一天用完，9 月刚过，组长叫我到会议室，告诉我被裁了。</p><p>工作很难找，尤其对我这种应届被裁的来说，不过部门为了照顾我让我还有一个月可以假装工作。</p><p>早上起床，今天天气晴好，可是我却觉得一片迷茫，我向下看去看到 Y 离开小区，也许是去上班吧。</p><p>一家公司叫我去面试，我请了半天假，打车去那里，门口给了我一套试卷，让我做。我写着写着，有个身影去上厕所，我继续写，我坐的地方对着厕所。我写着写着感受到目光抬头，她正在看着我，意识到我在看她她马上低下了头，她穿着绿色的裙子，头上梳着刘海。HR 告诉我这一层是行政运营部门。</p><p>一面通过了，二面没有通过，现在回想是自己的一些心态影响了发挥。情况变得无比糟糕，家里呆不下去了，去到新家换换心情吧。就这样，我搬进了新家。</p><p>Y 自然不可能在新小区，以后也不可能，据说新小区的房子开售即空还得摇号才有购买资格。</p><p>虽然搬了但还是会偶尔回来，10 月 1 日我回来的时候看到了她。早上 10 点我开车准备离开小区瞄到了准备进入小区的她，她低着头叹了口气。我不知道她在叹息什么，但我必须回过神来继续开车向前了。回来碰到概率还是有的，只要不是工作日。一天我散步回去，我看到一群女生，其中有 Y，Y 和另一个年纪大点的女生搀扶着一个也不算是奶奶的女性，Y 是里面最年轻的似乎也是最矮的。（她家的亲戚是真的多啊，无论是家乡那边还是城市这边的）</p><p>之前履历还在，也勉强算是一个应届生，还是有公司收的，但是加班非常猛，在新公司也很不适应。</p><p>好不容易有了周日，我回去老房子，在中心广场我看到一个女生一直看着我，旁边是一个年纪稍大的女生从婴儿车里抱起婴儿。看着我的女生戴着白色的帽子，我没认出来她是谁，我感觉她也没认出来我是谁。</p><h4 id="漫长的季节（其二）：旧房子故事结束了"><a href="#漫长的季节（其二）：旧房子故事结束了" class="headerlink" title="漫长的季节（其二）：旧房子故事结束了"></a>漫长的季节（其二）：旧房子故事结束了</h4><blockquote><p>故事结束了吗？</p></blockquote><p>春节前，旧房子被租出去了，再也不用回去了。</p><p>春节一次也没见到 Y。</p><p>漫长的季节还在继续，在新公司我搞砸了一切，最后把自己也搞砸了。虽然领导依然给我机会，但我已经没办法继续了。</p><p>我想 Y 应该会就此淡出我们的生活。</p><p>3 月份乡下要拜山，我也回去了。从山上下来的时候，我看着下面小道走过一队队人，突然我被目光吸引了过去，是 Y，她戴着眼镜正望着山上的我。看到惊讶的我之后她便收回了她的目光，低着头走着。两队人远远的相对而过，我感觉好像有啥不对，但说不上来。</p><p>还是 3 月，家人要去一个景点玩，我也跟着去了。走着走着，我看到亭子里几个女生正在自拍，我从亭子路过，那几个女生自拍完了坐在一排玩着手机。家人此时也停下来拍照，我只好回头等她们。我走到旁边看着池塘时感受到目光出于本能的回头（当时是侧对着），其中一个女生赶紧低下了她的头，她戴着白色的帽子，低头刷着手机，我看不清她的脸。家人拍完照了，我也就跟着走了。</p><p>之后的一个星期天下午，我跟着家人去打羽毛球，走着走着，步道上一个女生迎面跑来，戴着白色的帽子，短裤还有白色的运动鞋，新小区步道上都有塑胶的跑道。我看着她想起了大二的那次未解之谜的经历，我比照着记忆中不甚清晰的图像心想得再瘦小一些。就在这不礼貌的打量中，我看到她低下了她的眼睛。她跑过去了，我回头望去，她跑了一段停下来了。</p><p>“我被开盒了还是又一个巧合？”这是我脑子里浮现的第一个疑问。</p><p>这个故事里似乎最不缺的就是巧合。</p><h4 id="漫长的季节（其三）：大时代"><a href="#漫长的季节（其三）：大时代" class="headerlink" title="漫长的季节（其三）：大时代"></a>漫长的季节（其三）：大时代</h4><blockquote><p>事在人为，人不为事不在。</p></blockquote><p>当然不可能因为一次几秒钟的擦肩而过就说她搬过来了，而且还戴着帽子，可是时间会说明一切。</p><p>五月的一天周五，我和我妈开车出去吃饭，准备转出地库出口的时候，我看到对面车上的女生看到我顿时兴奋了起来。我当时看了下车，是一辆很老的白色轿车，跟之前看到的黑色小车不一样，我当时还以为看错了。</p><p>一天晚上 8 点我在下面散步，我边看手机边走，余光里来路有个女生看向我的方向很开心跳了几步，这太眼熟了可当我惊讶的转头过去的时候，我只看到一个梳着刘海，穿着蓝色的连衣裙，脚上穿着黑色皮鞋和白袜的小小个女生，“谁家小学生”这是我心里蹦出来第一句话，可是这动作太过眼熟，我这边也没有其他人，远处更没人了，但我还是很难把她和 Y 联系起来。可能她也意识到了这种尴尬，于是她的笑容和头似乎凝固了一般，如此擦肩而过。</p><p>之后来到了七月，已经是 6 点多了，我准备做晚饭时瞄了一样楼下，散步两个人有点眼熟，这不是 Y 和她妈吗？Y 边走似乎还在边和手机上发什么，我拿出了很久不用的望远镜，原来是微信，看头像感觉还是工作聊天（大概感觉，仔细的看不到了），就在我在看的时候，她抬头看着我这个方向，我赶紧关上了窗，很明显她近视加上这么高楼层她必不可能看到我。她和她妈一圈圈的走着直到天完全的暗了下来。第二天我不到 8 点就醒了，我走向窗外，看到 Y 走向小区外。</p><p>虽然出了这些奇奇怪怪的事，但要联系到 Y 上还是有点匪夷所思了，要知道对于每一个中国家庭来说买房绝对不是轻轻松松就决定的事情，但如果说要是巧合又过于的巧合了。</p><p>再晚几天，我准备下去打羽毛球，已经是 6 点了，当我往窗外看的时候，我看到了 Y，我很惊讶，Y 的刘海完全放下，脚上穿的拖鞋和身上宽松的衣服表明似乎她刚从家里出来。她一路走着走向了外面美食街。我拍下了照片并翻出了之前拍的，一样的发型，一样的身材，这恐怕是真的。难以置信的脑子里蹦出来的第一句话是“今天不是工作日吗？”下去之后，我妈抱怨为什么晚了 20 分钟，我糊弄了过去。如果我把我看到的讲给她听，恐怕她也得惊掉下巴。</p><p>8 月的一天晚上我在楼下边看手机边散步，我看着看着转头，有个女生正在看着我露出笑容（此时两边位置平齐），她旁边大一些的女生正在推着婴儿车。我姐在她们后面看到我之后说了句话。我继续走着，准备回去的时候，我看到一个有些熟悉的女生从我家楼下出来，她走到了吊环那里吊着似乎在思考什么。</p><p>我现在勉强能接受了，但也许还需要更强有力的冲击。有一点比较特别就是现在的 Y 和我们以前看到的不太一样，她的刘海是放下的而不是扎起来的。</p><p>还是 8 月的一天晚上我和我妈散步，我用家乡话讲起最近的巴以冲突，正在讲着的时候，对面走过来的两个女生，离我比较近的女生一脸惊讶看着我，到什么程度呢？话讲一半说不出口了，再说只出了一个字也说不出口了，直接闭嘴。她梳着刘海，头发上还戴了个发夹，短袖短裤，脚上穿了个拖鞋，我其实没有认出来这是谁，但是走过后反应过来：我说话能有这个反应的好像也只有那个人了，旁边的女生没有反应应该是她不知道我讲的家乡话。</p><p>事实就是如此，也许背后有很多不为我们所知的故事，但我们看到的就是这样。</p><p>真是这也离谱，那也离谱。</p><p>后面往窗外看的时候看到过几次，都是中午或者晚上饭点，Y 又变回了我们熟悉的样子。不过似乎 Y 没有在工作了？可毕竟人还是社会化动物，久了不上班、不参与社会活动是会出问题的（尤其是还跟家里人一起住的情况下）。也许一两个月前她还在为脱离苦海而庆喜，但……</p><p>“你现在在（旧家）吗”</p><p>国庆期间，我又久违的收到了来自来自那位小学和初中同学的微信，我愣了下。</p><p>“不在啊，怎么了”，我简短的回了。<br>“没事了”，又是熟悉的回答，只不过这次还带了个表情包。</p><p>我看着信息，我划了下屏幕就划到了疫情刚开始那会的对话，我想了下。</p><p>“我搬家了，我搬到（新家）了”，我想了下，输入了这段话。</p><p>接着大家互相聊了下天就结束了。</p><p>国庆节最后一天晚上，楼下很多人散步，我在小路上刷着手机，旁边的主路上走过了一群群人，我感受到目光眼睛从手机界面移开到了主路上三个女生身上，也没什么就一个女生一直看着我。第二天早上准备出门，我瞄了一眼窗外看到了 Y，她似乎既不是从外面回来也不是去上班，而是若有思的转了半圈。</p><p>有一晚我在楼下散步，正准备路过一对夫妻时，丈夫回头瞟了我一眼，我继续走着，准备超过时听到了他们的对话，“她说都卡在 HR 筛选那里。”妻子用本地话说着。听着令人唏嘘，不过在这个时代也不是就她一个人的遭遇，我继续向前走了。（这里的夫妻不是说的 Y 的爸爸妈妈）</p><p>10 月中，晚上 9 点多，小区里还在散步的人已经寥寥无几了，我很喜欢这种环境。我刚从家里出来散步刚举起手机便听到了熟悉的家乡话，“我一说她就进去关上门…”我惊讶的抬头，是一位年龄比较大女生（不太会形容，反正比我妈年轻）发出来的，她看了我一眼就继续听电话了，她走的很快，她一圈圈走着，她挂断了电话，边思考着边看着手机屏幕打着什么。看到我抬头看了我一下然后继续思索着在手机上输入着什么，我感到有点尴尬，就离开换了个地方散步，但不知道为什么，听到了那一番话让我心里五味杂陈。</p><p>又过了一段时间，还是晚上 9 点多，我走着准备掏出手机继续看，余光却被从小路上走来的一个矮矮的女生吸引了，她看到我露出了笑容然后径直朝我走来，后面的更高的女生只是意味深长的看了我几眼就转身回家了，我看着手机屏幕，眼角里是矮矮的女生笑眯眯看着我，但我的大脑宕机了，没有反应，她擦肩而过，走了一段，我的大脑恢复了响应，我回头望去，什么也没有，似乎什么也没发生过。</p><p>时间来到了 10 月底，还是 9 点多，我在楼下散步边看手机，但路过两个正在散步的女生的身边时，我听到了她们用本地话在对话，“她爸很担心她，后面可能开个淘宝店，去帮别人卖卖衣服”，我有点惊讶，虽然我不知道我为什么惊讶，而且后面感觉好像她们也意识到了我。她们一圈圈走着，走到 10 点半，不知道为什么，看着她们一圈圈走着，我感觉似乎周围似乎弥漫着惆怅、无奈，不解。</p><p>这种父母的担忧、旁人的议论，弥漫的焦虑、失望也不止她有。</p><p>11 月，星期六，省实百年校庆前一天，晚上 8 点下去扔垃圾看到一个人远远的看着我，我没认出来是谁，过了一会感觉不对又出来，换了一条路却发现她已经走在那条路了，看到我她放慢了脚步似乎还有点高兴，我感觉哪里不对却又说不上是为什么，更认不出对面是什么人，在过去几年这种场景偶尔发生，这究竟是为什么呢？最终我向另一个方向走去了。</p><p>时间到了 12 月中，有事回了趟老家，今天是星期一早上，准备待会离开县城返回城市。我和我妈吃完早餐准备回去收拾行李，走着走着我感受到了目光抬起头，我看到一个女生涨红着脸看着我，她梳着刘海，我感到陌生又很疑惑，她应该不会出现在这里吧，女生继续看着我突然露出笑容开心地蹦蹦跳跳窜进去了旁边小区门口。</p><p>我还没搞懂什么事直到收拾着行李时脑海中死去的记忆开始攻击我，那是高二寒假的时候，一天我和我爸推着小推车载着我姐的书拉去废品站，在小区门口，我看到了 Y，她扛着大包小包走的很急促，她往这里看了一眼，然后就走进了旁边小区。</p><p>这一年的故事就这样结束了，跟其他几年也没什么不同。不过虽然平时依旧在一个小区，过年也还在同一个县城、同一个乡下，但是不管从哪种角度来说，《真正的巧合》这章都不可能一直更新——就像漫长的季节终会过去一样。因为它是真实发生的，所以凡事终有结束时。 (●’◡’●)</p><h2 id="南分往事"><a href="#南分往事" class="headerlink" title="南分往事"></a>南分往事</h2><blockquote><p>我的高中是在一所隔壁城市的私立高中，有学习的也有不学习的，在吵闹的普通班度过了三年。不过很有趣那些插曲基本来自于重点班，而且还有点离谱，有段时间我甚至在不停的麻醉自己都是假的……到后面也不得不接受事实，但我还是不能理解。<br>其实我很尴尬，手足无措，我没有透露给任何人，因为我自己都是半信半疑。<br>以现在的眼光回看，感觉真不像是有如此有趣插曲的主角。</p></blockquote><h3 id="平静的半年"><a href="#平静的半年" class="headerlink" title="平静的半年"></a>平静的半年</h3><p>以现在的眼光来看，高中就像个打怪升级的游戏，越往后的局面越复杂，虽然以前虽然也不是完全没有经历过，但是高中的强度还是超过了我们的想象甚至超过了我们的理解能力。而且我们没有任何的心理准备，只是觉得来到了另一个城市上学我得好好学习。我还记下了首诗给自己打气“_牢骚太多防肠断, 风物长宜放眼量。莫道昆明池水浅，观鱼胜过富春江。_”</p><p>高一上学期是高中最平静的一个星期，这个中学的普通班确实不太行，有一些是家长硬逼来上高中的，晚自习还是比较吵闹的，当然也不是所有人都这样。上了几周还是认识了些朋友，比如那位有省实弟弟的朋友。成绩上偏科比较严重，虽然也有很不错的科目，但有些科目已经有些跟不上了。</p><p>插曲这块还很平静，只是班里的一个女生在第一次月考之后就慢慢注意到了我，后面每次路上遇见她的时候她都会走上前来叫我名字，这其实没有什么，只是对于当时没怎么和女生玩过的我们来说有些新奇，不过也许是我性格里的一些东西吧还是什么，她叫我的时候我基本没有回应，就是脑子一片空白，然后就过去了，终于有一次她忍不住问我：“为什么我叫你的时候你都不理我？”我只好回答说“没有反应过来。”她低头自言自语的重复了一遍就离开了，后面好像没怎么叫过我了。</p><p>高一上学期很快结束了，来到了高一下学期并进行了文理科分班，我还是和省实弟弟的朋友在一个班，一天他跟我说“你知道（之前叫我名字）的女生出国了吗？”我才知道原来已经移民了。<br>…</p><p>随着上一届高三的离开，终于到我们上场了，但我慢慢发现之前一个让我偶尔奇怪但是碰到了太少没怎么引起我注意的一位女生慢慢从幕后走到了台前，我花了很久才相信这个事实。</p><h3 id="L-的故事"><a href="#L-的故事" class="headerlink" title="L 的故事"></a>L 的故事</h3><p>好像不知道从什么时候起，我发现遇见 L 女生的时候她好像有点奇怪，具体是什么时候呢？</p><p>高一下学期的一天中午午休结束，大家陆续返回教学楼，我一般喜欢跨几步上楼，就在教学楼上楼梯的时候我看到 L 和其他女生一起上楼，我继续上楼，就在转角的时候我转身准备继续上楼，我回头（可能没有控制好表情显得有点开心），我的视线扫过了 L 的闺蜜，闺蜜只是有点奇怪，但扫过 L 的时候，L 愣了下夸张的直接头低下直接看着脚，这让我有点奇怪，我赶紧离开了。</p><p>接着到接近期末的时候，有一天，我如释重负后快步下楼，我表情控制很差，可能表现得很开心？我在下楼的时候看到了 L 和闺蜜正在上楼，L 很好奇有带点疑惑的看着我，她的头跟着我转着直到我和她平行，而她的闺蜜还在专心低头爬楼梯。</p><p>高二时候我的班级在她的隔壁，开学第一天，我拿着东西正在上楼前往班级，一群女生正在打闹，看到正在上楼的我里面有个女生呆住了，那群女生转到一边继续打闹只剩呆住的她，我看了一眼是 L 我就没去看了。那天晚上是开学典礼，我第一次知道了 L 的名字也第一次知道 L 居然是全年级理科最优秀的女生。</p><p>高二虽然在隔壁班但其实双方生活基本错开了没啥交集，但还是有两件事让我感觉不太对劲：</p><p>一件事是一天晚上晚自习的时候我有点想去厕所，于是我就去释放了，回来 L 的班级是必经之路，我看到 L 和一些人正在走出来，我才想起来待会就是英语配音比赛，我没有参加。但和其他人看着前面不同，L 在看着我，而且是一直看着一直到她走出班级门，这让我有点迷惑。</p><p>另一件事是一次我去饮水机装水，刚好 L 也在，L 看起来是已经装完了在等身后的闺蜜装水。结果 L 看到我（没有其他人）突然变得拘谨，头低着两只手托着水杯，脚步也变得很慢，这反应让我感到很惊讶也很困惑，我也就绕开了 L 去到了饮水机。装着水时我余光里看到 L 保持了那个动作一段时间才倒回来和闺蜜一起，之后她们装完水就离开了。</p><p>高二也有第二课堂，我报了化学，理综这个我最差，没想到去了之后是讲竞赛相关的，我完全听不懂，当时朋友一去就跑了我还是打算坚持下。课还没开始，我坐在后排角落，周围都没有人，人逐渐的来了，隔壁过道走来了一位女生，她背着绿色的书包坐在了我对面，是 L，因为听不懂加上班级福利拿到了雪糕，我便偷偷吃起了雪糕，没想到被老师发现吐槽了，所有人都在笑我，当然了也包括 L（其他人都在远远的第一二排，但我一转头就能看到 L 歪着头看着我笑）。我感觉好尴尬而且我还听不懂，朋友折回来拿东西的时候我便跟着他跑路去生物了。</p><p>那时候我是团支书，有一晚我去团委交资料，偶然看到 L 的家在父母之前提及的我小时候在这个城市的生活过一两年的小镇，这件事过后我就记住了 L。</p><p>L 就是很典型的学霸形象，身高一般般，梳个干净的马尾和整齐的刘海，戴个红色边框的眼镜。这样的女生外加在女生稀少的理科实验班我感觉还是不差人喜欢的，有一天晚自习下课我从厕所回来，我看到 L 和一个男生在她们班隔壁，L 靠着墙和高高的男生面对面在说着什么，这是一个很典型的校园表白场景，也正是因为有类似的情景，所以当 L 有一些奇怪动作的时候我也不以为意，比如说迎面碰到双方目光接触的时候 L 会夸张的整个头低下去用头皮对着我，当然大家平时很少有遇见的机会。</p><p>就这样过完了高二的时光。上一届高考完了需要我们搬入高三楼，所有东西都得搬过去，就在我搬完跟着长队回去的时候，我看到了 L，她们班还在我隔壁，她跟着长队抱着一个大箱子，只是她的脸似乎有点泛红有点微笑。就这样相向而过（当然了，这么长的队前前后后都是人，肯定不会这样联想对吧）。</p><p>当天晚上晚自习下课在新教室，我在看着题目思考，突然我的头不自觉地扭过去了，我的目光落在了窗外正在收回了她的头的 L，L 低着头慢慢走着，我也是第一次看到这种情况，因为隔壁就是厕所，窗外也是人来人往，这层楼所有的班级都得用这个，可能只是好奇吧。可是接下来几天这种现象越来越多，也给我带来了不少困扰，这不得不让我有一种感觉“不是风动，不是幡动，而是心动”。我也是这么告诉自己的，虽然这太唯心，但毕竟都高三了，也不太可能吧。</p><p>中午我和朋友去吃饭，打了饭去找位置（一般我们吃饭都习惯在一个区域吃），没想到在走去经常去吃饭的位置时候看到了 L 和她的闺蜜（以前从来没看到她的）在吃饭，她看向我们以前吃饭的区域似乎正在期待着什么，我看着她的背影，内心只蹦出了一句话“完了”。</p><p>我还是有些不太相信。</p><p>又到了换位置时间，我坐到了另一侧窗边，同桌是之前一个和我有些矛盾的同学，结果他宁愿和班主任赌气坐外面也不愿意和我坐，班主任没办法就只能给他安排在最后，我就一个人坐在前排 (前后都是有同桌的)，很突兀。</p><p>当然 L 好像看不到这些，她依然每天下课都来上厕所，中午吃饭蹲守。当然因为我坐在另一边窗边，困扰就少很多了，一天晚自习，我低头看着题目，感受到目光抬头，外面有个女生看着我走来，从我的窗边路过，这个自然是 L 了，她绕了个远路。她走过去之后我在想“她知道我这是为什么么？”</p><p>但我还是不觉得 L 真有那种意思，还有几天就是期末了，就算真的有，我想她现在这种状态就是激素上头了，过了个暑假重新分个班应该也就没了。说不定期末之前就会换个人选。我倒是得自己注意，不然天天被人关注，一丢失还是会有不小情绪波动的。</p><p>期末考</p><p>每个班的 1-10 名都会分到一个教室或者两个教室考，以前高二也是这样，不过没有什么不同，虽然发生过一件很尴尬的事情，但是总体风平浪静。</p><p>我们班已经先到了，我上了个厕所回来，隔壁感到正在擦凳子和桌子，L 就坐在我侧后，此时的她正在擦着桌子，我看着 L 背着的绿色书包想起了一件事：</p><p>高二还是高一下学期的一件事，那时我经常和省实弟弟那位朋友一起吃饭，一次他身边坐了一位女生，结果他脸红的像个苹果一样，我们都在笑他。结果后面有一次我在吃饭，斜对面做了几位女生，吃着吃着，一个女生背着绿色书包坐到了我旁边的位置上，很不幸，我也变得很紧张，往朋友那边靠，她就正常看着前面吃饭，背着个绿色书包，直到她离开，朋友提醒了我我才恢复正常。</p><p>下午考数学，因为是和名校一起考试，出的题特别难，我是个数学学渣，心态很好，不过我瞄到隔壁的 L 看着空白的题目呆住了。考完试，我的书包放的位置不好被水浸了，里面的东西全湿了，我正在心疼里面的东西的时候，L 从转角出现，两眼发光的望着我，但不是开心的那种像是受了委屈了的表情，她走到我旁边开始整理起书包，整理书包一般都是拿起就走的，她一直在翻就有点太刻意了。我被刚刚的情感冲击到了，转向她想问下“考砸了？”但我的理智给我刹了车“你考得很好吗，问这个问题”，我默念了一句“算了”，我便继续处理自己的书包。L 整理了一会就离开了。</p><p>成绩出了，我在家躺在床上，一打开群里发的表格，映入眼帘的就是 1 班前几号的成绩，里面当然有 L，我便顺手看了下 L 的数学成绩，确实考砸了没见过这么差的。我笑了笑往下翻到我的成绩我的笑容瞬间凝固了，因为我的数学只考了 L 的一半，什么概念呢？如果数学选择题再多一些的话，把答题卡扔到地上踩两脚扫出来的成绩可能跟我的差不多……</p><h3 id="分班以及第一晚"><a href="#分班以及第一晚" class="headerlink" title="分班以及第一晚"></a>分班以及第一晚</h3><p>明天就要开学了，根据排名我肯定还是留在普通班，也许这也是好事，毕竟进了重点班除了学习就真得成为同学应付那些事了。如果能少些干扰，能有一个“安静”的环境，能静心学习我感觉还是有进步空间的。</p><p>“一个暑假过去，应该消退了不少吧，如果分到了顶楼，除非专门来也不会来了吧，最多也就饭堂遇见一下，强度大大下降，也许大家就能回到之前那种陌生人状态。”我幻想着。</p><p>班级群开始响起来了，已经有同学发了分班表和班级分布表。我一点进去，发现前十名都被留在了原班级，当然我也被留下了，我还带点侥幸的想要是在顶楼那也能少不少麻烦啊，“完了”。一点进去还是在原来的位置，在所有人去厕所都会经过的位置……</p><p>“我要调班！”，这是我关掉手机屏幕第一个念头，但是转念我也想不到用什么理由去说，而且也不可能同意的，我颓废的靠在床上，“真的有这一劫吗？”我想着，不仅是对我，也是对她。“也许注定有这一劫吧，那也没办法”我只能这样安慰自己。</p><p>回到学校，晚上班会课，班主任莫名其妙安排我去写课程表，有点没看懂毕竟我写的字挺烂的，这个一般都是指派女生去吧，但是安排都安排了也不能推辞吧，只能硬着头皮上了。有点奇怪的是，老师安排我的时候，前面的女生回头看着我笑，那个女生之前好像是其他普通班的。</p><p>接着就是高三的动员会，需要我们搬着椅子下去，刚刚自习我差点睡着了，只能先去下隔壁的厕所清醒下。出来的时候我面前有个小小的女生看到我惊讶的转了一圈绕开了，我有点迷惑赶紧回了班。回到班一股好奇涌上来我的心头，我很想知道刚刚究竟是谁就慢了一点，她出来了，她停在了门口看着班级里面，那身影只有她了—— L。</p><p>看来是注定有此劫了，我心不由得一沉。</p><h3 id="L-的真实一面"><a href="#L-的真实一面" class="headerlink" title="L 的真实一面"></a>L 的真实一面</h3><p>高三体育课老师还是正常出勤的，不过体育课有点巧合和 1 班一起上了，于是继上次期末考之后我们也能一窥 L 的真实面貌。</p><p>高三挺多的考试的，不过考试排序规则变了，不用和 1 班一起考了，事情简单了很多。</p><p>一天晚上晚自习下课，我继续在课桌上写作业，写着写着脑袋又不自觉的转过去了，又是 L 的背影，我有点无奈，只能继续埋头写。我有一个习惯，草稿纸写完一张扔一张，刚好草稿纸写完了，我就取下了这张草稿纸去扔掉，走到门口的时候刚好碰到了厕所回来的 L，她走到门前就停住了，头低着两只手在前面似乎有点手足无措，此时我看着她的侧脸直接懵逼了，“啥情况？”我心想。路上人来人往，就这样僵持了一会，一个 1 班高大的男生拍了拍她问她干嘛，她回过头去，我也才反应过来从空隙里出去扔掉了那张纸，我扔掉那张纸转回去，L 也刚好转回来，脸上带着点交流完的笑容，大家就这样擦肩而过。</p><p>我回到座位上，我才意识到可能 L 把我手上的纸以为是情书了？不过我觉得真是情书的话她刚刚给我感觉不像是会很高兴的样子。</p><p>这件事更加深了我们对自己基于我们看到的、感受到的而做出判断的怀疑，我越来越觉得这都是自己多想了，可能我们对 L 的社交模式有所误解或者是我们管中窥豹造成的误差。我越来越相信也许真的是我们把自己的情感投射到别人身上了，L 有着自己的情感和学习生活，但与我们无关。毕竟隔壁是厕所，也只能用那一个。此时我的心中不由得有一丝无奈：为什么没有把我们调到楼上去呢？</p><h3 id="结局了吗？"><a href="#结局了吗？" class="headerlink" title="结局了吗？"></a>结局了吗？</h3><p>感觉时间也差不多了，一般人的多巴胺持续也就 3 个月左右，我想应该快转移了吧，一天晚上我在黑板上写明天的课表，身后从 1 班那边传来了呼声，这种声音也没几种可能性了，无非也就表白或者其他什么的。“哦？终于结束了吗？”我在想。写完了放粉笔的时候我看到 L 蹦蹦跳跳的到我们班窗外停下了慢慢走看着讲台上的我，脸上还带着开心的余温。“终于结束了”我在想。</p><h3 id="决策"><a href="#决策" class="headerlink" title="决策"></a>决策</h3><p>一天晚上熄灯后，我躺在床上听着舍友被 1 班（也就是 L 在那个班）某个女生光速分手衔接在哭诉，其他舍友安慰他，“是这样的，他们那个班都是内部解决的，自产自销轮不到我们的”，我听了不由得点了点头。</p><p>听着听着，我想起我虽然之前想过一下如何对待这些事，但是没有形成一个决策，我感觉我还是得认真想想：</p><p>谈吧，感觉好像都差不多，也不想做选择题。开始也很麻烦，后面也很麻烦，最后大家也不是一个城市的，也许在中间会有我们完全想不到的波折，这对于这种争分夺秒的关键时刻无疑是会是致命的。</p><p>于是自然推理出了几点限制：平稳过渡，减少波折。那么我只想到了一种可能：装作没看到。除非有人表白递情书了，那我可能先接了再考虑怎么解决，最后我选择不对任何人透露任何消息，除非有了实际进展那就超过我处理范围必须求助朋友了。</p><p>大概就这样吧，舍友虽然哭红了脸，但是慢慢平静下来了，我也就进入了梦乡。</p><p>以今天的眼光来看，执行太困难了，视而不见还是很难的，可能也不是最好的办法，但是再回到当时，尤其是基于当时的一个判断倾向，我还是想不到更好的办法。</p><p>客观来说，这个应对是建立在我们对对方的肤浅认知和之前对这种关系的理解认知上的，一旦有任何变量偏离了这个认知，可能事情的走向会完全不同。</p><h3 id="中秋留宿"><a href="#中秋留宿" class="headerlink" title="中秋留宿"></a>中秋留宿</h3><p>中秋留宿报名开始了，只能放假一天对于我这种通勤距离很长的就不太友好，我就留下了，一起留下的还有省实弟弟的朋友，历经了多次分班我们依然在一个班。放学了，留宿的人在图书馆集合，图书馆开门了，我和朋友占了个位置，有个背着书包的女生面朝着我坐在了我后面的桌子上，过了一会，她发现自己的朋友在另一边离开了，这无疑是 L 了，她刚走，几个女生占据了她刚刚离开的位置，这里面有 T 同学，这种气氛不由得让我有点尴尬。</p><p>晚上看着昏暗的教学楼，图书馆的事情一一浮现，其实我不希望很多年后她们想起这段事的回忆是“当初怎么那么傻……”文思泉涌便发了一条朋友圈“身后有余莫伸手，眼前无路想回头”。</p><p>中秋节过去后一天，跑操解散我和朋友一起回去，身后跟着几个女生，是 L 和她的闺蜜，身后传来了一些讨论“他的手好长”，我下意识到这是在说我，很多人这么说过我。就在这种闺蜜的小讨论中 L 一直都没有发声，直到上楼时她对着闺蜜说了一句“他昨晚发朋友圈了”，我惊讶的回过头去，L 还在看着她的闺蜜似乎在等她们回答，“什么鬼，居然有人偷看我的朋友圈？”以前只是有一种预感，看来以后我们不能乱发东西了。</p><h3 id="一张纸条（高中未解之谜其一）"><a href="#一张纸条（高中未解之谜其一）" class="headerlink" title="一张纸条（高中未解之谜其一）"></a>一张纸条（高中未解之谜其一）</h3><p>分了新班，原来一起吃饭的搭子分去其他班了，其他人也还不认识，刚好之前那位省实弟弟的朋友从高一到现在依然跟我们一个班，中午就跟他做搭子吧，但是这位朋友不知道为什么总有点磨蹭，这让我有些烦躁。</p><p>一天中午，教室只剩下了我们两个，他还在磨蹭，我只好背着书包在教室里到处闲逛，此时，窗外有个女生引起了我的注意，她在班级外面走廊面对着隔壁班的门口好像在闲谈着什么，也许是隔壁班的吧。但她的位置刚好能从教室里看到的最外部。这其实也没什么，但我心里总有一种好奇，我中间有想瞄一眼但是出去人就不见了，仿佛我看到的人是幻觉似的。</p><p>朋友终于磨蹭完了，我们从另一边离开了。离开班级的时候，我透过玻璃窗回望，那个女生兴奋的往后面挥了挥手，向我们班这边走来，一个背着书包的女生从角落低着头跟上来，我没有认出来是谁但有种预感似乎确实会发生什么事情。吃饭的时候我不由得自作多情：真的是冲我来的吗？如果确实是冲我来的我该怎么办呢？我想我会问问我面前的朋友吧。</p><p>下午回到教室人已经到的差不多了，我回到座位上时同桌已经在了，他拿着笔记本似乎若有所思，我随便翻了下自己的位置，什么也没发现，看来我的判断错了，这不得不有点心灰。但隔了几天好像也没听说班里有传出什么八卦，别的无论是窗外经过的 L 还是别的整体感觉和之前没什么不同，也许是我们整个直觉从出发点就错了吧。但是过了几天，我发现我的同桌有点不对劲追问之下，他才扭扭捏捏的说有人给了他张纸条，这让我很意外，但是细问同桌啥也不肯说了。难道我之前的感觉是错觉？是冲着同桌来的？同桌比较喜欢独来独往，也是一起从高一到现在的同学了，看来这也是班里没传出八卦的原因，我觉得只有我和他知道这个秘密。</p><p>我通过玩乒乓球一起认识了个新的饭搭子，也是跟我以及同桌一个宿舍的，就不用再等总是磨磨蹭蹭的朋友了。本持着一颗八卦的心理，我有点期待这个故事的发展，同桌说约在周六（像我们住的家远的周六一般就留在学校了，也是方便学习），可惜具体还是不告诉我，那我也没辙了，就这样到了周六，同学陆续放学回家，只留下了很少的人，我和饭搭子打完乒乓球回来见到了 1 班的一些女生，其中当然也有 L，她正对着一个女生说着什么。</p><p>此时同桌早就不知道去哪里了，我们吃完饭回到宿舍洗澡，又过了一段时间我的同桌懊恼的走了进来翻衣服准备洗澡，我八卦的问了下怎么样了，饭搭子也跟着好奇问是什么事情，同桌懊恼的说“找错了，找（我的名字）的”，我一脸震惊以为自己听错了，下意识地我朝外走向阳台，留下了一脸震惊的饭搭子和懊恼的同桌。</p><p>现在回想起来，我这个行为搞得好像是我自己恶搞了同桌了一样。虽然我也不知道究竟是谁放了纸条也不知道为什么放到同桌那里去了。</p><h3 id="一件小事"><a href="#一件小事" class="headerlink" title="一件小事"></a>一件小事</h3><h3 id="成人礼与危机"><a href="#成人礼与危机" class="headerlink" title="成人礼与危机"></a>成人礼与危机</h3><p>很快就是成人礼，大家都穿上了西装和礼服，我妈也来了。我一直在后面忙着和朋友拍照，仪式进行中的时我妈吐槽了一句“都不和家人呆在一起”，我反驳了一句“你又不是我女朋友我干嘛一直陪着你”，说完我的头不由自主的转向另一边，T 穿着白色裙子独自坐在椅子上看着我们，就像一个小朋友在祈求礼物，我不敢看了…… 波折了一下很快我就离开了继续和朋友玩。现在回想起来，那时候我们的心态真不好，尤其是对爱自己的人。</p><p>到了送花环节，我妈跟我说把带给我的花送给台上的老师，走上去时台下居然响起了几个女生的惊呼，这不得不让我有些尴尬…… 但是几个班主任都太多花了抱不住不愿意收，僵持了会才算收下了，那时候就是这样，可能表面光鲜亮丽，实际嘛……</p><p>晚上班主任招呼大家去饭堂拍个合照，拍照的时候我看到一个正在吃饭的女生看着我们看呆了，过了一会她才意识时间到了赶紧离开了。</p><p>晚上我把我妈带给我的东西和舍友一起分了，过了几天我穿鞋的时候发现自己脚上出现了很多鲜红的红点，摸起来没有什么感觉，也没有什么感觉，不知道出于一种什么心理，我没有过多留意。红点慢慢的变多，由脚上蔓延到大腿上，先前还是鲜红色的红点变成了暗红色，与此同时也有更多的鲜红色红点出现。</p><p>现在回想起来，我们的人生很多就是这样，你自以为做出了个洋洋得意的万全决定，马上就有件事出来打脸你，如果我们对待关系想法完全不一样，哪怕对方是不是一个学校的，也许都不会发展成后面那样。</p><h3 id="危机显现"><a href="#危机显现" class="headerlink" title="危机显现"></a>危机显现</h3><h3 id="指引父亲的人（高中未解之谜其二）"><a href="#指引父亲的人（高中未解之谜其二）" class="headerlink" title="指引父亲的人（高中未解之谜其二）"></a>指引父亲的人（高中未解之谜其二）</h3><p>今天是高三上学期的最后一天，这已经是第二还是第三个星期住院了，伤口愈合还是遥遥无期，我还是只能在医院度过，我爸代替我回学校开家长会并且把东西拿回来。回来之后我爸闲暇之中说起了一件事：</p><p>他回去学校的时候有个同学过来问：是不是（我的名字）的爸爸，之后带着他去我们班那里签到还指引了我们班的位置，还问了下我住院的情况。</p><p>我爸随心说着我却大吃一惊，我很惊讶地说：不对啊，你不是只在高一高二刚开学的时候去了一两次，怎么有人能认出你呢？男的女的？我爸妈没有回答，沉默了会便离开了。</p><p>其实这种家长会只是会每个班派几个人搬个桌子椅子去教学楼一楼让家长签个到而已，并没有指引家长签到或者指引班级的任务。最多家长主动问的时候指引一下或者说签到处本身就承担了指引家长的功能，因为学校不大而且对参与的同学来说也算某种放风，自然不会做这种“吃力不讨好”的事情</p><p>我后面没有主动问过，毕竟只是件小事，也许只是我爸友善的一个打趣或者只是这位同学猜出来了而已。</p><h3 id="高三下"><a href="#高三下" class="headerlink" title="高三下"></a>高三下</h3><p>(待填坑)</p><p>今天广播里在播报二模的成绩，我还在为自己成绩原地踏步而懊恼，突然我从广播中播放的每班前十名发现：不对啊？怎么没有 L 的名字了。我有点惊讶，看来不可能完全消除只算是延后了影响吗？下课时我日常被 L 吸引过去，只是当我回头，我感觉自己多了些惆怅。</p><h3 id="一个悄悄又公开的八卦"><a href="#一个悄悄又公开的八卦" class="headerlink" title="一个悄悄又公开的八卦"></a>一个悄悄又公开的八卦</h3><p>一天晚上晚自习下课我照常写第二天的课表，写完放粉笔的时候我被前面两个正在对话的女生吸引了，女生听的表情似乎有点震惊，没有说出来任何话。</p><p>“1 班（某个女生）的问我你们班那个（没听清）有没有女朋友”<br>“我说我不太清楚”</p><p>这还能有谁呢？我有点惊讶的看着她们时我的目光被窗外吸引了，此时窗外 L 从外面走过，两眼发光面带笑容的看着我，她走后我的视线回到了那两个女生身上<br>那个女生也有点激动地说“就是他，他现在在看着啊”<br>我有点震惊的说不出话了，但被点出来那也只能撤退了，那两个女生也停止了聊天。</p><p>一天晚自习，我的同桌也是我的饭搭子突然对我说：“有人喜欢你”，我愣了下笑着说“别开这种玩笑”，同桌有点无奈的摇头就再也没说话了，我才知道他是认真的，不过也没几天了我觉得也没必要搞什么波折了。高考一结束我就要回到自己的城市，以后大学想必也不是在一起的，何必呢？</p><p>真没有剩下几天了，一天我走回班级的时候看着教学楼，想着“终于要解放了”。</p><h3 id="再会，谢谢所有的鱼"><a href="#再会，谢谢所有的鱼" class="headerlink" title="再会，谢谢所有的鱼"></a>再会，谢谢所有的鱼</h3><p>高考结束了，载着我们的大巴车回到了学校，家人早就等我了，我和家人一起走回宿舍搬东西，远远地，T 抱着个箱子和她的妹妹妈妈也向这边走来，大家就和平常一样如此擦肩而过，我早已忘记当天是个什么天气了，只记得 T 挺开心的，当然不是那种露出牙齿的开心，而是一种一如既往的淡淡的、心满意足的开心。</p><p>过了两天就是毕业典礼，典礼结束从饭堂回来，同学都在陆陆续续进入班级，我进教室的时候看到 L 独自从厕所回来，就和之前每一天一样，我停下了脚步。她看了看我低下头伸手擦着眼睛，同学一个个从身前走过，我看着感觉五味杂陈，终于她抬起头大步向前走了，我的目光跟随她离开了我的视线，她回到自己的生活去了。</p><p>这世上哪有这么多巧合，我印象中这是最后一次相遇。</p><h3 id="高中余音（续）"><a href="#高中余音（续）" class="headerlink" title="高中余音（续）"></a>高中余音（续）</h3><p>成绩出了，回校开填报会，我出发的很晚了，来到时候已经快结束了，我从后面悄悄进入课室，一位同学拉住我，她跟我说“有个朋友刚过高优线，不好填专业，又不想读二本，想问问我的意见”（当然不是她，我们班没有人过了高优线）。当时也有点不在状态，回答的很随意，不过我多少分啊，何德何能指导别人？虽然我尽量说“她自己决定”，但是同学非要我给出点建议，我也只好硬着头皮回答了，我们的聊天在她感叹“感觉高中三年就没有努力一样”中结束了，虽然我觉得这成绩也算意料之中吧。</p><p>晚上回家我躺在床上回想着和同学的对话，一年前的担忧变成了现实，如果没有高三这些事的话，她原来能去更好的学校，遇见更好的人，这值得吗？</p><p>刚刚过了本科线，没几个学校能选，我挑了个自己喜欢的城市、自己喜欢的专业，很顺利就录取上了。</p><p>收到录取通知书一段时间后，我收到了朋友的私聊，问我去哪个学校了，我如实回答了。</p><h3 id="高中余音（续二）"><a href="#高中余音（续二）" class="headerlink" title="高中余音（续二）"></a>高中余音（续二）</h3><p>其实就算到最后我还是有些怀疑是自己自作多情了，或者因为高三压力大产生的幻觉，毕竟也没有真凭实据只凭着感觉还是有点太一厢情愿了。</p><p>还需要最后再回学校一次拿档案，我天还没亮就出发了，和宿舍舍友最后一次相聚，坐在图书馆听着舍友和班主任一起聊天，聊到一个舍友和他隔壁学校的女朋友，班主任觉得他们差距太大了，一个在专科，一个在 985 师范，未来很渺茫。说着外面走过一群女生，一个舍友说着，“是一班的女生”，我侧头看了看，人群中似乎看到了一个面朝这边的笑脸。</p><p>中午去舍友家开的饭店吃饭，我和另一个舍友和班主任一台车，班主任在车上暗示那位舍友争取下准备复读的一位女生，希望能凑下他们一对，虽然我已经记不起班主任说了什么了，但是我当时听到班主任劝说他的时候引用我来比较时似乎话里有话，似乎是让这位舍友不要学我，我选择不一样不代表如何如何。当时让我非常震惊，居然连班主任都知道了。</p><p>我不告诉别人，不等于别人都不知道。可能更实际的情况是，周围人多多少少都知道一些，只是没人和我聊过罢了。</p><h3 id="闲暇时光"><a href="#闲暇时光" class="headerlink" title="闲暇时光"></a>闲暇时光</h3><p>在写本文的时候，我尝试去找了一些资料看看有没有类似的故事。可惜，没有一个故事和这些一样，看着也很陌生，也许是本文叙述的故事其实都停留在很初级的阶段（可能初级都没有，入门都很勉强），而其他人描述的故事几乎都已经有了实际接触交流。确实，常理来说很难有人能保持对陌生人有这么大的情感也没有接触，反过来说，也很少有人在感受到巨大的情感冲击后什么也没干。不过有时我也想，要是假的那也挺好，自作多情总比真有爱被浪费掉好，环保嘛。</p><p>距离高中已经过去很多年了，学生时代在遥远的地平线上渐行渐远，大家慢慢蜕变了成为了不想上班的社畜，想必当她们碰到工作上、学业上的幸福和烦恼，打开手机微信里也早已有了个置顶，有可以分享生活的一切了的他了吧。</p><p>可能她们都不记得这些往事了，这也很好，说明她们都过得很好，毕竟时代总在前进嘛。</p><blockquote><p>“别说七八年，你大学毕业甚至都不一定还记得初中喜欢过的人的名字，哪来那么多鲜活的情感一直保存。”</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;从没说出口的秘密&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这些故事从来没和任何人说过，其实事情也不算稀奇，只是着落在自己身上的时候有种不真实感，所以一直没有开口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;发情期的人</summary>
      
    
    
    
    
    <category term="生活" scheme="https://yebingiscn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>重大变故后该走向何方</title>
    <link href="https://yebingiscn.github.io/2023/09/12/%E9%87%8D%E5%A4%A7%E5%8F%98%E6%95%85%E5%90%8E%E8%AF%A5%E8%B5%B0%E5%90%91%E4%BD%95%E6%96%B9/"/>
    <id>https://yebingiscn.github.io/2023/09/12/%E9%87%8D%E5%A4%A7%E5%8F%98%E6%95%85%E5%90%8E%E8%AF%A5%E8%B5%B0%E5%90%91%E4%BD%95%E6%96%B9/</id>
    <published>2023-09-12T14:46:08.000Z</published>
    <updated>2025-07-19T17:24:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="复盘"><a href="#复盘" class="headerlink" title="复盘"></a>复盘</h1><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><ol><li>之前和算法他们交流，算法说 7 月的时候就已经被通气说要小心一点，但是我这边却没有任何消息。看同组其他人他们的反应觉得似乎也是很突然？之前还和我说测试组不动人</li><li>现在来看，也许当时标签换人就是一个坑，可惜当初只是沉浸在了即将变成 A 角的紧张感中，不能说当时已经决定至少可能也有这方面的准备了</li><li>整件事不管真相如何，落实到个人层面上有一种很强的无力感，你明知是一个大坑却只能眼睁睁看着发生。这确实是件相当难受的事情。整件事就是灰犀牛+黑天鹅的叠加</li><li>当初以为进趣丸是历史的选择，结果只是一个小插曲，最后历史还是按照巨大的惯性走向了该去的方向。那么下一步是？<strong>我不觉得我现在准备考研能考上研究生</strong><blockquote><p>ps: 不会是归因评审会的时候我看了下手机被发现了吧<br><strong>最大的可能还是 hc 超发了,多招了人，要裁可不就裁应届了吗，负责项目又少又可以顶上</strong></p></blockquote></li></ol><h2 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h2><blockquote><p>我不觉得做完这些能改变最后的结局，但是也能对以后有所启示吧</p></blockquote><ol><li>缺少了与 Leader 的通气；一起吃饭的两个校招生都很会向上管理</li><li>应该积极参与组内事务，比如当初的排布 AB 角</li><li>应该接手风控的 B 角，当初还是希望能和导师共同测试一个项目，画像的项目组也比较和我胃口</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>这个无论对谁来说都不是一件轻松的事情，但是既然发生也只能接受</li><li>趣丸的经历清晰的告诉这一个事实，那就是数据测试工程师的工作可以完全适应，但也潜藏了些危机</li><li>测试用例编写需要进一步加强</li><li>经验实在是太少太少</li></ol><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>面试人人租果然没过(还损失了一下午工资+个人信息)，二（终）面没过<br>以现在的眼光来看感觉是提前看了信息导致以及当时还没从趣丸环境脱离出来影响了，当然自身的能力也很重要<br>当初还鄙视人人租，现在连外包都去不了了，可能要面临一个相当长的空窗期<br>未来应该怎么走呢？</p><h1 id="社招面试经历"><a href="#社招面试经历" class="headerlink" title="社招面试经历"></a>社招面试经历</h1><h2 id="人人租（研趣）"><a href="#人人租（研趣）" class="headerlink" title="人人租（研趣）"></a>人人租（研趣）</h2><p>就跟趣研反过来也是挺离谱的哈<br>笔试的时候恍惚间好像看到了某个人</p><blockquote><p>虽然公司被吐槽，但是面试没过也值得深思，可能还是经验和能力还是不太行<br>看到面试官用例和 SQL 都给打了半勾，说明还需要加强<br>面试的时候能够明显感觉到自己明显对标签更在行，对 WEB 还有性能什么的不太在行，这方面可以针对提升下</p></blockquote><ol><li>子查询和关联查询哪个性能高为什么<br>因为在关联查询中，数据库系统可以利用索引等优化技术，根据关联条件快速定位需要查询的数据行，然后将结果合并返回，效率比较高。<br>而在子查询中，每次子查询都会执行一次完整的查询操作，相对于关联查询会产生更多的 I&#x2F;O 操作和 CPU 负担，而且不能充分利用索引优化等技术，因此性能相对较低。</li><li>如何定位前后端 bug<blockquote><p>首先要判定 bug 位置<br>主要看返回的消息体以及请求的状态码</p></blockquote><ol><li>返回的消息体正常，即为前端 bug</li><li>返回消息体异常，检查请求方法，请求方法正常即为后端 bug 否则为前端 bug</li><li>状态码也可以判断，如果非 200 基本为后端异常</li><li>看是否是界面的问题，例如 UI，可见与不可见等常见的由前端控制的界面</li><li>如果能查到数据库，可以检查数据库，一般即为后端逻辑问题</li><li>看需求文档</li></ol></li><li>有没有做过 SQL 优化<blockquote><p>当时有点傻了，直接说这个不是测试的工作，其实有些小细节也完全可以说</p></blockquote><ol><li>避免使用 SELECT *</li><li>优化 JOIN 语句</li><li>特殊值过滤，减少无用数据</li><li>谓词下推，例如先对数据进行筛选，之后进行 join 和 group by 操作</li><li>联合条件准确，避免笛卡尔积</li></ol></li></ol><h2 id="知否科技"><a href="#知否科技" class="headerlink" title="知否科技"></a>知否科技</h2><blockquote><p>成立 3 年的小公司，员工不多<br>面试准备不好，笔试有些没答上来，面试也一般般，当时活动测试其实就是 H5 测试，面完后才想起来<br>UI 自动化当时有这个想法，但是还没来得及实现就 gg 了</p></blockquote><ol><li>隐式等待和显示等待的区别：<ol><li>隐式等待是全局的，可以随时更改的，显示等待是针对单一元素或者一组元素的</li><li>隐式等待只能针对元素查找方法，显示等待可以自定义等待条件</li><li>强制等待：就是 sleep() ，也叫硬等待；</li></ol><ul><li>缺点：如果等待时间过长，即使元素已被加载出来了，但还是要继续等，这样会导致整个脚本的执行上会浪费很多时间</li></ul><ol start="3"><li>显式等待：设置一个超时时间和一个元素查找条件，在这个时间内，不断寻找元素，超时找不到就会报错</li></ol><ul><li>不需要页面全部加载完成，相对节省时间</li><li>代码量多</li></ul><ol start="4"><li>隐式等待：设置一个超时时间，在这个时间内，不断的寻找元素，超时找不到就抛出异常</li></ol><ul><li>一次声明，终生有效–对其后执行的每一行元素定位都有效</li><li>所以，通常在创建 driver 之后就去申明</li><li>隐式等待，需页面全部加载完成再执行，相对浪费时间</li></ul></li><li>如何选用等待方式<ul><li>申明一个隐式等待，全局通用</li><li>对于一些加载特别缓慢的元素，设置显示等待，适当为其增加等待时间</li><li>当显示等待与隐式等待同时出现的时候，取时间更多的一个生效</li></ul></li></ol><h2 id="九四智能"><a href="#九四智能" class="headerlink" title="九四智能"></a>九四智能</h2><blockquote><p>看起来是中型公司，不过开发似乎也不多<br>面试答得不好，面试官表示没听懂我的项目，特别是标签以及风控平台<br><strong>她表示表述不清楚挺丢分的</strong></p></blockquote><ol><li>感觉可以记一下 boss 上的标签简介，简介+自己做的工作</li><li>自动化这块得好好想想怎么答，特别是针对哪个方面做的自动化</li></ol><h2 id="阶段总结"><a href="#阶段总结" class="headerlink" title="阶段总结"></a>阶段总结</h2><p>感觉很多公司用不上趣丸那些屠龙记，但是又没办法表述清楚+展现自己的能力，还是挺尴尬的，想办法做些改进吧。<br>记得如果有反问环节问下建议。好几个面试里都不记得了</p><h2 id="理想定制"><a href="#理想定制" class="headerlink" title="理想定制"></a>理想定制</h2><blockquote><p>不是我投的，有人帮了倒忙，但还是我们太差劲了</p></blockquote><ol><li>点击就送，但是任务很多很杂，什么都没有，才给 4K（假如真去做了，再拿到 8K 和 8% 公积金不知道得何年何月了）</li></ol><h2 id="阶段总结-1"><a href="#阶段总结-1" class="headerlink" title="阶段总结"></a>阶段总结</h2><p>像是种补偿或者更像是种嘲讽，把人打到半死的时候给桶水打醒休息下准备继续打<br>伴伴 + 趣丸经历感觉给我穿上了长衫，假如当初一直没有稳定工作，是不是理想定制给 4K 也会干呢？<br>如果去做了 IT 支持，运维什么的，再被裁员应该去哪呢<br>现在招聘网站都经常不想点开，不想投简历了。</p><h2 id="智会云"><a href="#智会云" class="headerlink" title="智会云"></a>智会云</h2><blockquote><p>面的感觉还行，不知为何没有通过，现在想想他应该就是想招个实习生</p></blockquote><ol><li>安全测试有哪些</li><li>有通过 Linux 部署测试环境吗</li><li>接口测试是怎么测的（接口自动化别说用新质量平台吧，说成自己编码的也好）</li><li>能通过项目来预估时间吗</li><li>Docker 有用过吗</li><li>反问的时候问了下有什么建议吗，他说没有。。。。。。</li><li>询问薪资的时候我说 5k，他说是最高薪资吗。。。。。。</li></ol><h3 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h3><ol><li>Python 得刷下题，碰到的时候有点慌</li><li>面试的时候对项目描述还是有些紧张</li><li>对于一些了解却没做过的得好好想下怎么答</li></ol><h2 id="广东颐点软件科技"><a href="#广东颐点软件科技" class="headerlink" title="广东颐点软件科技"></a>广东颐点软件科技</h2><blockquote><p>面试官直言行业不符合，而且这个听起来像是短期项目（项目结束后就走人那种）</p></blockquote><ol><li>性能测试怎么做，多大（把 QPS 忘了）</li><li>接口测试怎么做</li><li>测试用例包含哪些内容</li></ol><h2 id="广东保伦电子"><a href="#广东保伦电子" class="headerlink" title="广东保伦电子"></a>广东保伦电子</h2><blockquote><p>面试官挺好的，有重视你简历的感觉，开出的薪资也还可以，但是被加班和没人带吓到了，没有当场答应拿到 offer<br>回来想想感觉吃亏了<br>可能还是没有脱下长衫，没办法之前的工作太好了</p></blockquote><ol><li>听起来需要做 a 测+部门内部测试（硬件+软件测试）</li><li>很忙还有加班文化（面试官着重强调能否适应加班，“要奋斗不要偷懒的”），895.5。其他的条件也不太行，总的来说算是钱一般事多离家远<br>以趣丸的经历来说感觉 985 还可以接受，日常加班到 10 点就有点不太行了。不过现实中哪有这么好的工作呢</li></ol><h2 id="阶段总结-2"><a href="#阶段总结-2" class="headerlink" title="阶段总结"></a>阶段总结</h2><p>保伦电子在内耗两天之后还是向面试官表达了想去的意愿，但面试官再也没回过信息了。于是也只能继续投简历</p><h2 id="广州同玩科技"><a href="#广州同玩科技" class="headerlink" title="广州同玩科技"></a>广州同玩科技</h2><blockquote><p>是一家不到一百人的互联网小公司，福利看着挺好的，面试的时候才发现是要去做 APP 测试，不知道为什么，他们还是招了我进去</p><blockquote><p>当时觉得自己应该就这家了，但不太确定，果然刚进入小区门口就收到了录用通知</p></blockquote></blockquote><ol><li>一面技术官看到我没做什么 APP 测试经历没问什么问题</li><li>覆盖安装，主要是功能测试</li><li>记不太清楚了，答得不太好，但是经历了后面的面试</li><li>面试官和我说我不要求你 996，但是你一定要有 996 的能力</li><li>面试等待的时候发现隔壁在面试，听了下，一周得发两次版</li><li>技术官和我说我认识数据部的产品，但我不记得谁信华，后来想了想可能是数据部产品的老大。他说会去核实下趣丸的工作</li><li>老板说我的经历挺坎坷的</li></ol><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>12 月 13 日，我收到了 offer，距离 9 月 5 日我放下工作过去了 99 天<br>12 月 18 日，我来到公司报道，距离 9 月 22 日我离开趣丸过去了 87 天<br>公司福利一般，加班也很猛，最低基数，公司 APP 要么是骗看广告的的要么是自研但一直亏损<br>但好歹是我去面试以来最好的一家<br>但好歹有双休<br>好歹离家近，工资也还行，导师也很好<br>父母一直催促我们去端盘子，也确实是让他们失望了<br>在这个日子里，你没法要求更多，只能加油吧</p><blockquote><p>在绝境中没人能拯救你，哪怕是你父母，他们也只希望你尽快解决不管用什么方式<br>但<strong>人是自己命运的主人</strong></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;复盘&quot;&gt;&lt;a href=&quot;#复盘&quot; class=&quot;headerlink&quot; title=&quot;复盘&quot;&gt;&lt;/a&gt;复盘&lt;/h1&gt;&lt;h2 id=&quot;历史&quot;&gt;&lt;a href=&quot;#历史&quot; class=&quot;headerlink&quot; title=&quot;历史&quot;&gt;&lt;/a&gt;历史&lt;/h2&gt;&lt;ol&gt;
&lt;</summary>
      
    
    
    
    
    <category term="生活" scheme="https://yebingiscn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>实训记录</title>
    <link href="https://yebingiscn.github.io/2022/11/06/%E5%AE%9E%E8%AE%AD%E8%AE%B0%E5%BD%95/"/>
    <id>https://yebingiscn.github.io/2022/11/06/%E5%AE%9E%E8%AE%AD%E8%AE%B0%E5%BD%95/</id>
    <published>2022-11-06T08:20:33.000Z</published>
    <updated>2025-05-30T18:36:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实训"><a href="#实训" class="headerlink" title="实训"></a>实训</h2><pre><code>大学四年的唯一一次实训，连上了10天，期间还请了不少假，趣丸面试3次，建行笔试1次。收获也是有的，可惜最后是这样结束。没有做出一个出色的项目也没拿到优秀。周五晚在图书馆这样写到“正如这个秋天很多事一样，最终都不尽如人意。”</code></pre><ol><li><p>原来是讲微信小程序的，在我的据理力争之下（我觉得），改成了VUE。事实上，这样改了确实帮我们能构建一个简单的VUE程序，不会说完全看不懂了。可惜没有用上element-ui，也没机会用上Ajax，现在想来还是too young too simple，一个路由传参花了很多时间，电脑卡死也很坏心情（刚好是趣丸发offer的那一晚）。</p></li><li><p>实话实说，最后几天我没有听懂，也许做花点时间也能做出来，但我确实没有听懂，Java也是这样，学到后面听了个课，听了之后却好像没有听一样。</p></li><li><p>培训班骗人说实在没什么意思，不过跟我相处的时候倒挺好，我说我去测试&#x2F;测开，“为什么不走开发？”，也没有劝我或宣传报培训班，只是说“如果你想走开发可以考虑走我们的火箭班”，但到了这个时候，我也不想走开发了。</p></li><li><p>实训占用了很多时间，六级、体测都搁置了，感觉这时间其实挤一挤还是有的，就看自己有没有这个决心了。</p></li><li><p>听说海大一半的人都拿了offer，看来菜的只是我们，一步错步步错，眼下只能加固自己的知识储备，继续投简历了。</p></li><li><p>在观察者网看过一篇文章《平庸的人生，要想做成一点事很难的》，颇有感受，我想尤其是逆境时更是如此。</p><blockquote><p>“我想说的是平凡平庸的人生想做成一点事是很难的，我们认定一件事就要狠心做下去，全力以赴就算没成功也无怨无悔。如果侥幸成功了那么这段人生经历就是我们人生中宝贵的精神财富，是单单金钱买不到的。” </p></blockquote></li><li><p>这个秋天跟我妈打了很多电话，还是得自己加油。</p></li></ol><h2 id="Ajax的使用"><a href="#Ajax的使用" class="headerlink" title="Ajax的使用"></a>Ajax的使用</h2><ol><li>首先得导入AJAX,<code>npm install axios</code></li><li>接着可以这么使用，注意：图示的代码会报跨域问题（可能需要使用JSON解决）</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">    axios.<span class="title function_">get</span>(<span class="string">&#x27;https://api.xiao-xin.top/API/yiqing.php&#x27;</span>,&#123;</span><br><span class="line">        <span class="attr">params</span>:&#123;</span><br><span class="line">        <span class="attr">city</span>: <span class="string">&#x27;湛江&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sentence</span> = response.<span class="property">data</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实训&quot;&gt;&lt;a href=&quot;#实训&quot; class=&quot;headerlink&quot; title=&quot;实训&quot;&gt;&lt;/a&gt;实训&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;大学四年的唯一一次实训，连上了10天，期间还请了不少假，趣丸面试3次，建行笔试1次。
收获也是有的，可惜最后是这样结束。
没</summary>
      
    
    
    
    
    <category term="生活" scheme="https://yebingiscn.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>笔试面试经验总结</title>
    <link href="https://yebingiscn.github.io/2022/09/05/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    <id>https://yebingiscn.github.io/2022/09/05/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</id>
    <published>2022-09-05T13:23:19.000Z</published>
    <updated>2025-07-19T17:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="同花顺笔试"><a href="#同花顺笔试" class="headerlink" title="同花顺笔试"></a>同花顺笔试</h2><blockquote><p>今天周一，基本满课，抽出时间做了同花顺的笔试，感谢同花顺，可以让我见见世面。<br>做笔试的时候其实没想得这么多（第一题就看不懂了）时间也不太够，40 道题 5 道编程题包括 2 道算法，做完感觉还行，但是我只做出了一半，其实不应该<br>刷了算法，刚好考到一题我会的，结果牛客网上不用输入。。。<br>好多 C 的知识，我也不会，什么宏定义，那都是 C&#x2F;C++的知识，Linux 的知识反而比较少。<br>还有个值得吐槽的是，同花顺的代码只能写，不能试也没有提示，UpperCase()只记得大概了</p></blockquote><h2 id="4399-笔试"><a href="#4399-笔试" class="headerlink" title="4399 笔试"></a>4399 笔试</h2><blockquote><p>主要是算法炸了心态，三道字符串的题目，应该很简单的，结果都忘了</p></blockquote><ol><li>替换字符 ，解法是遍历，StringBuilder 判断接收</li><li>查找字符串中的数字，解法是遍历+Hash?</li><li>增加字符串中的指定字符,多重 for 循环应该能搞定</li></ol><h2 id="信锐技术笔试"><a href="#信锐技术笔试" class="headerlink" title="信锐技术笔试"></a>信锐技术笔试</h2><ol><li>跳台阶+字符串(但是只通过了 80%，前者只通过了 40%，百思不得其解)</li><li>强关联（没找到相关资料）</li><li>后序遍历（这个也基本考了）<br>在二叉树中，先左后右再根，即首先遍历左子树，然后遍历右子树，最后访问根结点。</li><li>出栈序列判断栈长度（这个基本都考了）</li><li>几个节点二叉树<br>f(n) &#x3D; f(n-1) + f(n-2)f(1) + f(n-3)f(2) + … + f(1)f(n-2) + f(n-1)</li><li>网段判断（常考）<br>A 类，网络号为前 8 位， 后 24 位为主机号<br>B 类，网络号为前 16 位，后 16 位为主机号<br>C 类，网络号为前 24 位，后 8 位为主机号</li><li>交换机工作原理，VLAN 划分和网段划分搞错了，网段划分是路由器做的</li></ol><h2 id="鼎桥笔试"><a href="#鼎桥笔试" class="headerlink" title="鼎桥笔试"></a>鼎桥笔试</h2><blockquote><p>全是选择题，主要是测试、Linux、SQL 和通信相关的知识</p></blockquote><ol><li>Linux 运行状态<br>运行，中断，不可中断，僵尸，停止状态</li><li>IP 网络通信类型<br>单播，组播，广播</li><li>Linux 后台启动进程结尾＋&amp;</li><li>strcat 拼接，strcmp 比较</li><li>more 用于一次显示一页</li><li>ln 的功能是为某一个文件在另外一个位置建立一个同步的链接</li><li>chown 可以将文件的拥有者加以改变 chmod 改变文件的读写许可设置<br>若要 rwx 属性则 4+2+1&#x3D;7；<br>若要 rw-属性则 4+2&#x3D;6；<br>若要 r-x 属性则 4+1&#x3D;5。</li></ol><h2 id="阶段性总结"><a href="#阶段性总结" class="headerlink" title="阶段性总结"></a>阶段性总结</h2><p>总的来说算法都是比较简单的，如果刷熟剑指 offer 的简单题中等题肯定是可以了。测试题也比较简单，但是吧。。。</p><h2 id="信锐一面总结"><a href="#信锐一面总结" class="headerlink" title="信锐一面总结"></a>信锐一面总结</h2><blockquote><p>9 月 15 日<br>时长 15：38 - 16：00，时长较短，感觉有点像 KPI 面。通知三天内出结果，应该挂了</p></blockquote><ol><li>自我介绍</li><li>回顾笔试算法：跳台阶（动态规划） + 字符串数量 &gt; 3 删掉（哈希）</li><li>介绍项目：老人跌倒检测平台，建议：可以加上 AI 电话（这个说真的技术难度比较大）</li><li>场景测试</li><li>TCP 和 UDP 的区别，动态路由协议：RIP 和 OSPF</li><li>Linux 常用命令，读写怎么改</li><li>提单（不应该说没有用过，应该说看视频操作过；还有这个内容也说少了）</li><li>低复现高危害 bug 怎么搞</li><li>bug 生命周期（这个忘记了，结果正好问道）<ol><li>发现 bug</li><li>提交 bug</li><li>指派 bug</li><li>确认缺陷</li><li>修复 BUG</li><li>回归验证 BUG</li><li>关闭缺陷</li></ol></li><li>学校相关：与同龄人差距主要是在哪里</li><li>为秋招准备了哪些工作</li><li>反问：面试流程</li><li>建议：了解敏捷测试</li></ol><h2 id="信锐二面总结"><a href="#信锐二面总结" class="headerlink" title="信锐二面总结"></a>信锐二面总结</h2><blockquote><p>9 月 16 日<br>时长 10：40 - 11：06，时长较短，面试官讲话有些不太清楚，应该是部门面，无技术问题。感觉说的不太符合面试官意思，应该挂了</p></blockquote><ol><li>自我介绍</li><li>介绍项目，用了哪些测试方法</li><li>自动化测试有什么缺点（封装 + 手工测试）</li><li>你们怎么确保项目文档里写的功能都有实现，用什么方法<br>（这里扯了很长时间，我也不知道用什么方法，最后只能说像测试一样搞个预期结果，实际结果；回来问了下群友，他们说可以用单元测试）</li><li>你为什么觉得你适合做测试这个岗位，从多个维度来说<br>（这里最后一个对学校友好不应该说，应该说有师姐引路比较好，讲到这里的时候他抬头看了下屏幕，应该是看看我是什么学校的）<br>我说我参加了鸿蒙的内测算个极客喜欢找 bug，他说测试工程师这个岗位跟极客什么的还是差距很大的，他以前也喜欢搞安卓手机什么的。。。<br>（这里就在劝退了，但是差距确实比较大，毕竟是点点点嘛。）<br>建议回答：<ol><li>这几年的项目实践下来，还有老师对我的评价，让我希望去做技术，而在技术岗里我比较喜欢测试</li><li>我平时有参加过各种内测活动，像鸿蒙的内测、Windows 的内测、应用的内测，也提过不少 bug</li><li>应聘之前也看了 Tester home 论坛，感觉这个岗位的未来还是很光明的</li><li>也有师兄师姐在做这个领域，我跟他们交流测试觉得还是不错，也拿到了很多资料，相比其他岗位我的准备更充分</li></ol></li><li>反问：部门的自动化测试与功能测试占比<br>答：自动化不超过 40%</li><li>反问：新人的成长（刚入职）<br>答：培训两周然后选导师就跟项目了</li></ol><h2 id="阶段反思与总结-1"><a href="#阶段反思与总结-1" class="headerlink" title="阶段反思与总结 1"></a>阶段反思与总结 1</h2><blockquote><p>距离收到第一封信锐的面试邀约已经一个星期了，不用想肯定是挂掉了，不用再去看了，信锐的面试也有很多值得总结的地方。</p></blockquote><ol><li>在对于测试的细节操作过于泛泛，对于知识掌握也不够深入，还好两面都没考难的问题，小公司尤其可能考测试操作</li><li>笔试过的太过简单？接下来的笔试很可能要连续吃瘪，要尤其注意复习（特别是建设银行）</li><li>许多问题想到就答了，没有一套体系（“你为什么觉得你适合做测试这个岗位，从多个维度来说”就没有讲好，给抓住机会劝退了）</li><li>提前的复习面向面经是可以的，但是也不能完全依赖面经。而且面经的内容也没有记住<br>周一的时候我们收到了拉钩的翼课网面试邀约，可惜不能去提前实习，就挂了。</li></ol><h2 id="百田面试一面"><a href="#百田面试一面" class="headerlink" title="百田面试一面"></a>百田面试一面</h2><blockquote><p>10 月 21 日<br>时长 16：00 - 16：21<br>面试得太差了，好几个问题没有答出来，基本都碰到了盲点，太紧张以至于话都说不清楚。</p></blockquote><ol><li>自我介绍</li><li>玩过的游戏</li><li>项目部署</li><li>数据库增加列</li><li>种田的测试（没有考虑给的点的完善性；答得也太糟糕了，没有分点答出来;以后碰到提出是否可以做个记录）</li><li>HTTP 协议，Resutful 协议</li><li>Linux 基本命令</li><li>反问：面试官有什么建议能给我的嘛<br>建议要先了解需求，再组织好语言。可以将面试官可能问到的问题列一个大纲，先行准备。</li></ol><h2 id="阶段反思与总结-2"><a href="#阶段反思与总结-2" class="headerlink" title="阶段反思与总结 2"></a>阶段反思与总结 2</h2><pre><code>距离收到信锐的感谢信都已经一个月了，第二场面试居然如此拉跨真是没有想到</code></pre><ol><li>话都说不清楚，感觉今天也没什么不同啊；紧张的基本面试官讲的都记不住</li><li>对于面试准备仍然不够，特别是设计用例方面的，写也许可以写个大概，但是讲也过于糟糕了。</li><li>计算机网络应用层的协议还是不太行</li></ol><h2 id="趣丸科技一面"><a href="#趣丸科技一面" class="headerlink" title="趣丸科技一面"></a>趣丸科技一面</h2><blockquote><p>10 月 27 日的时候搞错了，还加了 HR 的微信。刚好等的时候收到华资的感谢信。然后上午的时候又有一家公司告诉我，“你是秋招的是吧，你不适合我们公司”<br>10 月 28 日<br>时长 15：00 - 16：08<br>有史以来时长最长的面试了，面试官基本把我简历写的每一个点都问了一遍，给了很多建议<br>很多都没复习到，只能根据印象去答。太多了不太记得了，挑些重点而且还记得的写下吧<br>面试官没开摄像头，说摄像头坏了</p></blockquote><ol><li>SQL 优化:怎么写 SQL 性能比较快等等</li><li>索引:有哪些索引；索引优点和缺点；什么情况要建立索引</li><li>SQL 题：分页查询（答错了）limit(第几行开始，查多少行)</li><li>测试：白盒测试有哪些；覆盖率最高是哪个（答了个条件组合覆盖，后面看了下是逻辑覆盖）</li><li>场景题：测试微信头像</li><li>计算机网络：HTTP 协议和 TCP 的区别</li><li>Linux：常用命令</li><li>Linux 场景题： Linux 过滤关键字写入另一个文件（答错了） cat 文件名 |grep ‘’ &gt; 文件名</li><li>职业规划</li><li>怎么学习的测试，从哪里学的</li><li>如果领导给你任务，你发现知识储备不够或者时间不够怎么办<br>面试官说刚刚面试了一个科班的，但是测试基础不行<br>面试官表示互联网行业都会时间不够，不单单是测试行业的问题，主要是追热点导致的</li><li>Java（面试官表示好久没用了，想了几个以前的问题）：抽象类和实体类的区别；数组怎么转 ArrayList（答错了，可以使用）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">方法一</span><br><span class="line">Integer [] myArray = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> &#125;;</span><br><span class="line">ArrayList&lt;Integer&gt; myList= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(Arrays.asList(myArray)); <span class="comment">// [1, 2, 3]</span></span><br><span class="line">arrayList.add(<span class="number">4</span>); <span class="comment">// [1, 2, 3 ,4]</span></span><br><span class="line">myList.remove(<span class="number">1</span>);<span class="comment">// [2, 3 ,4]myList.clear();// []</span></span><br><span class="line"></span><br><span class="line">方法二使用 Java8 的Stream(推荐)</span><br><span class="line">List&lt;Integer&gt; collect = Arrays.stream(myArray).collect(Collectors.toList()); <span class="comment">// [1, 2, 3]</span></span><br><span class="line">collect .getClass()  <span class="comment">// java.util.ArrayList</span></span><br></pre></td></tr></table></figure><ol start="13"><li>Python（答得完全不对，不过我说我只学了基础）：Python 的基础类型（数字，字符串，列表，元组，set，字典）；字典里的 key 哪些类型可以做（不可变类型，笔试的选择题答反了）</li><li>接口测试：登录接口怎么测试</li><li>Selenium 定位的元素的方法（只说出了 3 种，一共有 8 种）<br>id<br>name<br>className<br>tagName<br>linkText<br>partialLinkText<br>xpath<br>cssSelector</li><li>UI 自动化优缺点</li><li>测试的流程</li><li>好像还有重现 bug 步骤和 bug 严重性（不太记得了）</li><li>redis 和 MySQL 的不同</li><li>建议<ol><li>基础中上，但是 Python 基础差</li><li>系统去学知识，尤其是要充实基础，不要花拳绣腿，公司第一个就裁测试开发（其实趣丸有专门招测试开发的岗位）</li><li>学习黑盒、计网、SQL（特别强调要加强）、Linux、编程语言特别是 Python（基础差，面试官强调了他只是问了 Python 基础，公司也要用 Python）</li><li>保持学习</li><li>进到公司新人要做个模拟项目，要做到最好；进到组里，要尽快熟悉项目情况</li><li>书籍比较落后了</li></ol></li></ol><h2 id="趣丸科技二面"><a href="#趣丸科技二面" class="headerlink" title="趣丸科技二面"></a>趣丸科技二面</h2><blockquote><p>10 月 29 日<br>时长 14：00 - 14：32<br>大数据主管面试，面试的岗位属于大数据部门<br>差不多也是从头到尾大概问了一回</p></blockquote><ol><li>介绍自己的身份</li><li>自我介绍</li><li>实习（不要求测试相关的）</li><li>项目</li><li>全连接和左连接区别（刚好没看全连接）</li><li>提了嘴索引，什么情况下不适用，以及组合索引</li><li>Linux 你主要用来干什么，基本命令，讲了一堆难的命令 ack，我只说了解 vi</li><li>长连接和短连接的区别</li><li>为什么要用 redis（面试官补充说 redis 很耗内存，想了下他的职业好像很有道理）</li><li>有学其他的语言吗，吸取了上回的教训，讲的收敛了些</li><li>测试前沿技术，要是答了测试左移会好很多，可惜讲了敏捷测试（又回想起了信锐的一面面试官）</li><li>其余东西（问了下学校在哪）</li><li>建议<ol><li>紧张</li><li>主流技术</li><li>考虑周全，精益求精，不要就只是应付</li><li>应届生头两三年成长非常快</li></ol></li><li>介绍公司的主流技术<br>Go, Java, Python, hadpop 等等</li><li>大数据测试和普通测试有什么区别<ol><li>平台数据处理</li><li>性能问题</li><li>熟 SQL</li><li>白盒代码走查，要截成各种表，收集日志</li></ol></li></ol><h2 id="阶段反思与总结-3"><a href="#阶段反思与总结-3" class="headerlink" title="阶段反思与总结 3"></a>阶段反思与总结 3</h2><pre><code>没有百田这么紧张了，回想9月的想法，也许是阴差阳错，最想去的2家都给了面试，信锐也完成了试水的任务。虽然到现在还是0offer。但却是学到了很多好像那家广州影子科技也打电话给我了，不知道是不是，给我打电话的我都没听清公司。。。继续加油吧。还是很多值得学习的，像趣丸的面试官也给了我们很多建议，很多都很中肯，可以指导我们接下来几个月的学习。</code></pre><h2 id="建设银行（翁源支行信息技术岗）笔试"><a href="#建设银行（翁源支行信息技术岗）笔试" class="headerlink" title="建设银行（翁源支行信息技术岗）笔试"></a>建设银行（翁源支行信息技术岗）笔试</h2><blockquote><p>在工商银行和建设银行笔试之间选择了建设银行，一方面是平衡实训和考试，另一方面也是没有准备因此减小竞争和平衡心态。<br>10 月 30 日 14：00 - 17：30</p></blockquote><h3 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h3><ol><li>计算机题（计算机原理，数据结构，计算机网络，C++）</li><li>行测</li><li>三篇英语阅读（好几篇讲的都是金融危机）</li></ol><h2 id="建设银行一面"><a href="#建设银行一面" class="headerlink" title="建设银行一面"></a>建设银行一面</h2><blockquote><p>11 月 5 日</p></blockquote><ol><li>半结构化面试，多对一。<ol><li>自我介绍，不能透露自己的名字。</li><li>讲下自己抽的题</li><li>领导提问（老家是翁源的吗，愿意到翁源支行工作吗）</li></ol></li><li>等待 1 小时，面试 5 分钟。</li></ol><h2 id="趣丸科技三面"><a href="#趣丸科技三面" class="headerlink" title="趣丸科技三面"></a>趣丸科技三面</h2><blockquote><p>11 月 1 日，HR 面<br>17：00 - 17：25</p></blockquote><ol><li>自我介绍</li><li>实习</li><li>项目：收获，有没有出过什么矛盾等等</li><li>学习计划（这里不知道为什么说了：补下测试基础。这个过于减分了）</li><li>坚持的最久的事情（这里说了打卡英语单词，结果后面就问有没过六级，相当于给自己挖坑了）</li><li>毕业论文</li><li>测试未来发展</li><li>offer 情况以及期望薪资（这里说有几个和趣丸差不多的厂在走最后流程会好点，期望薪资被否掉后应该赶紧说个数）</li><li>反问<ol><li>这是最后一面吗</li><li>什么时候出结果</li><li>公司氛围（要是以后还有能进到 HR 面，我想会问“HR 能给我什么建议吗”）</li></ol></li></ol><h2 id="阶段反思与总结-4"><a href="#阶段反思与总结-4" class="headerlink" title="阶段反思与总结 4"></a>阶段反思与总结 4</h2><blockquote><p>建行居然给了面试机会，不过很多人都收到了，也许是海面，面试也很紧张，准备时间也不太够，感觉没有 5 分钟就让我进入了（还被那个 025 干扰了）。<br>趣丸的话虽然走完了全部流程，但是从 11 月 4 号趣丸发 offer 和还有人在面试测试岗的情况来看，其实懂的都懂。<br>三面都暴露了太多的问题了，能走完三面实属侥幸（或是 KPI），也许我们离这些厂差得太远太远，不知道有没有机会入测试这行呢？</p></blockquote><h2 id="英码科技一面"><a href="#英码科技一面" class="headerlink" title="英码科技一面"></a>英码科技一面</h2><blockquote><p>11 月 23 日 11：00，技术面<br>BOSS 直聘投的，HR 会在不同阶段问很多问题</p></blockquote><ol><li>自我介绍</li><li>JMeter 压测（具体），没答上来<ol><li>添加测试计划</li><li>添加线程组</li><li>添加 HTTP 请求</li><li>配置 HTTP 请求</li><li>添加查看结果树</li></ol></li><li>Docker 命令，没答上来<ol><li>查看镜像 docker images</li><li>下载镜像 docker pull</li><li>删除镜像 docker rmi</li><li>查看容器 docker ps</li></ol></li><li>SQL 相关，内连接，外连接</li><li>用哪些测试框架： Seleiumn，Pytest，Junit，unitTest，Appium</li><li>建议：<ol><li>基础比较扎实，对于应届生来说够用了，自动化要深入</li><li>公司都是 Python 技术栈</li></ol></li></ol><h2 id="英码科技二面"><a href="#英码科技二面" class="headerlink" title="英码科技二面"></a>英码科技二面</h2><blockquote><p>11 月 24 日 14：30，技术+HR 面<br>HR 问了很多问题，技术官是 AI 的部门主管</p></blockquote><ol><li>HR 面（有的经历其实没那么丰富，只能编，只能说是 3 分真 7 分假吧）</li><li>技术面</li><li>Spring 几个技术有什么区别</li><li>Web Socket 和 HTTP 的不同（说错了一点，Web Socket 是基于 HTTP 的）</li><li>Pytest 用来测试过什么。。。（没用过其实）</li><li>为什么选测试，究竟是找工作需要，还是什么的<br>说了理解复杂代码上可能有些吃力，感觉这个回答的不好。不可能说自己数学思维差吧。<br>面试完之后我确实在想我为什么选测试呢？测试这个岗位真的适合我吗？</li><li>建议：<br>技术官不愿意给我建议，说是自己不自信，我说希望得到互联网混了几年的建议。<br>于是技术官询问了我的未来规划，但最后还是没给我建议<br>HR 感觉有些在劝退我，她说可以多多了解不同的工作岗位，不仅仅是测试或者开发之类的</li></ol><h2 id="阶段反思与总结-5"><a href="#阶段反思与总结-5" class="headerlink" title="阶段反思与总结 5"></a>阶段反思与总结 5</h2><blockquote><p>英码是很偶然的一个机会，我觉得这次面试带给我们最大的教训便是 Python 对于测试来说是很重要的一门语言，光会 Java 是不行的。<br>星期五的时候我微信询问了下 HR 结果，却一直没回，等到晚上的时候，我看到这位 HR 发了朋友圈吹嘘说已经为封城准备好了。。。<br>变数太多了，截至 11 月 28 日，乃至趣丸、建行都没给最后回复。。。尤其是这个周末的发生一系列的事，只能说做好自己吧。<br>11 月 29 日，英码表示综合能力与他们希望的有所差别，已被拒。<br>11 月 29 日，建行开始电联第一批，所以也就这样了。</p></blockquote><h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>12 月 12 日，我们抱着遗憾离开了学校，回到家以后，我投了几份实习简历，最终 OLA（伴伴）在好几个面试者中选择了我们，虽然远了些，但是待遇还可以，<br>于是我们就在 12 月 28 日去了 OLA，确实也不错，那时趣丸的状态依然是“面试评估”。<br>接着在 1 月 5 日，趣丸的补录看上了我们，询问我们是否愿意去，可以直接发 offer。<br>由于趣丸还是这个岗位，待遇也不错，最终我们在 1 月 7 日收到了 offer，1 月 11 日签好了三方协议。好像梦一样，现在回看这些，好像已经过去了很久很久。<br>希望也记住这段经历吧，好好学习，要争气，别丢脸吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;同花顺笔试&quot;&gt;&lt;a href=&quot;#同花顺笔试&quot; class=&quot;headerlink&quot; title=&quot;同花顺笔试&quot;&gt;&lt;/a&gt;同花顺笔试&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;今天周一，基本满课，抽出时间做了同花顺的笔试，感谢同花顺，可以让我见见世面。&lt;br&gt;做笔试</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>完善项目</title>
    <link href="https://yebingiscn.github.io/2022/08/29/%E5%AE%8C%E5%96%84%E9%A1%B9%E7%9B%AE/"/>
    <id>https://yebingiscn.github.io/2022/08/29/%E5%AE%8C%E5%96%84%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-08-29T15:00:40.000Z</published>
    <updated>2025-01-10T15:45:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加-Swagger"><a href="#添加-Swagger" class="headerlink" title="添加 Swagger"></a>添加 Swagger</h2><pre><code>注意不要升级依赖到3.0，3.0很可能只支持新jdk开启方式: http://localhost:8080/swagger-ui.html#/</code></pre><h3 id="配置-config"><a href="#配置-config" class="headerlink" title="配置 config"></a>配置 config</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">// 标明是配置类</span></span><br><span class="line"><span class="meta">@EnableSwagger2</span> <span class="comment">//开启swagger功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwaggerConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Docket <span class="title function_">createRestApi</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Docket</span>(DocumentationType.SWAGGER_2)  <span class="comment">// DocumentationType.SWAGGER_2 固定的，代表swagger2</span></span><br><span class="line"><span class="comment">//                .groupName(&quot;分布式任务系统&quot;) // 如果配置多个文档的时候，那么需要配置groupName来分组标识</span></span><br><span class="line">                .apiInfo(apiInfo()) <span class="comment">// 用于生成API信息</span></span><br><span class="line">                .select() <span class="comment">// select()函数返回一个ApiSelectorBuilder实例,用来控制接口被swagger做成文档</span></span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">&quot;com.example.controller&quot;</span>)) <span class="comment">// 用于指定扫描哪个包下的接口</span></span><br><span class="line">                .paths(PathSelectors.any())<span class="comment">// 选择所有的API,如果你想只为部分API生成文档，可以配置这里</span></span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于定义API主界面的信息，比如可以声明所有的API的总标题、描述、版本</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ApiInfo <span class="title function_">apiInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ApiInfoBuilder</span>()</span><br><span class="line">                .title(<span class="string">&quot;老人跌倒系统API&quot;</span>) <span class="comment">//  可以用来自定义API的主标题</span></span><br><span class="line">                .description(<span class="string">&quot;老人跌倒系统SwaggerAPI管理&quot;</span>) <span class="comment">// 可以用来描述整体的API</span></span><br><span class="line">                .termsOfServiceUrl(<span class="string">&quot;&quot;</span>) <span class="comment">// 用于定义服务的域名</span></span><br><span class="line">                .version(<span class="string">&quot;1.0&quot;</span>) <span class="comment">// 可以用来定义版本。</span></span><br><span class="line">                .build(); <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用-caffeine-缓存接口"><a href="#使用-caffeine-缓存接口" class="headerlink" title="使用 caffeine 缓存接口"></a>使用 caffeine 缓存接口</h2><pre><code>Caffeine的底层数据存储采用ConcurrentHashMap，在本次使用中采用的是手动方式</code></pre><h3 id="配置-config-1"><a href="#配置-config-1" class="headerlink" title="配置 config"></a>配置 config</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span>  <span class="comment">//注意这个注解一定要打上</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CacheConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Cache&lt;Integer, List&lt;Object&gt;&gt; <span class="title function_">caffeineCache</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Caffeine.newBuilder()</span><br><span class="line">                <span class="comment">// 手动填充</span></span><br><span class="line">                <span class="comment">// 设置最后一次写入或访问后经过固定时间过期</span></span><br><span class="line">                .expireAfterWrite(<span class="number">60</span>, TimeUnit.SECONDS)</span><br><span class="line">                <span class="comment">// 初始的缓存空间大小</span></span><br><span class="line">                .initialCapacity(<span class="number">10</span>)</span><br><span class="line">                <span class="comment">// 缓存的最大条数</span></span><br><span class="line">                .maximumSize(<span class="number">100</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h3><pre><code>总感觉有点像没用上，和我在内存里手动加一个HashMap有什么不同呢当然可能简单的没区别，复杂的就难说了而且手动加容易被GC</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HashMap&lt;Integer, List&lt;Admin&gt;&gt; adminInfoMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    Cache&lt;Integer, List&lt;Admin&gt;&gt; caffeineCache;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> List&lt;Admin&gt; <span class="title function_">getAllUser</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        return adminMapper.getAllUser();</span></span><br><span class="line">        caffeineCache.getIfPresent(<span class="number">1</span>);</span><br><span class="line">        List&lt;Admin&gt; objects = caffeineCache.asMap().get(<span class="number">1</span>); <span class="comment">//1是因为没有传入值，手动指定</span></span><br><span class="line">        <span class="keyword">if</span> (objects == <span class="literal">null</span>) &#123;  <span class="comment">//缓存里没有，去数据库搜</span></span><br><span class="line">            List&lt;Admin&gt; allUser = adminMapper.getAllUser();</span><br><span class="line">            caffeineCache.put(<span class="number">1</span>, allUser);</span><br><span class="line">            <span class="keyword">return</span> allUser;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> objects;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;添加-Swagger&quot;&gt;&lt;a href=&quot;#添加-Swagger&quot; class=&quot;headerlink&quot; title=&quot;添加 Swagger&quot;&gt;&lt;/a&gt;添加 Swagger&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;注意不要升级依赖到3.0，3.0很可能只支持新jdk
开启方</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>算法详解</title>
    <link href="https://yebingiscn.github.io/2022/08/18/%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/"/>
    <id>https://yebingiscn.github.io/2022/08/18/%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/</id>
    <published>2022-08-18T09:42:28.000Z</published>
    <updated>2025-02-21T16:14:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="算法详解"><a href="#算法详解" class="headerlink" title="算法详解"></a>算法详解</h2><blockquote><p>因为我的数学不好，理解很困难，所以我不喜欢算法，根本原因还是我解不出来，尽是挫败感。但是不学不行，而且我觉得，搞个合格还是没问题的。</p></blockquote><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++) &#123;<span class="comment">//这里千万要注意-1</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; nums.length - <span class="number">1</span> - i; j++) &#123;<span class="comment">//这里千万要注意length-1-i</span></span><br><span class="line">                <span class="keyword">if</span> (nums[j] &gt; nums[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    temp = nums[j];</span><br><span class="line">                    nums[j] = nums[j + <span class="number">1</span>];</span><br><span class="line">                    nums[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分搜索"><a href="#二分搜索" class="headerlink" title="二分搜索"></a>二分搜索</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (min &lt;= target) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">center</span> <span class="operator">=</span> (max + min) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[center] == target) <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//找到了</span></span><br><span class="line">            <span class="keyword">if</span> (nums[center] &gt; target) max = center - <span class="number">1</span>;<span class="comment">//目标在中央的左边</span></span><br><span class="line">            <span class="keyword">if</span> (nums[center] &lt; target) min = center + <span class="number">1</span>;<span class="comment">//目标在中央的右边</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><blockquote><p>假定左边的有序，（从左到右）一次拿出一张，一个个移动到合适的位置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; nums.length; i++) &#123;<span class="comment">//这里可以忽略掉第一个，因为是假定左边的有序，第一个自然可以忽略</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> nums[i];</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; temp &lt; nums[j]) &#123;<span class="comment">//注意这里两个都是j</span></span><br><span class="line">                nums[j + <span class="number">1</span>] = nums[j];</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            nums[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><blockquote><p>每次遍历选最大的排在前面</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> nums[i];  <span class="comment">//获得最左边的值</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">location</span> <span class="operator">=</span> i;   <span class="comment">//获取最右边的值</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; nums.length; j++) &#123; <span class="comment">//获取i左边的值</span></span><br><span class="line">                <span class="keyword">if</span> (nums[j] &lt; min) &#123;    <span class="comment">//比较</span></span><br><span class="line">                    min = nums[j];    <span class="comment">//现在是左边的值来比较了</span></span><br><span class="line">                    location = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> nums[i]; <span class="comment">//交换值</span></span><br><span class="line">            nums[i] = nums[location];</span><br><span class="line">            nums[location] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><blockquote><p>采用分治法思维</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> start, <span class="type">int</span> end)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (start &gt;= end) &#123; <span class="comment">//分到不能再小了</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> arr[start];<span class="comment">//k是基准元素</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> start; <span class="comment">//头</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> end;   <span class="comment">//尾</span></span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right &amp;&amp; k &lt;= arr[right]) &#123; <span class="comment">//从右边开始，第一个条件指的是right不能无限减，第二个条件即判断与基准的关系</span></span><br><span class="line">            right--;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[left] = arr[right];<span class="comment">//找到交换的了，进行交换，left值已经给了k，所以可以直接覆盖</span></span><br><span class="line">        <span class="keyword">while</span> (left &lt; right &amp;&amp; k &gt;= arr[right]) &#123;<span class="comment">//跟上面一样的，只不过这里是left从左边开始</span></span><br><span class="line">            left++;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[right] = arr[left];</span><br><span class="line">    &#125;</span><br><span class="line">    arr[right] = k;<span class="comment">//所有的值与k比较，如果可以，换掉right的位置</span></span><br><span class="line">    sort(arr, start, right - <span class="number">1</span>);<span class="comment">//完成了一次快速排序，然后分治，第一个到中间</span></span><br><span class="line">    sort(arr, right + <span class="number">1</span>, end);<span class="comment">//中间到最后一个</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排序的稳定性"><a href="#排序的稳定性" class="headerlink" title="排序的稳定性"></a>排序的稳定性</h3><blockquote><p>堆排序、快速排序、希尔排序、直接选择排序是不稳定的排序算法，而冒泡排序、直接插入排序、折半插入排序、归并排序是稳定的排序算法。</p></blockquote><h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><h3 id="遍历二叉树"><a href="#遍历二叉树" class="headerlink" title="遍历二叉树"></a>遍历二叉树</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">preorder</span><span class="params">(List&lt;Integer&gt; list, TreeNode root)</span>&#123;</span><br><span class="line">        <span class="comment">//遇到空节点则返回</span></span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//先遍历根节点</span></span><br><span class="line">        list.add(root.val);</span><br><span class="line">        <span class="comment">//再去左子树</span></span><br><span class="line">        preorder(list, root.left);</span><br><span class="line">        <span class="comment">//假如是中序遍历就是这里  list.add(root.val);</span></span><br><span class="line">        <span class="comment">//最后去右子树</span></span><br><span class="line">        preorder(list, root.right);</span><br><span class="line">        <span class="comment">//假如是后序遍历就是这里  list.add(root.val);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] preorderTraversal (TreeNode root) &#123;</span><br><span class="line">        <span class="comment">//添加遍历结果的数组</span></span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="comment">//递归前序遍历</span></span><br><span class="line">        preorder(list, root);</span><br><span class="line">        <span class="comment">//返回的结果</span></span><br><span class="line">        <span class="type">int</span>[] res = <span class="keyword">new</span> <span class="title class_">int</span>[list.size()];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++)</span><br><span class="line">            res[i] = list.get(i);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历层序二叉树"><a href="#遍历层序二叉树" class="headerlink" title="遍历层序二叉树"></a>遍历层序二叉树</h3><blockquote><p>这个乍一看肯定会感觉毫无头绪，你说正常来说都是向被遍历左子树再到右子树，这怎么可能层序呢，结果可以.left、.right。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; <span class="title function_">levelOrder</span> <span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>) &#123;<span class="comment">//如果是空，则直接返回空数组</span></span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//队列存储，进行层次遍历</span></span><br><span class="line">        Queue&lt;TreeNode&gt; q = <span class="keyword">new</span> <span class="title class_">ArrayDeque</span>&lt;TreeNode&gt;();</span><br><span class="line">        q.add(root);<span class="comment">//添加根节点</span></span><br><span class="line">        <span class="keyword">while</span>(!q.isEmpty())&#123;</span><br><span class="line">            <span class="comment">//记录二叉树的某一行</span></span><br><span class="line">            ArrayList&lt;Integer&gt; row = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">            <span class="comment">//因先进入的是根节点，故每层节点多少，队列大小就是多少</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; q.size(); i++)&#123;</span><br><span class="line">                <span class="type">TreeNode</span> <span class="variable">cur</span> <span class="operator">=</span> q.poll();</span><br><span class="line">                row.add(cur.val);</span><br><span class="line">                <span class="comment">//若是左右孩子存在，则存入左右孩子作为下一个层次</span></span><br><span class="line">                <span class="keyword">if</span>(cur.left != <span class="literal">null</span>)</span><br><span class="line">                    q.add(cur.left);<span class="comment">//存左节点</span></span><br><span class="line">                <span class="keyword">if</span>(cur.right != <span class="literal">null</span>)</span><br><span class="line">                    q.add(cur.right);<span class="comment">//存右节点</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//每一层加入输出</span></span><br><span class="line">            res.add(row); <span class="comment">//添加进输出</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二叉树之字形层序遍历"><a href="#二叉树之字形层序遍历" class="headerlink" title="二叉树之字形层序遍历"></a>二叉树之字形层序遍历</h3><blockquote><p>这题比较抽象，需要画图理解，但其实原理很简单，注意第二层从右至左，第三层从左到右。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; <span class="title function_">Print</span><span class="params">(TreeNode pRoot)</span> &#123;</span><br><span class="line">        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(pRoot == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 存放奇数层的节点，从1开始</span></span><br><span class="line">        Stack&lt;TreeNode&gt; stack1 = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        stack1.push(pRoot);</span><br><span class="line">        <span class="comment">// 存放偶数层的节点</span></span><br><span class="line">        Stack&lt;TreeNode&gt; stack2 = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">// 表示当前遍历第几层，奇数则顺序打印，偶数逆序打印, 从第1层开始</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">level</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(!stack1.isEmpty() || !stack2.isEmpty()) &#123;</span><br><span class="line">            <span class="comment">// 处理奇数层</span></span><br><span class="line">            <span class="keyword">if</span>(level % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                <span class="comment">// 奇数层按顺序</span></span><br><span class="line">                <span class="keyword">while</span>(!stack1.isEmpty()) &#123;</span><br><span class="line">                    <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> stack1.pop();</span><br><span class="line">                    <span class="keyword">if</span>(node != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 收集打印结果</span></span><br><span class="line">                        list.add(node.val);</span><br><span class="line">                        <span class="comment">// stack2保存偶数层节点，先存左结点，这样等下次pop时就是右节点先打印，满足题目要求</span></span><br><span class="line">                        stack2.push(node.left);</span><br><span class="line">                        stack2.push(node.right);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 收集当前层的结果</span></span><br><span class="line">                <span class="keyword">if</span>(!list.isEmpty()) &#123;</span><br><span class="line">                    res.add(list);</span><br><span class="line">                    level++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 处理偶数层</span></span><br><span class="line">                ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                <span class="keyword">while</span>(!stack2.isEmpty()) &#123;</span><br><span class="line">                    <span class="type">TreeNode</span> <span class="variable">node</span> <span class="operator">=</span> stack2.pop();</span><br><span class="line">                    <span class="keyword">if</span>(node != <span class="literal">null</span>) &#123;</span><br><span class="line">                        list.add(node.val);</span><br><span class="line">                        <span class="comment">// 需要按顺序push，因为stack1是用在奇数层按顺序输出结果的</span></span><br><span class="line">                        <span class="comment">//先右后左的原因发个图就能明白</span></span><br><span class="line">                        stack1.add(node.right);</span><br><span class="line">                        stack1.add(node.left);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(!list.isEmpty()) &#123;</span><br><span class="line">                    res.add(list);</span><br><span class="line">                    level++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二叉树的最大深度"><a href="#二叉树的最大深度" class="headerlink" title="二叉树的最大深度"></a>二叉树的最大深度</h3><blockquote><p>这个代码简单，但是 return 这句这个理解起来却有些抽象，简单来说就是不要看成一句，而是要看成三句。<br>最后才是 Math.max</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxDepth</span> <span class="params">(TreeNode root)</span> &#123;</span><br><span class="line">        <span class="comment">//空节点没有深度</span></span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//返回子树深度+1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> maxDepth(root.left)<span class="comment">//递归</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> maxDepth(root.right)</span><br><span class="line">        <span class="keyword">return</span> Math.max(a, b) + <span class="number">1</span>; <span class="comment">//+1是加上根节点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二叉树中和为某一值的路径-一"><a href="#二叉树中和为某一值的路径-一" class="headerlink" title="二叉树中和为某一值的路径(一)"></a>二叉树中和为某一值的路径(一)</h3><blockquote><p>这个很容易想到可以用递归的思路来做，但是 sum - root.val 还是比较难想到的<br>这个思想还是要理解下，有时候有点难理解遍历的过程，还得多想多思考</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasPathSum</span> <span class="params">(TreeNode root, <span class="type">int</span> sum)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(root.left == <span class="literal">null</span> &amp;&amp; root.right == <span class="literal">null</span> &amp;&amp; sum - root.val == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (hasPathSum(root.left, sum - root.val)</span><br><span class="line">                || hasPathSum(root.right, sum - root.val));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h3 id="反转链表"><a href="#反转链表" class="headerlink" title="反转链表"></a>反转链表</h3><h4 id="采用栈实现"><a href="#采用栈实现" class="headerlink" title="采用栈实现"></a>采用栈实现</h4><blockquote><p>栈比较好理解，也是我第一个想到的思路，但是当时我不会将思路变成代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">ReverseList</span><span class="params">(ListNode head)</span> &#123;</span><br><span class="line">        Stack&lt;ListNode&gt; stack = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="literal">null</span>) &#123;<span class="comment">//把链表节点全部摘掉放到栈中</span></span><br><span class="line">            stack.push(head);</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (stack.isEmpty()) <span class="keyword">return</span> <span class="literal">null</span>;<span class="comment">//判断链表是不是空的</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">node</span> <span class="operator">=</span> stack.pop();<span class="comment">//不是的话先出来个最后一个节点或者是新的头节点</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">dummy</span> <span class="operator">=</span> node;<span class="comment">//dummy就是新头节点，因为node要一个个向前连接，所以代表新链表的重任落到了dummy的头上</span></span><br><span class="line">        <span class="comment">//栈中的结点全部出栈，然后重新连成一个新的链表</span></span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">            <span class="type">ListNode</span> <span class="variable">tempNode</span> <span class="operator">=</span> stack.pop();</span><br><span class="line">            node.next = tempNode;</span><br><span class="line">            node = node.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后一个结点就是反转前的头结点，一定要让他的next</span></span><br><span class="line">        <span class="comment">//等于空，否则会构成环</span></span><br><span class="line">        node.next = <span class="literal">null</span>;<span class="comment">//node.next = dummy dummy.next = node，成环了</span></span><br><span class="line">        <span class="keyword">return</span> dummy;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="局部反转链表"><a href="#局部反转链表" class="headerlink" title="局部反转链表"></a>局部反转链表</h3><blockquote><p>1-&gt;2-&gt;3-&gt;4-&gt;5 &#x3D;&gt; 1-&gt;4-&gt;3-&gt;2-&gt;5</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">reverseBetween</span> <span class="params">(ListNode head, <span class="type">int</span> m, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">first</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(-<span class="number">1</span>);</span><br><span class="line">        first.next = head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">pre</span> <span class="operator">=</span> first;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; m; i++)&#123;<span class="comment">//从第二个开始移动</span></span><br><span class="line">            pre = cur;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> m; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">ListNode</span> <span class="variable">temp</span> <span class="operator">=</span> cur.next;</span><br><span class="line">            cur.next = temp.next;</span><br><span class="line">            temp.next = pre.next;</span><br><span class="line">            pre.next = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> first.next;<span class="comment">//这里假如return head 用例&#123;1,3&#125;只会输出1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="合并两个有序链表"><a href="#合并两个有序链表" class="headerlink" title="合并两个有序链表"></a>合并两个有序链表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> ListNode <span class="title function_">Merge</span><span class="params">(ListNode list1,ListNode list2)</span> &#123;</span><br><span class="line">        <span class="comment">//一个已经为空了，直接返回另一个</span></span><br><span class="line">        <span class="keyword">if</span>(list1 == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> list2;</span><br><span class="line">        <span class="keyword">if</span>(list2 == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> list1;</span><br><span class="line">        <span class="comment">//加一个表头</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">head</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListNode</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">cur</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="comment">//两个链表都要不为空</span></span><br><span class="line">        <span class="keyword">while</span>(list1 != <span class="literal">null</span> &amp;&amp; list2 != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//取较小值的节点</span></span><br><span class="line">            <span class="keyword">if</span>(list1.val &lt;= list2.val)&#123;</span><br><span class="line">                cur.next = list1;</span><br><span class="line">                <span class="comment">//只移动取值的指针</span></span><br><span class="line">                list1 = list1.next;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cur.next = list2;</span><br><span class="line">                <span class="comment">//只移动取值的指针</span></span><br><span class="line">                list2 = list2.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//指针后移</span></span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//哪个链表还有剩，直接连在后面</span></span><br><span class="line">        <span class="keyword">if</span>(list1 != <span class="literal">null</span>)</span><br><span class="line">            cur.next = list1;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cur.next = list2;</span><br><span class="line">        <span class="comment">//返回值去掉表头</span></span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h2><h3 id="合并两个有序的数组"><a href="#合并两个有序的数组" class="headerlink" title="合并两个有序的数组"></a>合并两个有序的数组</h3><blockquote><p>假设两个数组 A，B 现假设 AB 数组是有序的，并且要合并到 A 里</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span> A[], <span class="type">int</span> m, <span class="type">int</span> B[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i != n; i++) &#123;</span><br><span class="line">            A[m + i] = B[i];</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(A);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断是否为回文字符串"><a href="#判断是否为回文字符串" class="headerlink" title="判断是否为回文字符串"></a>判断是否为回文字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">judge</span> <span class="params">(String str)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> str.length() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">if</span>(str.charAt(left) == str.charAt(right)) &#123;</span><br><span class="line">                left++;</span><br><span class="line">                right--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><h3 id="最小的括号序列"><a href="#最小的括号序列" class="headerlink" title="最小的括号序列"></a>最小的括号序列</h3><blockquote><p>注意一定要用 else if</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isValid</span> <span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="comment">//辅助栈</span></span><br><span class="line">        Stack&lt;Character&gt; st = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;Character&gt;();</span><br><span class="line">        <span class="comment">//遍历字符串</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">            <span class="comment">//遇到左小括号</span></span><br><span class="line">            <span class="keyword">if</span>(s.charAt(i) == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                <span class="comment">//期待遇到右小括号</span></span><br><span class="line">                st.push(<span class="string">&#x27;)&#x27;</span>);</span><br><span class="line">            <span class="comment">//遇到左中括号</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s.charAt(i) == <span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">                <span class="comment">//期待遇到右中括号</span></span><br><span class="line">                st.push(<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">            <span class="comment">//遇到左打括号</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s.charAt(i) == <span class="string">&#x27;&#123;&#x27;</span>)</span><br><span class="line">                <span class="comment">//期待遇到右打括号</span></span><br><span class="line">                st.push(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">            <span class="comment">//必须有左括号的情况下才能遇到右括号</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(st.isEmpty() || st.pop() != s.charAt(i))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//栈中是否还有元素</span></span><br><span class="line">        <span class="keyword">return</span> st.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="包含-min-函数的栈"><a href="#包含-min-函数的栈" class="headerlink" title="包含 min 函数的栈"></a>包含 min 函数的栈</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    Stack&lt;Integer&gt; s1 = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;Integer&gt;();</span><br><span class="line">    Stack&lt;Integer&gt; s2 = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;Integer&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(<span class="type">int</span> node)</span> &#123;</span><br><span class="line">        s1.push(node);</span><br><span class="line">        <span class="keyword">if</span>(s2.isEmpty() || s2.peek() &gt; node)&#123;</span><br><span class="line">            s2.push(node);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; <span class="comment">//这里重复入栈的原因是要与s1的位置一一对应</span></span><br><span class="line">            s2.push(s2.peek());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pop</span><span class="params">()</span> &#123;</span><br><span class="line">        s1.pop();</span><br><span class="line">        s2.pop();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">top</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> s1.peek();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">min</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> s2.peek();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><h3 id="双栈实现队列"><a href="#双栈实现队列" class="headerlink" title="双栈实现队列"></a>双栈实现队列</h3><blockquote><p>如题：双栈实现，就是先都塞进一个栈中。<br>pop 第一个时把所有的都放到第二个栈里，这样就反过来了，就可以实现出栈</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    Stack&lt;Integer&gt; stack1 = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;Integer&gt;();</span><br><span class="line">    Stack&lt;Integer&gt; stack2 = <span class="keyword">new</span> <span class="title class_">Stack</span>&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(<span class="type">int</span> node)</span> &#123;</span><br><span class="line">        stack1.push(node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">pop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//将第一个栈中内容弹出放入第二个栈中</span></span><br><span class="line">        <span class="keyword">while</span>(!stack1.isEmpty())</span><br><span class="line">            stack2.push(stack1.pop());</span><br><span class="line">        <span class="comment">//第二个栈栈顶就是最先进来的元素，即队首</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> stack2.pop();</span><br><span class="line">        <span class="comment">//再将第二个栈的元素放回第一个栈</span></span><br><span class="line">        <span class="keyword">while</span>(!stack2.isEmpty())</span><br><span class="line">            stack1.push(stack2.pop());</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="哈希"><a href="#哈希" class="headerlink" title="哈希"></a>哈希</h2><h3 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h3><blockquote><p>很经典的题了，好像 LeeCode 的第一题就是这个<br>暴力解法很容易出结果，但是要注意两点</p></blockquote><pre><code>1. 牛客网的.length什么的一定要外面接收，这样速度也比较快2. 注意局部变量作用域的问题</code></pre><h4 id="双层-for-循环（两个指针）暴力解决，时间复杂度为-n-2"><a href="#双层-for-循环（两个指针）暴力解决，时间复杂度为-n-2" class="headerlink" title="双层 for 循环（两个指针）暴力解决，时间复杂度为 n^2"></a>双层 for 循环（两个指针）暴力解决，时间复杂度为 n^2</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum (<span class="type">int</span>[] numbers, <span class="type">int</span> target) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> numbers.length;</span><br><span class="line">        <span class="type">int</span>[] num = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i + <span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (numbers[i] + numbers [j] == target) &#123;</span><br><span class="line">                    num[<span class="number">0</span>] = i + <span class="number">1</span>;</span><br><span class="line">                    num[<span class="number">1</span>] = j + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">return</span> num;<span class="comment">//有了立即返回</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num;<span class="comment">//注意i,j的作用域，在这里才返回的话会为空</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="哈希解法"><a href="#哈希解法" class="headerlink" title="哈希解法"></a>哈希解法</h3><blockquote><p>节约了一次 for 循环</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] twoSum (<span class="type">int</span>[] numbers, <span class="type">int</span> target) &#123;</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; numbers.length; i++) &#123;</span><br><span class="line">            <span class="comment">//将不包含target - numbers[i]，装入map中，包含的话直接返回下标</span></span><br><span class="line">            <span class="keyword">if</span>(map.containsKey(target - numbers[i])) <span class="comment">//比方说target = 6， 现在map中有2，i = 4</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;map.get(target - numbers[i])+<span class="number">1</span>, i+<span class="number">1</span>&#125;; <span class="comment">//其实数组是这个&#123;map.get()+1,i+1&#125;</span></span><br><span class="line">                <span class="comment">// +1是因为要求从1开始</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                map.put(numbers[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">IllegalArgumentException</span>(<span class="string">&quot;No solution&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组中出现次数超过一半的数字"><a href="#数组中出现次数超过一半的数字" class="headerlink" title="数组中出现次数超过一半的数字"></a>数组中出现次数超过一半的数字</h3><h4 id="数组排序解法"><a href="#数组排序解法" class="headerlink" title="数组排序解法"></a>数组排序解法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">MoreThanHalfNum_Solution</span><span class="params">(<span class="type">int</span> [] array)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(array == <span class="literal">null</span> || array.length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(array.length == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> array[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(array);</span><br><span class="line">        <span class="keyword">return</span> array[array.length/<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="哈希解法（解法二）"><a href="#哈希解法（解法二）" class="headerlink" title="哈希解法（解法二）"></a>哈希解法（解法二）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">MoreThanHalfNum_Solution</span><span class="params">(<span class="type">int</span> [] array)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(array == <span class="literal">null</span> || array.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(array.length == <span class="number">1</span>) <span class="keyword">return</span> array[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">// hashmap存储数字和它的出现次数</span></span><br><span class="line">        HashMap&lt;Integer,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer,Integer&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;array.length;i++)&#123;</span><br><span class="line">            <span class="comment">// 若map中没有，则放入hashmap，并将次数置为1</span></span><br><span class="line">            <span class="keyword">if</span>(!map.containsKey(array[i]))&#123;</span><br><span class="line">                map.put(array[i],<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(map.get(array[i]) &lt; array.length/<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="comment">// 若map中有，且次数少于一半，就将map中的次数加1，如果判断大于再返回会得不到结果</span></span><br><span class="line">                map.put(array[i],map.get(array[i])+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 若map中有，且次数多于或等于一半，则直接返回该数</span></span><br><span class="line">                <span class="keyword">return</span> array[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><h3 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">Fibonacci</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Fibonacci(n-<span class="number">1</span>) + Fibonacci(n-<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="买卖股票的最佳时机（一）"><a href="#买卖股票的最佳时机（一）" class="headerlink" title="买卖股票的最佳时机（一）"></a>买卖股票的最佳时机（一）</h3><p>假设你有一个数组 prices，长度为 n，其中 prices[i]是股票在第 i 天的价格，请根据这个价格数组，返回买卖股票能获得的最大收益</p><ol><li>你可以买入一次股票和卖出一次股票，并非每天都可以买入或卖出一次，总共只能买入和卖出一次，且买入必须在卖出的前面的某一天</li><li>如果不能获取到任何利润，请返回 0</li><li>假设买入卖出均无手续费</li></ol><h4 id="解法：贪心算法，简单来来说就是遍历，找到最小值和找到差值最大的即是利润"><a href="#解法：贪心算法，简单来来说就是遍历，找到最小值和找到差值最大的即是利润" class="headerlink" title="解法：贪心算法，简单来来说就是遍历，找到最小值和找到差值最大的即是利润"></a>解法：贪心算法，简单来来说就是遍历，找到最小值和找到差值最大的即是利润</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxProfit</span> <span class="params">(<span class="type">int</span>[] prices)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">profit</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; prices.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(prices[i] &lt; min) &#123;</span><br><span class="line">                min = prices[i];</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (prices[i] - min &gt; profit) &#123;</span><br><span class="line">                profit = prices[i] - min;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> profit;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="字符串变形"><a href="#字符串变形" class="headerlink" title="字符串变形"></a>字符串变形</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">trans</span><span class="params">(String s, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        StringBuffer res=<span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="comment">//大小写转换</span></span><br><span class="line">            <span class="keyword">if</span>(s.charAt(i) &lt;= <span class="string">&#x27;Z&#x27;</span> &amp;&amp; s.charAt(i) &gt;= <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">                res.append((<span class="type">char</span>)(s.charAt(i) - <span class="string">&#x27;A&#x27;</span> + <span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s.charAt(i) &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s.charAt(i) &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">                res.append((<span class="type">char</span>)(s.charAt(i) - <span class="string">&#x27;a&#x27;</span> + <span class="string">&#x27;A&#x27;</span>));</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="comment">//空格直接复制</span></span><br><span class="line">                res.append((<span class="type">char</span>)(s.charAt(i)));</span><br><span class="line">        &#125;</span><br><span class="line">        Stack&lt;String&gt; temp=<span class="keyword">new</span> <span class="title class_">Stack</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;</span><br><span class="line">            <span class="comment">//以空格为界，分割单词</span></span><br><span class="line">            <span class="keyword">while</span>(j &lt; n &amp;&amp; res.charAt(j) != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">                j++;</span><br><span class="line">            <span class="comment">//单词进栈</span></span><br><span class="line">            temp.push((String)(res.substring(i, j)));</span><br><span class="line">            i = j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//排除结尾空格的特殊情况</span></span><br><span class="line">        <span class="keyword">if</span>(s.charAt(n - <span class="number">1</span>) == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            res = <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            res = <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">        <span class="comment">//栈遵循先进后厨，单词顺序是反的</span></span><br><span class="line">        <span class="keyword">while</span>(!temp.empty())&#123;</span><br><span class="line">            res.append(temp.peek());</span><br><span class="line">            temp.pop();</span><br><span class="line">            <span class="keyword">if</span>(!temp.empty())</span><br><span class="line">                res.append(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第一个只出现一次的字符"><a href="#第一个只出现一次的字符" class="headerlink" title="第一个只出现一次的字符"></a>第一个只出现一次的字符</h3><blockquote><p>在一个长为 字符串中找到第一个只出现一次的字符,并返回它的位置, 如果没有则返回 -1（需要区分大小写）.（从 0 开始计数）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">FirstNotRepeatingChar</span><span class="params">(String str)</span> &#123;</span><br><span class="line">    HashMap&lt;Character, Integer&gt; hm = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">        hm.put(str.charAt(i),hm.getOrDefault(str.charAt(i),<span class="number">0</span>) + <span class="number">1</span>);<span class="comment">//getOrDefault意思是有就用，没有就默认</span></span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(hm.get(str.charAt(i)) == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他算法题"><a href="#其他算法题" class="headerlink" title="其他算法题"></a>其他算法题</h2><h3 id="小球走过路程计算"><a href="#小球走过路程计算" class="headerlink" title="小球走过路程计算"></a>小球走过路程计算</h3><blockquote><p>一球从 h 米高度自由落下，每次落地后反弹回原高度的一半再落下，求它在第 n 次落地时共经过了多少米？第 n 次反弹多高？</p><blockquote><p>输入描述：输入小球的初始高度和落地的次数（先输入小球初始高度再输入反弹次数）<br>输出描述：输出小球反弹的高度和经过的距离（先输出反弹的高度再输出经过的距离，中间用空格隔开）</p></blockquote></blockquote><p>题解：其实这道题并不难，第一次下落 100m，第二次上去 50m，下来 50 米，如此递推。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">计算方法：</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">float</span> h=scanner.nextFloat();</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span>scanner.nextInt();</span><br><span class="line">        <span class="type">float</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt; n; i++) &#123;</span><br><span class="line">            len += h;   <span class="comment">//这里计算下来的</span></span><br><span class="line">            h /= <span class="number">2</span>;     <span class="comment">//计算下一次反弹的高度</span></span><br><span class="line">            <span class="keyword">if</span>(i == n - <span class="number">1</span>) &#123;    <span class="comment">//n-1的意思是最后一次循环</span></span><br><span class="line">                System.out.println</span><br><span class="line">                    (String.format(<span class="string">&quot;%.3f&quot;</span>, h)+<span class="string">&quot; &quot;</span>+String.format(<span class="string">&quot;%.3f&quot;</span>, len));</span><br><span class="line">            &#125;</span><br><span class="line">            len += h;   <span class="comment">//计算上去的</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="判断质数"><a href="#判断质数" class="headerlink" title="判断质数"></a>判断质数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">isPrimeNumber</span><span class="params">(<span class="type">int</span> number)</span> &#123;</span><br><span class="line">        <span class="comment">//满足以下条件不是质数(1+2)或(3)</span></span><br><span class="line">        <span class="comment">//1 非2的偶数</span></span><br><span class="line">        <span class="comment">//2 奇数(除1和本身)有其他奇数因子</span></span><br><span class="line">        <span class="comment">//3 2到开根号之间有因子</span></span><br><span class="line">        <span class="keyword">if</span>(number!=<span class="number">2</span> &amp;&amp; number%<span class="number">2</span>==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;number;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(number%i==<span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入一个数，如果各位数之和小于-10，则输出位数之和，否则将位数之和继续求和，直到小于-10，并输出"><a href="#输入一个数，如果各位数之和小于-10，则输出位数之和，否则将位数之和继续求和，直到小于-10，并输出" class="headerlink" title="输入一个数，如果各位数之和小于 10，则输出位数之和，否则将位数之和继续求和，直到小于 10，并输出"></a>输入一个数，如果各位数之和小于 10，则输出位数之和，否则将位数之和继续求和，直到小于 10，并输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">digitalRoot</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        <span class="type">int</span> temp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=s.length()-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">            temp+=(<span class="type">int</span>)s.charAt(i)-(<span class="type">int</span>)<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(temp&lt;=<span class="number">9</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(temp&gt;<span class="number">9</span>)&#123;</span><br><span class="line">            <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(temp/<span class="number">10</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(temp&lt;<span class="number">100</span>)&#123;</span><br><span class="line">                sum=temp/<span class="number">10</span>+temp%<span class="number">10</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> r=temp/<span class="number">10</span>;</span><br><span class="line">                sum+=temp%<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp=sum;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">cin</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(System.in));</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        s = cin.next()</span><br><span class="line">        System.out.println(<span class="keyword">new</span> <span class="title class_">Main</span>().digitalRoot(s));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="扑克牌顺子"><a href="#扑克牌顺子" class="headerlink" title="扑克牌顺子"></a>扑克牌顺子</h3><p>现在有 2 副扑克牌，从扑克牌中随机五张扑克牌，我们需要来判断一下是不是顺子。<br>有如下规则：</p><ol><li>A 为 1，J 为 11，Q 为 12，K 为 13，A 不能视为 14</li><li>大、小王为 0，0 可以看作任意牌</li><li>如果给出的五张牌能组成顺子（即这五张牌是连续的）就输出 true，否则就输出 false。</li><li>数据保证每组 5 个数字，每组最多含有 4 个零，数组的数取值为 [0, 13]</li></ol><p>要求：空间复杂度 O(1)O(1)，时间复杂度 O(nlogn)O(nlogn)，本题也有时间复杂度 O(n)O(n) 的解法<br>输入描述：<br>输入五张扑克牌的值<br>返回值描述：<br>五张扑克牌能否组成顺子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">IsContinuous</span><span class="params">(<span class="type">int</span> [] numbers)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">joker</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        Arrays.sort(numbers);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(numbers[i] == <span class="number">0</span>) joker++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (numbers[i] == numbers[i + <span class="number">1</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> numbers[<span class="number">4</span>] - numbers[joker] &lt; <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;算法详解&quot;&gt;&lt;a href=&quot;#算法详解&quot; class=&quot;headerlink&quot; title=&quot;算法详解&quot;&gt;&lt;/a&gt;算法详解&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;因为我的数学不好，理解很困难，所以我不喜欢算法，根本原因还是我解不出来，尽是挫败感。但是不学不行，</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>暑期复习笔记</title>
    <link href="https://yebingiscn.github.io/2022/08/18/%E6%9A%91%E6%9C%9F%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://yebingiscn.github.io/2022/08/18/%E6%9A%91%E6%9C%9F%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-08-18T08:45:20.000Z</published>
    <updated>2025-07-19T17:28:58.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>这个暑期学了很多东西，也需要个笔记来记录一下，不然都不记得了。</code></pre><h2 id="Vs-code-编辑-md"><a href="#Vs-code-编辑-md" class="headerlink" title="Vs code 编辑 md"></a>Vs code 编辑 md</h2><ul><li>使用 Ctrl+shift+v 预览 md 效果</li><li>采用<code>语言</code>的形式来包裹代码</li><li>更多语法：<a href="https://zhuanlan.zhihu.com/p/108984311">https://zhuanlan.zhihu.com/p/108984311</a></li></ul><h2 id="多级评论的实现"><a href="#多级评论的实现" class="headerlink" title="多级评论的实现"></a>多级评论的实现</h2><ol><li>区分一级评论主表和次级评论表，彼此之间用外键相连</li><li>采用<code>Map&lt;评论表, List&lt;次级评论表&gt;&gt;</code>的方式接收</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line">List&lt;CommentInfo&gt; allComment = mapper.getAllComment();</span><br><span class="line">    Map&lt;CommentInfo, List&lt;ChildCommentInfo&gt;&gt; commentInfoMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; allComment.size()) &#123;</span><br><span class="line">        <span class="type">CommentInfo</span> <span class="variable">commentInfo</span> <span class="operator">=</span> allComment.get(i);</span><br><span class="line">        commentInfoMap.put(commentInfo, mapper.getAllChildComment(commentInfo.getId()));</span><br><span class="line">        i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for-循环之性能优化"><a href="#for-循环之性能优化" class="headerlink" title="for 循环之性能优化"></a>for 循环之性能优化</h2><p>参考：<a href="https://blog.csdn.net/qimowei/article/details/113701999">https://blog.csdn.net/qimowei/article/details/113701999</a></p><ol><li>写在第一个(消除循环终止判断时的方法调用)，不过这会带来要给新变量命名的问题，降低了可读性</li><li>嵌套循环应该遵循“外小内大”的原则</li><li>提取与循环无关的表达式</li><li>不要将<code>try catch</code>放到循环内部</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">for</span>() &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="正则表达式的简单应用"><a href="#正则表达式的简单应用" class="headerlink" title="正则表达式的简单应用"></a>正则表达式的简单应用</h2><pre><code>以前我学到的正则表达式还得获取Matcher对象的,现在发现有更简单的</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str.matches(emailMatcher);<span class="comment">//里面是正则表达式的字符串</span></span><br></pre></td></tr></table></figure><h2 id="为什么不能在增强-for-循环和迭代过程中通过-list-本身进行添加-删除操作"><a href="#为什么不能在增强-for-循环和迭代过程中通过-list-本身进行添加-删除操作" class="headerlink" title="为什么不能在增强 for 循环和迭代过程中通过 list 本身进行添加&#x2F;删除操作"></a>为什么不能在增强 for 循环和迭代过程中通过 list 本身进行添加&#x2F;删除操作</h2><pre><code>在增强for循环和迭代器遍历的过程中对list操作会失败，这是为什么呢？</code></pre><p>ArrayList 源代码中有这么一个方法：在迭代器的 hasNext()、next()方法都会被调用。<br>作用是判断 list 的大小有没有变化，如果变了，就抛异常。<br>也就是说，源代码就规定了不能在迭代过程中通过 List 本身进行添加&#x2F;删除操作。<br>此外，<code>list.remove(s)</code>:通过数组遍历,找到 s 将其删除,然后把后面的元素前移,size-1。<br><code>iterator.remove()</code>:原理一样,但是<code>iterator.hasNext()</code>判断的是有没有下一个元素,cursor 指向的是下一个元素的索引。<br>简单来说就是这个迭代遍历的时候长度是固定的，假如删除或者增加了，长度改变，cursor 无法更新这个长度或者识别这个元素。</p><h2 id="双端队列-ArrayDeque"><a href="#双端队列-ArrayDeque" class="headerlink" title="双端队列 ArrayDeque"></a>双端队列 ArrayDeque</h2><ul><li>ArrayDeque 是采用数组方式实现的双端队列。</li><li>ArrayDeque 的出队入队是通过头尾指针循环，利用数组实现的。</li><li>ArrayDeque 容量不足时是会扩容的，每次扩容容量增加一倍。</li><li>ArrayDeque 可以直接作为栈使用。当用作栈时，性能优于 Stack，当用于队列时，性能优于 LinkedList。</li><li>无容量大小限制，容量按需增长。</li><li>非线程安全队列，无同步策略，不支持多线程安全访问。</li><li>具有 fail-fast 特性，不能存储 null 值，支持双向迭代器遍历。<br>应该是一种双向指针的链表。可以直接删除第一个，也可以删除最后一个<br><strong>注意：可能是 bug 或者偶然，在遍历的时候，ArrayDeque.size 作为 for 循环条件很有可能会出现异常结果，可以将其放到 for 循环外</strong></li></ul><h2 id="红黑树、B-树与-B-树"><a href="#红黑树、B-树与-B-树" class="headerlink" title="红黑树、B 树与 B+树"></a>红黑树、B 树与 B+树</h2><h3 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h3><ol><li>特点<ul><li>是个二叉树，当两个子树不平衡的时候会进行旋转（最多三次）平衡左右两边，免得变成链表</li><li>每个节点或者是黑色，或者是红色。</li><li>根节点是黑色。</li><li>每个叶子节点（NIL）是黑色。 [注意：这里叶子节点，是指为空(NIL 或 NULL)的叶子节点！]</li><li>如果一个节点是红色的，则它的子节点必须是黑色的。</li></ul></li><li>用途<br>java 中使用到红黑树的有 TreeSet 和 JDK1.8 的 HashMap。</li><li>为什么 HashMap 底层不用 B&#x2F;B+树<br>红黑树在内存中查找非常快，红黑树实现也比 B 树&#x2F;B+树实现简单，B&#x2F;B+树多路子树相比红黑树空间开销自然也更大。</li></ol><h3 id="B-树"><a href="#B-树" class="headerlink" title="B 树"></a>B 树</h3><ol><li>用途<br>B 树多用于做文件系统的索引。</li><li>特点<br>B 树不是个二叉树，他的子树更多也就是路数越多</li><li>为什么二叉树不能用于文件系统<br>因为文件系统和数据库一般都是存在电脑硬盘上的，如果数据量太大的话不一定能一次性加载到内存中。而二叉树得加载完才能找，这样开销就比较大。</li></ol><h3 id="B-树-1"><a href="#B-树-1" class="headerlink" title="B+树"></a>B+树</h3><ol><li>用途<br>B+树多用于数据库的索引</li><li>特点<br>相比 B 树多了索引，B+树同样不是个二叉树</li><li>为什么 B+树在数据库中做索引<br>因为在数据库中 select 常常不只是查询一条记录，常常要查询多条记录。比如：按照 id 的排序的后 10 条。如果是多条的话，B 树需要做中序遍历，可能要跨层访问。而 B+树由于所有数据都在叶子结点，不用跨层，同时由于有链表结构，只需要找到首尾，通过链表就能够把所有数据取出来了。</li></ol><h2 id="一个项目跟着教程做完，应该怎么总结？"><a href="#一个项目跟着教程做完，应该怎么总结？" class="headerlink" title="一个项目跟着教程做完，应该怎么总结？"></a>一个项目跟着教程做完，应该怎么总结？</h2><ol><li>我们怎么去跟着教程或者视频做的项目：<br>是他写一句我们写一句，还是我们把整个项目或者某一个模块看完了，再去写的，然后写到不会就去研究他是怎么写的</li><li>思考深度：<br>假如有人问我们为什么这一块要这样写，项目亮点是什么，项目哪块做起来比较难，哪些地方做完让自己收获很大，为什么想做这个项目，后续还有拓展什么，自己写这个项目的整体思路是什么，为什么这样设计，技术选型为啥选这个而不是其他的。。。</li><li>对于某个重要模块有哪些实现方式，这些方式间的区别是什么？你选择其中一种方式的理由是什么？<br>性能 or 便于实现 or 扩展性好利于后续升级之类。<br>我个人而言还有一点就是……做完之后，出去能跟别人吹这个项目的任何原理、精妙的代码实现细节，我就感觉这个算是我自己的项目了</li></ol><h2 id="计算基本路径法"><a href="#计算基本路径法" class="headerlink" title="计算基本路径法"></a>计算基本路径法</h2><p>可以通过计算谓词节点来做，公式为 基本路径&#x3D;谓词节点+1；<br>谓词节点是指程序中的条件语句，该题中依次有 while，if，if 三个条件语句，故有四条基本路径。</p><h2 id="计算圈复杂度"><a href="#计算圈复杂度" class="headerlink" title="计算圈复杂度"></a>计算圈复杂度</h2><p>圈复杂度实际上就是等于判定节点的数量再加上 1。对应的计算公式为：V (G) &#x3D; P + 1</p><h2 id="测试概念"><a href="#测试概念" class="headerlink" title="测试概念"></a>测试概念</h2><ul><li>逻辑覆盖法和基本路径测试是白盒测试的大分类；</li><li>正交实验设计法：也是不涉及代码内部结构的典型的黑盒测试方法；</li><li>边界值法在黑盒测试中，我们可以不涉及代码来取边界值；但是也可以在设计代码时，比如在条件覆盖等白盒测试方法中取到边界值，因为往往边界值的位置容易出错</li><li>在白盒测试法中，选择足够的测试用例，使得每个判定中条件的各种可能组合都至少出现一次。AB 都符合，A 符合 B 不符合，A 不符合 B 符合，AB 都不符合。</li><li>工件是加工过程中的生产对象。项目立项前，测试人员是不需要提供任何工件的。</li><li>GUI 测试手段是系统测试手段</li></ul><h2 id="BCryptPasswordEncoder-的比较"><a href="#BCryptPasswordEncoder-的比较" class="headerlink" title="BCryptPasswordEncoder 的比较"></a>BCryptPasswordEncoder 的比较</h2><p>采用 encoder.matches(不加密的密码,加密密码);进行比较</p><h2 id="风险曝光度"><a href="#风险曝光度" class="headerlink" title="风险曝光度"></a>风险曝光度</h2><p>风险曝光度（riskexposure）&#x3D;错误出现率（风险出现率）X 错误造成损失（风险损失）：<br>风险成本 &#x3D; 20 x 100 x 150 x 50% &#x3D;150000 元<br>风险概率 &#x3D; 60%<br>风险曝光度 &#x3D; 150000 元 x 60% &#x3D; 90000 元</p>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;这个暑期学了很多东西，也需要个笔记来记录一下，不然都不记得了。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;Vs-code-编辑-md&quot;&gt;&lt;a href=&quot;#Vs-code-编辑-md&quot; class=&quot;headerlink&quot; title=&quot;Vs code 编</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Ak的获取方法</title>
    <link href="https://yebingiscn.github.io/2022/08/13/Ak%E7%9A%84%E8%8E%B7%E5%8F%96%E6%96%B9%E6%B3%95/"/>
    <id>https://yebingiscn.github.io/2022/08/13/Ak%E7%9A%84%E8%8E%B7%E5%8F%96%E6%96%B9%E6%B3%95/</id>
    <published>2022-08-13T09:56:05.000Z</published>
    <updated>2025-01-10T15:51:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ak-的获取方法"><a href="#Ak-的获取方法" class="headerlink" title="Ak 的获取方法"></a>Ak 的获取方法</h2><p>最近在做百度地图 API 相关的项目，需要用到获取安卓的 AK，简单来说就是一种密钥。<br>但是获取的时候踩了些坑，在这里书写下怎么避免。</p><ul><li>首先要注意自己的.android 路径，像我的其实放在 D 盘而不是和百度给的实例一样放在 C 盘</li><li>要带上 jdk 路径和<code>-list -v -keystore debug.keystore</code>。这里如果按照百度上来则是**巨坑</li><li>密码是 android</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Ak-的获取方法&quot;&gt;&lt;a href=&quot;#Ak-的获取方法&quot; class=&quot;headerlink&quot; title=&quot;Ak 的获取方法&quot;&gt;&lt;/a&gt;Ak 的获取方法&lt;/h2&gt;&lt;p&gt;最近在做百度地图 API 相关的项目，需要用到获取安卓的 AK，简单来说就是一种密钥。&lt;br</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Sevlet踩坑与范式的理解</title>
    <link href="https://yebingiscn.github.io/2021/11/03/Sevlet%E8%B8%A9%E5%9D%91%E4%B8%8E%E8%8C%83%E5%BC%8F%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>https://yebingiscn.github.io/2021/11/03/Sevlet%E8%B8%A9%E5%9D%91%E4%B8%8E%E8%8C%83%E5%BC%8F%E7%9A%84%E7%90%86%E8%A7%A3/</id>
    <published>2021-11-03T02:57:41.000Z</published>
    <updated>2024-02-26T04:31:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><p>最近学到 Servlet 的时候发现在自己电脑上老是部署不上去，原来还以为是 IDEA 的问题，于是接连抄了两次作业因为都完成不了。昨晚下决心搞定这个问题，折腾了一晚上终于解决了。<br>原来是 Tomcat10 把 javax.servlet 包改了个名字叫 jarkata.servlet，如果导入以前的包就会 500，提示 Class xx is NOT servlet.<br>此外还需要在刚开始建项目的时候选择 Java EE9，因为 Tomcat10 最低支持 servlet5.0，而 EE8 只支持 4.0，这样就会报 404。<br>最后是一个 Tomcat 报没有 artifact 的错误，去 configuration 添加以外，configuration 下面有个框记得点击打勾</p><blockquote><p>参考：<br><a href="https://blog.csdn.net/qq_43519779/article/details/115187415">https://blog.csdn.net/qq_43519779/article/details/115187415</a></p></blockquote><hr><h2 id="数据库三范式"><a href="#数据库三范式" class="headerlink" title="数据库三范式"></a>数据库三范式</h2><ul><li>一范式：没有可在分的数据项</li><li>二范式：有传递依赖</li><li>三范式：消除了传递依赖</li><li>传递依赖：学号-》系-》系主任 即是一种有传递关系的，学号为主码（或者说主键）</li></ul><p>举个例子：<br>一范式：<br>学号（主键） 姓名 系 系主任 课程名 分数<br>数据冗余：一个学生有好几个字段</p><p>二范式：<br>学号（主键） 姓名 系 系主任<br>学号（主键） 课程名 分数<br>删除系主任什么都没了<br>无学生光添加系和系主任是不可实现的</p><p>三范式：<br>学号（主键） 姓名<br>学号（主键） 课程名 分数<br>系（主键） 系主任</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;踩坑&quot;&gt;&lt;a href=&quot;#踩坑&quot; class=&quot;headerlink&quot; title=&quot;踩坑&quot;&gt;&lt;/a&gt;踩坑&lt;/h2&gt;&lt;p&gt;最近学到 Servlet 的时候发现在自己电脑上老是部署不上去，原来还以为是 IDEA 的问题，于是接连抄了两次作业因为都完成不了。昨晚下决</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>HTML学习笔记与C语言的回顾</title>
    <link href="https://yebingiscn.github.io/2021/10/14/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03%E4%B8%8EC%E8%AF%AD%E8%A8%80%E7%9A%84%E5%9B%9E%E9%A1%BE/"/>
    <id>https://yebingiscn.github.io/2021/10/14/HTML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03%E4%B8%8EC%E8%AF%AD%E8%A8%80%E7%9A%84%E5%9B%9E%E9%A1%BE/</id>
    <published>2021-10-14T14:00:12.000Z</published>
    <updated>2024-02-26T04:32:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML："><a href="#HTML：" class="headerlink" title="HTML："></a>HTML：</h2><p>今天碰到了一个 bug，一个同学跟我说他的提交就报 404，我仔细看了下，发现本来应该不变的地址变了。仔细一看原来是<br>form 那里多了空格，导致 HTML 回到了上一级目录自然就报错了。<br>源代码示意：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot; &quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  作用是将HTML分成一块块</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">on</span> <span class="attr">click</span>&gt;</span> #的意思是保留在当前页，on click是单击。<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="C-语言"><a href="#C-语言" class="headerlink" title="C 语言"></a>C 语言</h2><pre><code>因为操作系统又重新捡起了C语言。有的忘了，但是大多数还记得，虽然我学C的时候其实是学的C++。</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scanf_s(<span class="string">&quot;%d&quot;</span>,&amp;d);<span class="comment">//scanf_svs专用，输入的时候d要添加&amp;</span></span><br><span class="line">println(<span class="string">&quot;%d&quot;</span>,d)</span><br></pre></td></tr></table></figure><ul><li><p>％d 整型输出，％ld 长整型输出，</p></li><li><p>％o 以八进制数形式输出整数，</p></li><li><p>％x 以十六进制数形式输出整数，</p></li><li><p>％u 以十进制数输出 unsigned 型数据(无符号数)。</p></li><li><p>％c 用来输出一个字符，</p></li><li><p>％s 用来输出一个字符串，</p></li><li><p>％f 用来输出实数，以小数形式输出，（备注：浮点数是不能定义如的精度的，所以“%6.2f”这种写法是“错误的”！！！）</p></li><li><p>％e 以指数形式输出实数，</p></li><li><p>％g 根据大小自动选 f 格式或 e 格式，且不输出无意义的零。</p></li></ul><h3 id="冒泡排序（C-语言）"><a href="#冒泡排序（C-语言）" class="headerlink" title="冒泡排序（C 语言）"></a>冒泡排序（C 语言）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> temp, a[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; length; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] &lt; a[j] + <span class="number">1</span>)<span class="comment">//这里都是a[j]不是a[i]</span></span><br><span class="line">&#123;</span><br><span class="line">temp = a[j];</span><br><span class="line">a[j] = a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;HTML：&quot;&gt;&lt;a href=&quot;#HTML：&quot; class=&quot;headerlink&quot; title=&quot;HTML：&quot;&gt;&lt;/a&gt;HTML：&lt;/h2&gt;&lt;p&gt;今天碰到了一个 bug，一个同学跟我说他的提交就报 404，我仔细看了下，发现本来应该不变的地址变了。仔细一看原来是</summary>
      
    
    
    
    
    <category term="学习" scheme="https://yebingiscn.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
